(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    700268,      12498]
NotebookOptionsPosition[    698797,      12451]
NotebookOutlinePosition[    699324,      12472]
CellTagsIndexPosition[    699281,      12469]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Ratio1", "[", "\[Beta]r_", "]"}], ":=", 
   RowBox[{"(", " ", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"1.0", "-", 
      RowBox[{"\[Beta]r", "^", "2"}]}], "]"}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Brake1", "[", 
    RowBox[{"t_", ",", "\[Tau]_", ",", "\[Beta]r_"}], "]"}], ":=", 
   RowBox[{"\[Beta]r", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Tanh", "[", 
          RowBox[{"20", "t"}], "]"}]}], ")"}], "/", "2"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"Tanh", "[", 
          RowBox[{"20", 
           RowBox[{"(", 
            RowBox[{"t", "-", "\[Tau]"}], ")"}]}], "]"}]}], ")"}], "/", 
       "2"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Brake2", "[", 
    RowBox[{"t_", ",", "\[Tau]0_", ",", "\[Tau]_", ",", "\[Beta]r_"}], "]"}], 
   ":=", 
   RowBox[{"Fold", "[", 
    RowBox[{"Plus", ",", "0", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Brake1", "[", 
        RowBox[{
         RowBox[{"t", "-", 
          RowBox[{
          "\[Tau]0", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}],
          ",", 
         RowBox[{
         "\[Tau]", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{
         "\[Beta]r", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}],
         "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Tau]", "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Eta]", " ", "=", " ", 
    RowBox[{"Ratio1", "[", 
     RowBox[{"(", 
      RowBox[{"Brake2", "[", 
       RowBox[{"t", ",", "\[Tau]0", " ", ",", "\[Tau]", " ", ",", 
        SubscriptBox["\[Beta]", "r"]}], "]"}], ")"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Slip", " ", "angle"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "sl1"], "=", 
   RowBox[{
    RowBox[{"ArcTan", "[", 
     RowBox[{"3", "\[Eta]", "*", 
      SubscriptBox["\[Mu]", "1"], 
      RowBox[{
       SubscriptBox["F", "z1"], "/", 
       SubscriptBox["C", "\[Alpha]1"]}]}], "]"}], "/.", "rules"}]}], ";", 
  RowBox[{
   SubscriptBox["\[Alpha]", "sl2"], "=", 
   RowBox[{
    RowBox[{"ArcTan", "[", 
     RowBox[{"3", "\[Eta]", "*", 
      SubscriptBox["\[Mu]", "2"], 
      RowBox[{
       SubscriptBox["F", "z2"], "/", 
       SubscriptBox["C", "\[Alpha]2"]}]}], "]"}], "/.", "rules"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Alpha]", "sl3"], "=", 
    RowBox[{
     RowBox[{"ArcTan", "[", 
      RowBox[{"3", "\[Eta]", "*", 
       SubscriptBox["\[Mu]", "3"], 
       RowBox[{
        SubscriptBox["F", "z3"], "/", 
        SubscriptBox["C", "\[Alpha]3"]}]}], "]"}], "/.", "rules"}]}], ";", 
   RowBox[{
    SubscriptBox["\[Alpha]", "sl4"], "=", 
    RowBox[{
     RowBox[{"ArcTan", "[", 
      RowBox[{"3", "\[Eta]", "*", 
       SubscriptBox["\[Mu]", "4"], 
       RowBox[{
        SubscriptBox["F", "z4"], "/", 
        SubscriptBox["C", "\[Alpha]4"]}]}], "]"}], "/.", "rules"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Alpha]", "1"], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"y", "'"}], "[", "t", "]"}], " ", "+", " ", 
         RowBox[{
          SubscriptBox["l", "f"], 
          RowBox[{
           RowBox[{"\[Psi]", "'"}], "[", "t", "]"}]}]}], ")"}], "/", 
       RowBox[{
        RowBox[{"x", "'"}], "[", "t", "]"}]}], ")"}], "-", "\[Delta]"}], "/.",
     "rules"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Alpha]", "2"], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"y", "'"}], "[", "t", "]"}], " ", "+", " ", 
          RowBox[{
           SubscriptBox["l", "f"], 
           RowBox[{
            RowBox[{"\[Psi]", "'"}], "[", "t", "]"}]}]}], ")"}], "/", 
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}]}], ")"}], "-", "\[Delta]"}], "/.",
      "rules"}]}], ";", 
   RowBox[{
    SubscriptBox["\[Alpha]", "3"], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"y", "'"}], "[", "t", "]"}], " ", "+", " ", 
         RowBox[{
          SubscriptBox["l", "f"], 
          RowBox[{
           RowBox[{"\[Psi]", "'"}], "[", "t", "]"}]}]}], ")"}], "/", 
       RowBox[{
        RowBox[{"x", "'"}], "[", "t", "]"}]}], ")"}], "/.", "rules"}]}], ";", 
   RowBox[{
    SubscriptBox["\[Alpha]", "4"], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"y", "'"}], "[", "t", "]"}], " ", "+", " ", 
         RowBox[{
          SubscriptBox["l", "f"], 
          RowBox[{
           RowBox[{"\[Psi]", "'"}], "[", "t", "]"}]}]}], ")"}], "/", 
       RowBox[{
        RowBox[{"x", "'"}], "[", "t", "]"}]}], ")"}], "/.", "rules"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tire", "  ", "Force"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["f", "y1"], "=", 
   RowBox[{
    RowBox[{"Piecewise", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SubscriptBox["C", "\[Alpha]1"]}], 
           RowBox[{"Tan", "[", 
            SubscriptBox["\[Alpha]", "1"], "]"}]}], "+", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               SubscriptBox["C", "\[Alpha]1"], ")"}], "^", "2"}], "/", 
             RowBox[{"(", 
              RowBox[{"3", "\[Eta]", "*", 
               SubscriptBox["\[Mu]", "1"], 
               SubscriptBox["F", "z1"]}], ")"}]}], " ", 
            RowBox[{"Abs", "[", 
             RowBox[{"Tan", "[", 
              SubscriptBox["\[Alpha]", "1"], "]"}], "]"}], " ", 
            RowBox[{"Tan", "[", 
             SubscriptBox["\[Alpha]", "1"], "]"}]}], ")"}], "-", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               SubscriptBox["C", "\[Alpha]1"], ")"}], "^", "3"}], "/", 
             RowBox[{"(", 
              RowBox[{"27", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", "\[Eta]", ")"}], "^", "2"}], 
                  SubscriptBox["\[Mu]", "1"], 
                  SubscriptBox["F", "z1"]}], ")"}], "^", "2"}]}], ")"}]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Tan", "[", 
               SubscriptBox["\[Alpha]", "1"], "]"}], ")"}], "^", "3"}]}], 
           ")"}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Abs", "[", 
            SubscriptBox["\[Alpha]", "1"], "]"}], ")"}], "<", 
          SubscriptBox["\[Alpha]", "sl1"]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Eta]"}], " ", 
          SubscriptBox["\[Mu]", "1"], 
          SubscriptBox["F", "z1"], 
          RowBox[{"Sign", "[", 
           SubscriptBox["\[Alpha]", "1"], "]"}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Abs", "[", 
            SubscriptBox["\[Alpha]", "1"], "]"}], ")"}], "\[GreaterEqual]", 
          SubscriptBox["\[Alpha]", "sl1"]}]}], "}"}]}], "}"}], "]"}], "/.", 
    "rules"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["f", "y2"], "=", 
   RowBox[{
    RowBox[{"Piecewise", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SubscriptBox["C", "\[Alpha]2"]}], " ", 
           RowBox[{"Tan", "[", 
            SubscriptBox["\[Alpha]", "2"], "]"}]}], "+", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               SubscriptBox["C", "\[Alpha]2"], ")"}], "^", "2"}], "/", 
             RowBox[{"(", 
              RowBox[{"3", "\[Eta]", "*", 
               SubscriptBox["\[Mu]", "2"], 
               SubscriptBox["F", "z2"]}], ")"}]}], " ", 
            RowBox[{"Abs", "[", 
             RowBox[{"Tan", "[", 
              SubscriptBox["\[Alpha]", "2"], "]"}], "]"}], " ", 
            RowBox[{"Tan", "[", 
             SubscriptBox["\[Alpha]", "2"], "]"}]}], ")"}], "-", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               SubscriptBox["C", "\[Alpha]2"], ")"}], "^", "3"}], "/", 
             RowBox[{"(", 
              RowBox[{"27", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Eta]", "^", "2"}], 
                  SubscriptBox["\[Mu]", "2"], 
                  SubscriptBox["F", "z2"]}], ")"}], "^", "2"}]}], ")"}]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Tan", "[", 
               SubscriptBox["\[Alpha]", "2"], "]"}], ")"}], "^", "3"}]}], 
           ")"}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Abs", "[", 
            SubscriptBox["\[Alpha]", "2"], "]"}], ")"}], "<", 
          SubscriptBox["\[Alpha]", "sl2"]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Eta]"}], " ", 
          SubscriptBox["\[Mu]", "2"], 
          SubscriptBox["F", "z2"], 
          RowBox[{"Sign", "[", 
           SubscriptBox["\[Alpha]", "2"], "]"}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Abs", "[", 
            SubscriptBox["\[Alpha]", "2"], "]"}], ")"}], "\[GreaterEqual]", 
          SubscriptBox["\[Alpha]", "sl2"]}]}], "}"}]}], "}"}], "]"}], "/.", 
    "rules"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["f", "y3"], "=", 
   RowBox[{
    RowBox[{"Piecewise", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SubscriptBox["C", "\[Alpha]3"]}], " ", 
           RowBox[{"Tan", "[", 
            SubscriptBox["\[Alpha]", "3"], "]"}]}], "+", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               SubscriptBox["C", "\[Alpha]3"], ")"}], "^", "2"}], "/", 
             RowBox[{"(", 
              RowBox[{"3", "\[Eta]", "*", 
               SubscriptBox["\[Mu]", "3"], 
               SubscriptBox["F", "z3"]}], ")"}]}], " ", 
            RowBox[{"Abs", "[", 
             RowBox[{"Tan", "[", 
              SubscriptBox["\[Alpha]", "3"], "]"}], "]"}], " ", 
            RowBox[{"Tan", "[", 
             SubscriptBox["\[Alpha]", "3"], "]"}]}], ")"}], "-", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               SubscriptBox["C", "\[Alpha]3"], ")"}], "^", "3"}], "/", 
             RowBox[{"(", 
              RowBox[{"27", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Eta]", "^", "2"}], 
                  SubscriptBox["\[Mu]", "3"], 
                  SubscriptBox["F", "z3"]}], ")"}], "^", "2"}]}], ")"}]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Tan", "[", 
               SubscriptBox["\[Alpha]", "3"], "]"}], ")"}], "^", "3"}]}], 
           ")"}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Abs", "[", 
            SubscriptBox["\[Alpha]", "3"], "]"}], ")"}], "<", 
          SubscriptBox["\[Alpha]", "sl3"]}]}], "}"}], ",", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Eta]"}], " ", 
          SubscriptBox["\[Mu]", "3"], 
          SubscriptBox["F", "z3"], 
          RowBox[{"Sign", "[", 
           SubscriptBox["\[Alpha]", "3"], "]"}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Abs", "[", 
            SubscriptBox["\[Alpha]", "3"], "]"}], ")"}], "\[GreaterEqual]", 
          SubscriptBox["\[Alpha]", "sl3"]}]}], "}"}]}], "}"}], "]"}], "/.", 
    "rules"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["f", "y4"], "=", 
    RowBox[{
     RowBox[{"Piecewise", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SubscriptBox["C", "\[Alpha]4"]}], " ", 
            RowBox[{"Tan", "[", 
             SubscriptBox["\[Alpha]", "4"], "]"}]}], "+", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                SubscriptBox["C", "\[Alpha]4"], ")"}], "^", "2"}], "/", 
              RowBox[{"(", 
               RowBox[{"3", "\[Eta]", "*", 
                SubscriptBox["\[Mu]", "4"], 
                SubscriptBox["F", "z4"]}], ")"}]}], " ", 
             RowBox[{"Abs", "[", 
              RowBox[{"Tan", "[", 
               SubscriptBox["\[Alpha]", "4"], "]"}], "]"}], " ", 
             RowBox[{"Tan", "[", 
              SubscriptBox["\[Alpha]", "4"], "]"}]}], ")"}], "-", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                SubscriptBox["C", "\[Alpha]4"], ")"}], "^", "3"}], "/", 
              RowBox[{"(", 
               RowBox[{"27", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Eta]", "^", "2"}], 
                   SubscriptBox["\[Mu]", "4"], 
                   SubscriptBox["F", "z4"]}], ")"}], "^", "2"}]}], ")"}]}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Tan", "[", 
                SubscriptBox["\[Alpha]", "4"], "]"}], ")"}], "^", "3"}]}], 
            ")"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Abs", "[", 
             SubscriptBox["\[Alpha]", "4"], "]"}], ")"}], "<", 
           SubscriptBox["\[Alpha]", "sl4"]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Eta]"}], " ", 
           SubscriptBox["\[Mu]", "4"], 
           SubscriptBox["F", "z4"], 
           RowBox[{"Sign", "[", 
            SubscriptBox["\[Alpha]", "4"], "]"}]}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Abs", "[", 
             SubscriptBox["\[Alpha]", "4"], "]"}], ")"}], "\[GreaterEqual]", 
           SubscriptBox["\[Alpha]", "sl4"]}]}], "}"}]}], "}"}], "]"}], "/.", 
     "rules"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["F", "x1"], " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Brake2", "[", 
        RowBox[{"t", ",", "\[Tau]0", ",", "\[Tau]", ",", 
         SubscriptBox["\[Beta]", "r"]}], "]"}], ")"}], "*", 
      SubscriptBox["\[Mu]", "1"], 
      SubscriptBox["F", "z1"], 
      RowBox[{"Cos", "[", "\[Delta]", "]"}]}], " ", "-", " ", 
     RowBox[{
      SubscriptBox["f", "y1"], " ", 
      RowBox[{"Sin", "[", "\[Delta]", "]"}]}]}], "/.", "rules"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["F", "x2"], " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Brake2", "[", 
        RowBox[{"t", ",", "\[Tau]0", ",", "\[Tau]", ",", 
         SubscriptBox["\[Beta]", "r"]}], "]"}], ")"}], "*", 
      SubscriptBox["\[Mu]", "2"], 
      SubscriptBox["F", "z2"], " ", 
      RowBox[{"Cos", "[", "\[Delta]", "]"}]}], " ", "-", " ", 
     RowBox[{
      SubscriptBox["f", "y2"], " ", 
      RowBox[{"Sin", "[", "\[Delta]", "]"}]}]}], "/.", "rules"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["F", "x3"], " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Brake2", "[", 
        RowBox[{"t", ",", "\[Tau]0", ",", "\[Tau]", ",", 
         SubscriptBox["\[Beta]", "r"]}], "]"}], ")"}], "*", 
      SubscriptBox["\[Mu]", "3"], 
      SubscriptBox["F", "z3"], " ", 
      RowBox[{"Cos", "[", "0", "]"}]}], " ", "-", " ", 
     RowBox[{
      SubscriptBox["f", "y3"], " ", 
      RowBox[{"Sin", "[", "0", "]"}]}]}], "/.", "rules"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["F", "x4"], " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Brake2", "[", 
         RowBox[{"t", ",", "\[Tau]0", ",", "\[Tau]", ",", 
          SubscriptBox["\[Beta]", "r"]}], "]"}], ")"}], "*", 
       SubscriptBox["\[Mu]", "4"], 
       SubscriptBox["F", "z4"], " ", 
       RowBox[{"Cos", "[", "0", "]"}]}], " ", "-", " ", 
      RowBox[{
       SubscriptBox["f", "y4"], " ", 
       RowBox[{"Sin", "[", "0", "]"}]}]}], "/.", "rules"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["F", "y1"], " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Brake2", "[", 
        RowBox[{"t", ",", "\[Tau]0", ",", "\[Tau]", ",", 
         SubscriptBox["\[Beta]", "r"]}], "]"}], ")"}], "*", 
      SubscriptBox["\[Mu]", "1"], 
      SubscriptBox["F", "z1"], " ", 
      RowBox[{"Sin", "[", "\[Delta]", "]"}]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["f", "y1"], " ", 
      RowBox[{"Cos", "[", "\[Delta]", "]"}]}]}], "/.", "rules"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["F", "y2"], " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Brake2", "[", 
        RowBox[{"t", ",", "\[Tau]0", ",", "\[Tau]", ",", 
         SubscriptBox["\[Beta]", "r"]}], "]"}], ")"}], "*", 
      SubscriptBox["\[Mu]", "2"], 
      SubscriptBox["F", "z2"], 
      RowBox[{"Sin", "[", "\[Delta]", "]"}]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["f", "y2"], " ", 
      RowBox[{"Cos", "[", "\[Delta]", "]"}]}]}], "/.", "rules"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["F", "y3"], " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Brake2", "[", 
        RowBox[{"t", ",", "\[Tau]0", ",", "\[Tau]", ",", 
         SubscriptBox["\[Beta]", "r"]}], "]"}], ")"}], "*", 
      SubscriptBox["\[Mu]", "3"], 
      SubscriptBox["F", "z3"], " ", 
      RowBox[{"Sin", "[", "0", "]"}]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["f", "y3"], " ", 
      RowBox[{"Cos", "[", "0", "]"}]}]}], "/.", "rules"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["F", "y4"], " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Brake2", "[", 
         RowBox[{"t", ",", "\[Tau]0", ",", "\[Tau]", ",", 
          SubscriptBox["\[Beta]", "r"]}], "]"}], ")"}], "*", 
       SubscriptBox["\[Mu]", "4"], 
       SubscriptBox["F", "z4"], " ", 
       RowBox[{"Sin", "[", "0", "]"}]}], " ", "+", " ", 
      RowBox[{
       SubscriptBox["f", "y4"], " ", 
       RowBox[{"Cos", "[", "0", "]"}]}]}], "/.", "rules"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eq1", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], " ", "\[Equal]", " ", 
     RowBox[{
      RowBox[{"m", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"y", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "1"}], "}"}]}], "]"}], 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], " ", "+", " ", 
      SubscriptBox["F", "x1"], " ", "+", 
      SubscriptBox["F", "x2"], " ", "+", 
      SubscriptBox["F", "x3"], " ", "+", 
      SubscriptBox["F", "x4"]}]}], "/.", "rules"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eq2", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"y", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], " ", "\[Equal]", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "m"}], " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "1"}], "}"}]}], "]"}], " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], " ", "+", " ", 
      SubscriptBox["F", "y1"], "+", " ", 
      SubscriptBox["F", "y2"], "+", " ", 
      SubscriptBox["F", "y3"], "+", " ", 
      SubscriptBox["F", "y4"]}]}], "/.", "rules"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eq3", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["J", "z"], 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], " ", "\[Equal]", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["l", "f"], 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["F", "y1"], " ", "+", " ", 
         SubscriptBox["F", "y2"]}], ")"}]}], " ", "-", " ", 
      RowBox[{
       SubscriptBox["l", "r"], "*", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["F", "y3"], " ", "+", " ", 
         SubscriptBox["F", "y4"]}], ")"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Omega]", "t"], "/", "2"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SubscriptBox["F", "x1"]}], " ", "+", " ", 
         SubscriptBox["F", "x2"], " ", "-", " ", 
         SubscriptBox["F", "x3"], " ", "+", " ", 
         SubscriptBox["F", "x4"]}], ")"}]}]}]}], "/.", "rules"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eq4", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["e", "\[Psi]"], "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], "\[Equal]", 
     RowBox[{
      RowBox[{"m", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], "-", 
      RowBox[{"m", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Psi]", "d"], "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}]}]}], "/.", "rules"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eq5", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["e", "y"], "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], "\[Equal]", 
     RowBox[{
      RowBox[{"m", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"y", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "1"}], "}"}]}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["e", "\[Psi]"], "[", "t", "]"}], "]"}]}], " ", "+", " ", 
      RowBox[{"m", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "1"}], "}"}]}], "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["e", "\[Psi]"], "[", "t", "]"}], "]"}]}]}]}], "/.", 
    "rules"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Eq6", "=", " ", 
  RowBox[{
   SubscriptBox["\[Psi]", "d"], "[", "t", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rules", " ", "=", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       SubscriptBox["C", "\[Alpha]1"], "\[Rule]", "80000.0"}], ",", 
      RowBox[{
       SubscriptBox["C", "\[Alpha]2"], "\[Rule]", "80000.0"}], ",", 
      RowBox[{
       SubscriptBox["C", "\[Alpha]3"], "\[Rule]", "80000.0"}], ",", 
      RowBox[{
       SubscriptBox["C", "\[Alpha]4"], "\[Rule]", "80000.0"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["\[Mu]", "1"], "\[Rule]", "1.0"}], ",", 
      RowBox[{
       SubscriptBox["\[Mu]", "2"], "\[Rule]", "1.0"}], ",", 
      RowBox[{
       SubscriptBox["\[Mu]", "3"], "\[Rule]", "1.0"}], ",", 
      RowBox[{
       SubscriptBox["\[Mu]", "4"], "\[Rule]", "1.0"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["F", "z1"], "\[Rule]", "26719.0"}], ",", 
      RowBox[{
       SubscriptBox["F", "z2"], "\[Rule]", "26719.0"}], ",", 
      RowBox[{
       SubscriptBox["F", "z3"], "\[Rule]", "21295.0"}], ",", 
      RowBox[{
       SubscriptBox["F", "z4"], "\[Rule]", "21295.0"}], 
      RowBox[{"(*", 
       RowBox[{"NOT", " ", "SURE"}], "*)"}], ",", "\[IndentingNewLine]", 
      RowBox[{"m", " ", "\[Rule]", "2050.0"}], ",", 
      RowBox[{
       SubscriptBox["\[Omega]", "t"], "\[Rule]", "1.63"}], ",", 
      RowBox[{
       SubscriptBox["l", "f"], "\[Rule]", "1.43"}], ",", 
      RowBox[{
       SubscriptBox["l", "r"], "\[Rule]", "1.47"}], " ", ",", " ", 
      RowBox[{
       SubscriptBox["J", "z"], " ", "\[Rule]", " ", "3344.0"}], " ", ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["K", "y"], "\[Rule]", " ", 
       RowBox[{"-", "0.1"}]}], ",", 
      RowBox[{
       SubscriptBox["K", "\[Psi]"], "\[Rule]", " ", 
       RowBox[{"-", "1.1"}]}], ",", 
      RowBox[{
       SubscriptBox["\[Psi]", "d1"], " ", "\[Rule]", "0.12"}], ",", 
      RowBox[{
       SubscriptBox["t", "lp"], " ", "\[Rule]", " ", "0.1"}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"time", " ", "=", " ", "50"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]0", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "10", ",", "20", ",", "50"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5", ",", "5", ",", "5"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Beta]", "r"], "=", 
    RowBox[{"{", 
     RowBox[{"0.1", ",", "0.5", ",", 
      RowBox[{"-", "0.5"}], ",", "0.6"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Psi]", "d"], "[", "t", "]"}], "=", 
   RowBox[{
    RowBox[{"0.1", 
     RowBox[{"Sin", "[", 
      RowBox[{"10", "t"}], "]"}]}], "/.", "rules"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["K", "y"], 
       RowBox[{
        SubscriptBox["e", "y"], "[", "t", "]"}]}], "+", 
      RowBox[{
       SubscriptBox["K", "\[Psi]"], 
       RowBox[{
        SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], "+", 
      RowBox[{
       SubscriptBox["K", "\[Psi]"], 
       RowBox[{
        SubscriptBox["\[Psi]", "d"], "[", "t", "]"}]}], "-", 
      RowBox[{
       SubscriptBox["K", "\[Psi]"], 
       SubscriptBox["\[Psi]", "d1"]}]}], "/.", "rules"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Button", "[", 
   RowBox[{"\"\<STOP\>\"", ",", 
    RowBox[{"stop", "=", "true"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Internal`RealValuedNumberQ", "/@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], ",", 
     RowBox[{"ArcCos", "[", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["t", "lp"], " ", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}], "^", "2"}], 
           "+", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"y", "[", "t", "]"}], ",", "t"}], "]"}], "^", "2"}]}], 
          "]"}]}], ")"}]}], "]"}]}], "}"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"initCond", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0.1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "0.1"}], ",", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0.1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "0.01"}], ",", 
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "\[Equal]", "0.01"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "'"}], "[", "0", "]"}], "\[Equal]", "0.01"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["e", "y"], "[", "0", "]"}], "\[Equal]", "0.08"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["e", "\[Psi]"], "[", "0", "]"}], "\[Equal]", "0.1"}]}], 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solution", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "Eq1", ",", "Eq2", ",", "Eq3", ",", "Eq4", ",", "Eq5", ",", 
       "initCond"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "\[Psi]", ",", 
       SubscriptBox["e", "y"], ",", 
       SubscriptBox["e", "\[Psi]"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "time"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", 
        RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "solution"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "time"}], "}"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<t\>\"", ",", "\"\<x,y\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x(t)\>\"", ",", "\"\<y(t)\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "'"}], "[", "t", "]"}], ",", 
        RowBox[{
         RowBox[{"y", "'"}], "[", "t", "]"}]}], "}"}], "/.", "solution"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "time"}], "}"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<t\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(v\), \(x\)]\),\!\(\*SubscriptBox[\(v\), \
\(y\)]\)\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(v\), \(x\)]\)(t)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(v\), \(y\)]\)(t)\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "''"}], "[", "t", "]"}], ",", 
        RowBox[{
         RowBox[{"y", "''"}], "[", "t", "]"}]}], "}"}], "/.", "solution"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "time"}], "}"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<t\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(a\), \(x\)]\),\!\(\*SubscriptBox[\(a\), \
\(y\)]\)\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(a\), \(x\)]\)(t)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(a\), \(y\)]\)(t)\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["e", "y"], "[", "t", "]"}], "}"}], "/.", "solution"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "time"}], "}"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<t\>\"", ",", "\"\<\[Eta]\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<\[Eta]\>\"", "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", "\[Delta]", "}"}], "/.", "solution"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "time"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<\[Delta]\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<\[Delta]\>\"", "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "solution"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "time"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.624196325100603*^9, 3.6241963437600574`*^9}, {
   3.624196376806099*^9, 3.6241964907461176`*^9}, {3.624196545026332*^9, 
   3.624196567544357*^9}, {3.6241966819646935`*^9, 3.6241968363356905`*^9}, {
   3.624196868505151*^9, 3.6241969190468736`*^9}, {3.6241969942590513`*^9, 
   3.6241971343064938`*^9}, {3.6241971984903097`*^9, 
   3.6241972249649744`*^9}, {3.6241972664746695`*^9, 
   3.6241973851128225`*^9}, {3.6241974731525593`*^9, 
   3.6241976041019287`*^9}, {3.6241976389511766`*^9, 
   3.6241977238558235`*^9}, {3.624197760078991*^9, 3.6241977630329638`*^9}, {
   3.6241978065469933`*^9, 3.6241978654733086`*^9}, {3.624197899688138*^9, 
   3.6241980344950833`*^9}, {3.6241985633168945`*^9, 3.624198657793927*^9}, {
   3.624198869158951*^9, 3.624198874531535*^9}, {3.624199284939352*^9, 
   3.6241993916355352`*^9}, {3.624199437406071*^9, 3.6241994649514523`*^9}, {
   3.624200520185187*^9, 3.6242005588900104`*^9}, {3.624201284315*^9, 
   3.6242013914935045`*^9}, {3.624201434918482*^9, 3.6242014354358253`*^9}, {
   3.624201502906839*^9, 3.624201525439872*^9}, {3.6242016607391405`*^9, 
   3.6242017247068186`*^9}, {3.624201818708536*^9, 3.62420186890403*^9}, {
   3.624201903171886*^9, 3.6242020533710985`*^9}, 3.624202083910473*^9, {
   3.6242021155675936`*^9, 3.624202144827117*^9}, {3.6242139415763044`*^9, 
   3.624214236563114*^9}, {3.6242142846371865`*^9, 3.6242143142779627`*^9}, {
   3.6242143986632643`*^9, 3.6242144273414*^9}, {3.624214547682685*^9, 
   3.624214598885847*^9}, {3.624214731289183*^9, 3.624214875940693*^9}, {
   3.624215009472782*^9, 3.6242150150735188`*^9}, {3.6242152066913633`*^9, 
   3.624215233789442*^9}, {3.624215428412897*^9, 3.624215447837859*^9}, {
   3.6242157061001654`*^9, 3.6242158202223053`*^9}, {3.624216066257454*^9, 
   3.6242165541759834`*^9}, {3.624216627891164*^9, 3.6242166601356792`*^9}, {
   3.6242167232738028`*^9, 3.6242167338838806`*^9}, {3.6242167847137938`*^9, 
   3.6242167913292055`*^9}, {3.624216837345908*^9, 3.624216841886938*^9}, {
   3.624216917717536*^9, 3.6242169194947157`*^9}, {3.6242169518953333`*^9, 
   3.6242169530260873`*^9}, {3.6242171636669564`*^9, 3.624217177831417*^9}, {
   3.6242172091302853`*^9, 3.624217244018563*^9}, {3.6242172982987757`*^9, 
   3.624217367326831*^9}, {3.6242174866155596`*^9, 3.6242176375242434`*^9}, {
   3.624217677305787*^9, 3.6242176790489464`*^9}, {3.6242177107340865`*^9, 
   3.6242177147827873`*^9}, {3.624217821042689*^9, 3.624217865249175*^9}, {
   3.6242179216157956`*^9, 3.624217944339945*^9}, {3.624217993922024*^9, 
   3.624218019144851*^9}, {3.6242183724755945`*^9, 3.624218398778138*^9}, {
   3.6242184585219936`*^9, 3.6242184960700502`*^9}, {3.624218599888311*^9, 
   3.6242186004686985`*^9}, {3.6242187296270313`*^9, 3.624218734895545*^9}, {
   3.6242188004418526`*^9, 3.624218834593811*^9}, {3.624261534269424*^9, 
   3.624261555117385*^9}, {3.6242616311423116`*^9, 3.6242616326683273`*^9}, {
   3.6242627734353414`*^9, 3.6242630201479406`*^9}, {3.6242630783807945`*^9, 
   3.624263087641972*^9}, {3.6242631838481617`*^9, 3.6242633559029517`*^9}, {
   3.6242634350257387`*^9, 3.62426345422355*^9}, {3.6242638570843277`*^9, 
   3.624263923925926*^9}, {3.624264001414624*^9, 3.624264005835574*^9}, 
   3.6242642936525993`*^9, {3.6242644511927066`*^9, 3.6242644710809736`*^9}, {
   3.6242645959843082`*^9, 3.624264616767174*^9}, {3.6242646622235003`*^9, 
   3.62426467809409*^9}, {3.6242652040570016`*^9, 3.6242652151784215`*^9}, {
   3.6242657098438005`*^9, 3.624265896830555*^9}, {3.6242659870577526`*^9, 
   3.6242660433523116`*^9}, {3.624266134226939*^9, 3.624266155713277*^9}, {
   3.6242662029457884`*^9, 3.6242662037002926`*^9}, {3.624266334876809*^9, 
   3.624266410114007*^9}, {3.624266841921101*^9, 3.6242668705892267`*^9}, {
   3.624266910455825*^9, 3.6242669524368334`*^9}, {3.624267345358981*^9, 
   3.6242673798570004`*^9}, {3.624267429870367*^9, 3.6242674302756357`*^9}, {
   3.62426762651056*^9, 3.624267658216715*^9}, {3.6242677405116215`*^9, 
   3.6242677788552046`*^9}, 3.6242678155446815`*^9, {3.624267856892267*^9, 
   3.6242678731150913`*^9}, {3.6242680459774213`*^9, 
   3.6242680550504723`*^9}, {3.6242833949758673`*^9, 3.624283397879033*^9}, {
   3.6256606092314987`*^9, 3.6256606376765065`*^9}, {3.6256611227766523`*^9, 
   3.625661131268327*^9}, {3.625662270885947*^9, 3.625662272847254*^9}, 
   3.625662356245982*^9, 3.62566261988815*^9, 3.625662746057455*^9, 
   3.6256628228507795`*^9, {3.625665422137724*^9, 3.625665433409257*^9}, {
   3.6256654844683733`*^9, 3.625665493941701*^9}, 3.6256663104372897`*^9, {
   3.6256665954587398`*^9, 3.625666595691895*^9}, 3.6256667867145386`*^9, {
   3.6256675113917875`*^9, 3.6256675246586504`*^9}, {3.6256689100553675`*^9, 
   3.625668918933302*^9}, {3.6256689555927963`*^9, 3.625669119075048*^9}, {
   3.625669438551509*^9, 3.6256694459134426`*^9}, {3.62566968844549*^9, 
   3.6256696977146854`*^9}, {3.625669782685463*^9, 3.625669856067499*^9}, 
   3.6256713182055054`*^9, {3.625671378407734*^9, 3.6256714791430426`*^9}, {
   3.625672152180771*^9, 3.6256721595346837`*^9}, {3.6256730298392277`*^9, 
   3.6256730408535995`*^9}, 3.6256746893074045`*^9, {3.6256840845195184`*^9, 
   3.625684092001521*^9}, 3.6256841831644325`*^9, {3.6256842287929354`*^9, 
   3.6256842478836823`*^9}, 3.625684353627339*^9, {3.625684390494974*^9, 
   3.625684440254222*^9}, {3.625684536557576*^9, 3.6256845403641157`*^9}, {
   3.625684741883788*^9, 3.625684765738715*^9}, 3.625684839065708*^9, {
   3.6256849864171724`*^9, 3.625684986639321*^9}, {3.6256871252373447`*^9, 
   3.6256871357994013`*^9}, {3.62572147912282*^9, 3.6257214799193387`*^9}, {
   3.625729537346779*^9, 3.6257295380438185`*^9}, 3.62572990784797*^9, {
   3.6257307910164843`*^9, 3.6257308560292034`*^9}, {3.6257309196908445`*^9, 
   3.625731028503068*^9}, {3.6257311132529154`*^9, 3.6257311202503157`*^9}, {
   3.6257323829905405`*^9, 3.6257324187265844`*^9}, {3.625732514145042*^9, 
   3.6257325179692607`*^9}, {3.6257413839281597`*^9, 
   3.6257413928010902`*^9}, {3.6257432140590773`*^9, 3.625743223441346*^9}, {
   3.625743283030167*^9, 3.625743310818737*^9}, {3.625743410875605*^9, 
   3.6257434123335657`*^9}, {3.625743462754261*^9, 3.625743567356152*^9}, {
   3.6257437362420034`*^9, 3.625743796133024*^9}, 3.62574383462875*^9, {
   3.62574389163384*^9, 3.625743902676216*^9}, {3.6257440203418427`*^9, 
   3.6257440207391047`*^9}, {3.625744070676473*^9, 3.6257440709706736`*^9}, {
   3.6257441048343115`*^9, 3.6257441050134315`*^9}, {3.625744755261931*^9, 
   3.6257447994354353`*^9}, {3.6257448536376534`*^9, 
   3.6257448580506144`*^9}, {3.6257448920122943`*^9, 
   3.6257449403135695`*^9}, {3.625745010584527*^9, 3.6257451712298727`*^9}, {
   3.625745308926877*^9, 3.625745312083987*^9}, {3.625745375840605*^9, 
   3.6257453964153414`*^9}, {3.6257455116213193`*^9, 
   3.6257455165105877`*^9}, {3.6257458158426046`*^9, 3.625745822167828*^9}, {
   3.625745984898568*^9, 3.625746105363063*^9}, {3.625746161981894*^9, 
   3.6257464405390315`*^9}, {3.6257465900419264`*^9, 
   3.6257466612805424`*^9}, {3.6257467155778246`*^9, 3.625746738823346*^9}, {
   3.625746783007866*^9, 3.6257470572000866`*^9}, {3.625747208912459*^9, 
   3.6257472669942694`*^9}, {3.625747750810559*^9, 3.625747772159837*^9}, {
   3.62574788385446*^9, 3.6257479534109364`*^9}, {3.625747985038083*^9, 
   3.6257480186075044`*^9}, {3.6257480731109343`*^9, 3.625748154431259*^9}, {
   3.6257482324764137`*^9, 3.625748237758955*^9}, {3.625748280882754*^9, 
   3.6257485610559716`*^9}, {3.6257486077982054`*^9, 3.625748749104632*^9}, {
   3.625748824960311*^9, 3.62574898721673*^9}, 3.625749836553261*^9, {
   3.625749898022337*^9, 3.6257499712172565`*^9}, {3.6257500821683855`*^9, 
   3.625750120200801*^9}, {3.6257502452643657`*^9, 3.6257503018201685`*^9}, {
   3.6257503679663553`*^9, 3.625750384352307*^9}, {3.6257505558589077`*^9, 
   3.625750580086099*^9}, {3.625750783151785*^9, 3.6257508814985003`*^9}, {
   3.6257509198141055`*^9, 3.62575096235653*^9}, {3.6257510202792473`*^9, 
   3.6257510620941744`*^9}, 3.6257511153477597`*^9, {3.6257511892231245`*^9, 
   3.6257513265148616`*^9}, 3.6257514051293926`*^9, {3.62575143623818*^9, 
   3.6257514373559265`*^9}, {3.6257514809290423`*^9, 3.625751521071868*^9}, {
   3.625751604280465*^9, 3.6257516060636578`*^9}, {3.6257517522873645`*^9, 
   3.625751757661956*^9}, {3.6257519889685183`*^9, 3.6257521185811243`*^9}, {
   3.625752451068294*^9, 3.6257525455534306`*^9}, {3.625752716797856*^9, 
   3.6257527545100555`*^9}, {3.6257528069080687`*^9, 
   3.6257528814518776`*^9}, {3.6257530826234927`*^9, 3.625753082840644*^9}, {
   3.625753376201663*^9, 3.625753399281086*^9}, {3.6257534741501136`*^9, 
   3.6257535653000355`*^9}, {3.6257547698569107`*^9, 
   3.6257547732121563`*^9}, {3.625754897573253*^9, 3.6257548979034758`*^9}, 
   3.625754983861912*^9, {3.6257550624714375`*^9, 3.625755123589277*^9}, {
   3.6257554038265347`*^9, 3.6257557757070246`*^9}, {3.625755815345515*^9, 
   3.625755848458652*^9}, {3.6257559369717827`*^9, 3.625755970367102*^9}, {
   3.625756050924928*^9, 3.6257560889423327`*^9}, {3.6257562076726665`*^9, 
   3.6257562115492716`*^9}, {3.6257562547541304`*^9, 3.62575639776469*^9}, {
   3.6257564278628025`*^9, 3.6257564438344707`*^9}, {3.625756476819515*^9, 
   3.6257565275784335`*^9}, {3.625756603043869*^9, 3.6257566762357626`*^9}, {
   3.6257568498897996`*^9, 3.6257568757670937`*^9}, {3.625756965380973*^9, 
   3.625756981922025*^9}, {3.6257575193731527`*^9, 3.6257575475179615`*^9}, {
   3.6257575833639145`*^9, 3.6257575946364565`*^9}, {3.625757649393034*^9, 
   3.6257576637816463`*^9}, {3.625841080833971*^9, 3.6258410932052407`*^9}, 
   3.625841147625253*^9, {3.6258411845248957`*^9, 3.6258411927313824`*^9}, 
   3.625841233528655*^9, {3.6258412803759427`*^9, 3.625841338500785*^9}, {
   3.6258425823459277`*^9, 3.6258426080811224`*^9}, {3.625843371781436*^9, 
   3.6258433741290016`*^9}, {3.6266775478265543`*^9, 3.626677562741407*^9}, {
   3.6268633666452975`*^9, 3.626863549900752*^9}, {3.6268637053966556`*^9, 
   3.62686370731894*^9}, {3.6268637415908375`*^9, 3.6268638129235024`*^9}, {
   3.626863851490274*^9, 3.62686386900299*^9}, {3.6268639533903675`*^9, 
   3.6268639958307257`*^9}, {3.6268641203859525`*^9, 
   3.6268641563659935`*^9}, {3.6268641980778675`*^9, 
   3.6268642010478506`*^9}, {3.6268643117618313`*^9, 3.626864316819209*^9}, 
   3.626864365392667*^9, {3.6268644238006945`*^9, 3.6268644486152763`*^9}, {
   3.626864722568333*^9, 3.6268647232598085`*^9}, 3.626864822802312*^9, 
   3.6268648850038757`*^9, {3.6268650345618114`*^9, 3.6268650513390207`*^9}, {
   3.626865084553213*^9, 3.626865084756356*^9}, {3.626866592482823*^9, 
   3.626866597428136*^9}, {3.626866629722706*^9, 3.6268666311066275`*^9}, {
   3.6268666691700745`*^9, 3.626866684837532*^9}, {3.6268667257969027`*^9, 
   3.6268667259750185`*^9}, {3.62686675898608*^9, 3.626866786348363*^9}, {
   3.6268668170869*^9, 3.6268668205011864`*^9}, 3.626867393646164*^9, {
   3.62686744497946*^9, 3.626867527191399*^9}, {3.6268675610830436`*^9, 
   3.6268675617384815`*^9}, {3.626867592306908*^9, 3.626867892505515*^9}, {
   3.6268679895513487`*^9, 3.6268680048645945`*^9}, {3.6268681449128995`*^9, 
   3.626868199873621*^9}, {3.6268683605389795`*^9, 3.626868439428694*^9}, {
   3.6268685131239367`*^9, 3.6268685144158154`*^9}, {3.6268685499435406`*^9, 
   3.626868558059965*^9}, {3.6268695870912466`*^9, 3.6268696297127223`*^9}, {
   3.626871378927681*^9, 3.626871393836641*^9}, {3.626871442407097*^9, 
   3.626871446313709*^9}, {3.6268722266561375`*^9, 3.6268722434263415`*^9}, 
   3.6268722959134135`*^9, {3.6268746328527193`*^9, 3.626874717741439*^9}, {
   3.6268748141978917`*^9, 3.6268748839545193`*^9}, {3.6268749549089165`*^9, 
   3.6268750172695894`*^9}, 3.6268750509971247`*^9, {3.6268763692847147`*^9, 
   3.626876371698327*^9}, 3.6268765178403907`*^9, 3.6268767016336255`*^9, {
   3.627017706410877*^9, 3.6270177311354127`*^9}, {3.627017779322611*^9, 
   3.6270177981701937`*^9}, {3.627017831288319*^9, 3.627017882274393*^9}, {
   3.627017925695403*^9, 3.6270179815597334`*^9}, {3.6270190586294365`*^9, 
   3.6270191253400135`*^9}, 3.6270191798794565`*^9, {3.6270202675198975`*^9, 
   3.6270202743734775`*^9}, {3.6270203567569313`*^9, 3.62702037657611*^9}, 
   3.6271046109975605`*^9, {3.627104678073397*^9, 3.627104680339527*^9}, {
   3.6271047524016485`*^9, 3.6271048673542233`*^9}, {3.6271049117427626`*^9, 
   3.6271050143716326`*^9}, {3.6271052419556494`*^9, 
   3.6271052724993963`*^9}, {3.627105529288084*^9, 3.627105545974038*^9}, {
   3.627105652223116*^9, 3.6271056557383165`*^9}, {3.627105711620513*^9, 
   3.6271057195469666`*^9}, {3.627105800805614*^9, 3.6271059203604517`*^9}, {
   3.627106092731311*^9, 3.6271061020108423`*^9}, {3.6271064610943804`*^9, 
   3.6271064715899806`*^9}, {3.627107909213208*^9, 3.6271079268652177`*^9}, 
   3.6271080941447854`*^9, {3.627108233954782*^9, 3.627108234513814*^9}, {
   3.627109558974569*^9, 3.6271096130396614`*^9}, {3.6271097355506687`*^9, 
   3.627109865338092*^9}, {3.6271490281085925`*^9, 3.627149063778429*^9}, {
   3.6271490953595324`*^9, 3.627149129800544*^9}, {3.6271491676848583`*^9, 
   3.6271491863183084`*^9}, {3.6271492406035833`*^9, 
   3.6271493227754893`*^9}, {3.627149916987331*^9, 3.627149923339575*^9}, {
   3.627149972056132*^9, 3.6271500453010697`*^9}, {3.627150076416861*^9, 
   3.6271500927888002`*^9}, {3.627150134229493*^9, 3.6271501397972136`*^9}, {
   3.6271502160171423`*^9, 3.627150371161813*^9}, {3.6271504178339977`*^9, 
   3.6271504222589564`*^9}, 3.6271504583610783`*^9, {3.6271504907307096`*^9, 
   3.6271506678240433`*^9}, {3.627150698419488*^9, 3.6271507995380535`*^9}, {
   3.627150836279606*^9, 3.6271508676325593`*^9}, {3.6271509019564953`*^9, 
   3.62715091338813*^9}, {3.6271509445559554`*^9, 3.6271510033112173`*^9}, {
   3.6271510432516003`*^9, 3.627151117508217*^9}, {3.6271511484719086`*^9, 
   3.627151208451988*^9}, 3.6271925181917367`*^9, {3.6271925532511606`*^9, 
   3.6271925582044735`*^9}, {3.627192792117773*^9, 3.6271928374760847`*^9}, {
   3.627192922266755*^9, 3.627192970672087*^9}, {3.6271930010013647`*^9, 
   3.6271930070483913`*^9}, {3.627193237945681*^9, 3.6271932643183036`*^9}, {
   3.627193319184964*^9, 3.627193335603937*^9}, {3.6271934361905003`*^9, 
   3.627193469125511*^9}, {3.6271954204293823`*^9, 3.62719542226762*^9}, {
   3.627197299162409*^9, 3.6271973212111397`*^9}, {3.627197380512766*^9, 
   3.6271973978323407`*^9}, {3.6271974922464285`*^9, 
   3.6271974939895935`*^9}, {3.6271975299506207`*^9, 
   3.6271975312995234`*^9}, {3.627197598792622*^9, 3.627197619169242*^9}, {
   3.627197653547209*^9, 3.627197654541873*^9}, {3.6271977147471085`*^9, 
   3.6271977494032593`*^9}, {3.627197852462125*^9, 3.627197945234116*^9}, {
   3.6271979940357246`*^9, 3.627197994204837*^9}}],

Cell[BoxData[
 RowBox[{"0.1`", " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"10", " ", "t"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.6271490562013645`*^9, 3.6271492165895357`*^9, 3.6271493304175963`*^9, {
   3.627149400409367*^9, 3.6271494226530137`*^9}, {3.6271499883259983`*^9, 
   3.6271499919484196`*^9}, {3.6271500513060813`*^9, 3.627150054844446*^9}, {
   3.6271500946780634`*^9, 3.627150106560003*^9}, {3.627150141668462*^9, 
   3.6271501602118545`*^9}, {3.627150199728259*^9, 3.627150235100894*^9}, 
   3.6271503782575536`*^9, 3.6271504406322317`*^9, 3.627150560524344*^9, {
   3.6271507143231134`*^9, 3.627150719522588*^9}, 3.6271508398619986`*^9, {
   3.627150891190296*^9, 3.627150916278062*^9}, {3.627150947520938*^9, 
   3.627150963654719*^9}, {3.627150996003335*^9, 3.6271512160710773`*^9}, {
   3.6271555519616723`*^9, 3.6271555620974455`*^9}, {3.627156394921487*^9, 
   3.6271564086396494`*^9}, {3.6271924982724266`*^9, 3.6271925666721315`*^9}, 
   3.627192880282686*^9, 3.6271929716377306`*^9, {3.6271930077038307`*^9, 
   3.627193015117784*^9}, {3.6271932383499494`*^9, 3.627193272029454*^9}, {
   3.6271933398267574`*^9, 3.627193346542245*^9}, {3.6271934119212866`*^9, 
   3.627193475963077*^9}, {3.6271954315448065`*^9, 3.6271954360988493`*^9}, {
   3.627197307416922*^9, 3.6271973242881975`*^9}, 3.6271973622095366`*^9, 
   3.6271973985718327`*^9, 3.62719749643923*^9, 3.6271975334369497`*^9, {
   3.6271975994800835`*^9, 3.6271976198887177`*^9}, 3.6271976557056503`*^9, 
   3.627197720084672*^9, 3.6271977545597086`*^9, {3.6271978528443794`*^9, 
   3.6271979455203085`*^9}, 3.6271979956237864`*^9}],

Cell[BoxData[
 ButtonBox["\<\"STOP\"\>",
  Appearance->Automatic,
  ButtonFunction:>($CellContext`stop = $CellContext`true),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{
  3.6271490562013645`*^9, 3.6271492165895357`*^9, 3.6271493304175963`*^9, {
   3.627149400409367*^9, 3.6271494226530137`*^9}, {3.6271499883259983`*^9, 
   3.6271499919484196`*^9}, {3.6271500513060813`*^9, 3.627150054844446*^9}, {
   3.6271500946780634`*^9, 3.627150106560003*^9}, {3.627150141668462*^9, 
   3.6271501602118545`*^9}, {3.627150199728259*^9, 3.627150235100894*^9}, 
   3.6271503782575536`*^9, 3.6271504406322317`*^9, 3.627150560524344*^9, {
   3.6271507143231134`*^9, 3.627150719522588*^9}, 3.6271508398619986`*^9, {
   3.627150891190296*^9, 3.627150916278062*^9}, {3.627150947520938*^9, 
   3.627150963654719*^9}, {3.627150996003335*^9, 3.6271512160710773`*^9}, {
   3.6271555519616723`*^9, 3.6271555620974455`*^9}, {3.627156394921487*^9, 
   3.6271564086396494`*^9}, {3.6271924982724266`*^9, 3.6271925666721315`*^9}, 
   3.627192880282686*^9, 3.6271929716377306`*^9, {3.6271930077038307`*^9, 
   3.627193015117784*^9}, {3.6271932383499494`*^9, 3.627193272029454*^9}, {
   3.6271933398267574`*^9, 3.627193346542245*^9}, {3.6271934119212866`*^9, 
   3.627193475963077*^9}, {3.6271954315448065`*^9, 3.6271954360988493`*^9}, {
   3.627197307416922*^9, 3.6271973242881975`*^9}, 3.6271973622095366`*^9, 
   3.6271973985718327`*^9, 3.62719749643923*^9, 3.6271975334369497`*^9, {
   3.6271975994800835`*^9, 3.6271976198887177`*^9}, 3.6271976557056503`*^9, 
   3.627197720084672*^9, 3.6271977545597086`*^9, {3.6271978528443794`*^9, 
   3.6271979455203085`*^9}, 3.627197995626789*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6271490562013645`*^9, 3.6271492165895357`*^9, 3.6271493304175963`*^9, {
   3.627149400409367*^9, 3.6271494226530137`*^9}, {3.6271499883259983`*^9, 
   3.6271499919484196`*^9}, {3.6271500513060813`*^9, 3.627150054844446*^9}, {
   3.6271500946780634`*^9, 3.627150106560003*^9}, {3.627150141668462*^9, 
   3.6271501602118545`*^9}, {3.627150199728259*^9, 3.627150235100894*^9}, 
   3.6271503782575536`*^9, 3.6271504406322317`*^9, 3.627150560524344*^9, {
   3.6271507143231134`*^9, 3.627150719522588*^9}, 3.6271508398619986`*^9, {
   3.627150891190296*^9, 3.627150916278062*^9}, {3.627150947520938*^9, 
   3.627150963654719*^9}, {3.627150996003335*^9, 3.6271512160710773`*^9}, {
   3.6271555519616723`*^9, 3.6271555620974455`*^9}, {3.627156394921487*^9, 
   3.6271564086396494`*^9}, {3.6271924982724266`*^9, 3.6271925666721315`*^9}, 
   3.627192880282686*^9, 3.6271929716377306`*^9, {3.6271930077038307`*^9, 
   3.627193015117784*^9}, {3.6271932383499494`*^9, 3.627193272029454*^9}, {
   3.6271933398267574`*^9, 3.627193346542245*^9}, {3.6271934119212866`*^9, 
   3.627193475963077*^9}, {3.6271954315448065`*^9, 3.6271954360988493`*^9}, {
   3.627197307416922*^9, 3.6271973242881975`*^9}, 3.6271973622095366`*^9, 
   3.6271973985718327`*^9, 3.62719749643923*^9, 3.6271975334369497`*^9, {
   3.6271975994800835`*^9, 3.6271976198887177`*^9}, 3.6271976557056503`*^9, 
   3.627197720084672*^9, 3.6271977545597086`*^9, {3.6271978528443794`*^9, 
   3.6271979455203085`*^9}, 3.6271979956297913`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVzGlME2YAxvGqBdzmVFCQAuWmtOW+j0L7AC1UgxhrVaASlUG4NO0EyjZE
ERVxkwECfcUisYYRIQRRBHFzHJkzi+UohwMZoGHgwagSQKgS1rEPT/75fXns
EqWi5I0UCiVkff+3+mKbkVLayFVJiIGy6iFvPuFIgq/pLM+hKr4uu+0Tr4/z
sNbQfZU3meKgepFliSQvtaTHk4ppx6Gq/gU3CLpj1NL6z2GnGX/2cjUIFgqb
VO7IdnQZXCUnmviwEPXs76PvxKFbz5jLsr1Q5XoYljfsQk5/2tyboQOId7ih
fcywROr4lla9JhbV+3khlBRrjDfHmIVmJ6BlWc1uX7bFi4/Dmfs4xzF+yeSf
JaU9Lvd9eXaw+CvYxE7y3wQ6ojV49GbcaDKcjhpQl3VOuOu9Ym16Lw3S+ify
zUpnmN9+PhfgJ0Ue++8Yv2MsDOSuKURlmaidvdBlTndBWqV3scX5b7DtXdcM
5ZErxrQackCfBy4zVrbpjDtO7WiMST1agNFB/mEDY0/Qrt/oTW+4iEXXL1iK
JU+crfvXMol9GdcZFVEbh71gUWGlqi26gumw2U5ZrTfoelWWWWMJSnTa9BOF
PujT6TqtTpdhXNMhTY/zhZPk5HeTlHK0CUXdEUw/mMR15icKK7AgKRc0bPaH
tTir0Da5EppSlcOOMX/cWfMN5LopsP14gu9nvwZAIHl3jd2hWP/7q2xMGQjh
+asjt6kEexKddzdlBIGac/Nt91YCixJbn217gyGsOzTRbkxwZeKV/JQNB+zV
zOCUnQQ/qKVGd7Uc9GoYtEUzgjlx3dPTvSFwHsmpUdII3uvrX++pCUV5UmnF
miWBOFISUJfPhbaMIcq1JpA0PX+5ScxDcoGlbbstgS6+OKPGGLi0VPVqwJ4g
s5Gav6EAEExPzukdCTp/TOyemQWSAlwyFxkEv3B3VZceCUPLH80ZOibBGa4b
ndUTBt6nqZZRNoFJP0sd7hsO+rF5cYErwWG3PBOHn8Lx/YqhIMid4KTVg8IL
WyNwLp4tf+RBsFsiUg1lR8BdtiHXzovgzxT+wbczEXCOVjGLvQl8Dej++TF8
qGm/ydU+BBGy6OaJTj6WzqWabfEjMHeZ0DA9BHh68P2Amz9Bh1xs/UEhwOs8
ag0jgMC01N6gyCgSc4XFT+iBBKHBI+bVskjIHrcvatdtdm/qd/lUJFYSHtxv
CyJo/XYfjSeKgnlIOCcpmIAxeKuq6OcoZH1Y0M6vO0oX3XLNRQihfpJ8zSEI
ujPxkVUpxP3hMtbQurm0aZ1eL4QkXMf0CCH4D1Cdrjw=
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 50.}, {0., 1487.046054724741}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "50.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVzGlME2YAxvGqBdzmVFCQAuWmtOW+j0L7AC1UgxhrVaASlUG4NO0EyjZE
ERVxkwECfcUisYYRIQRRBHFzHJkzi+UohwMZoGHgwagSQKgS1rEPT/75fXns
EqWi5I0UCiVkff+3+mKbkVLayFVJiIGy6iFvPuFIgq/pLM+hKr4uu+0Tr4/z
sNbQfZU3meKgepFliSQvtaTHk4ppx6Gq/gU3CLpj1NL6z2GnGX/2cjUIFgqb
VO7IdnQZXCUnmviwEPXs76PvxKFbz5jLsr1Q5XoYljfsQk5/2tyboQOId7ih
fcywROr4lla9JhbV+3khlBRrjDfHmIVmJ6BlWc1uX7bFi4/Dmfs4xzF+yeSf
JaU9Lvd9eXaw+CvYxE7y3wQ6ojV49GbcaDKcjhpQl3VOuOu9Ym16Lw3S+ify
zUpnmN9+PhfgJ0Ue++8Yv2MsDOSuKURlmaidvdBlTndBWqV3scX5b7DtXdcM
5ZErxrQackCfBy4zVrbpjDtO7WiMST1agNFB/mEDY0/Qrt/oTW+4iEXXL1iK
JU+crfvXMol9GdcZFVEbh71gUWGlqi26gumw2U5ZrTfoelWWWWMJSnTa9BOF
PujT6TqtTpdhXNMhTY/zhZPk5HeTlHK0CUXdEUw/mMR15icKK7AgKRc0bPaH
tTir0Da5EppSlcOOMX/cWfMN5LopsP14gu9nvwZAIHl3jd2hWP/7q2xMGQjh
+asjt6kEexKddzdlBIGac/Nt91YCixJbn217gyGsOzTRbkxwZeKV/JQNB+zV
zOCUnQQ/qKVGd7Uc9GoYtEUzgjlx3dPTvSFwHsmpUdII3uvrX++pCUV5UmnF
miWBOFISUJfPhbaMIcq1JpA0PX+5ScxDcoGlbbstgS6+OKPGGLi0VPVqwJ4g
s5Gav6EAEExPzukdCTp/TOyemQWSAlwyFxkEv3B3VZceCUPLH80ZOibBGa4b
ndUTBt6nqZZRNoFJP0sd7hsO+rF5cYErwWG3PBOHn8Lx/YqhIMid4KTVg8IL
WyNwLp4tf+RBsFsiUg1lR8BdtiHXzovgzxT+wbczEXCOVjGLvQl8Dej++TF8
qGm/ydU+BBGy6OaJTj6WzqWabfEjMHeZ0DA9BHh68P2Amz9Bh1xs/UEhwOs8
ag0jgMC01N6gyCgSc4XFT+iBBKHBI+bVskjIHrcvatdtdm/qd/lUJFYSHtxv
CyJo/XYfjSeKgnlIOCcpmIAxeKuq6OcoZH1Y0M6vO0oX3XLNRQihfpJ8zSEI
ujPxkVUpxP3hMtbQurm0aZ1eL4QkXMf0CCH4D1Cdrjw=
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 50.}, {0., 1487.046054724741}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "50.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 50.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"y", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{8.47457627118644*^-7, 0.10000000844626661`}, {
                    0.8150884459927834, 0.13441644834306551`}, {
                    1.6987368044390112`, 0.19638247413239815`}, {
                    2.5238272830376207`, 0.20164807272900073`}, {
                    3.3327327617081743`, 0.2585196431038295}, {
                    4.2101990002897995`, 0.39427681849095103`}, {
                    5.029107359023806, 0.20103708929180622`}, {
                    5.916576477668884, 0.21928346843215982`}, {
                    6.787860596385906, 0.37369164249172937`}, {
                    7.60058683525531, 0.16484461132933964`}, {
                    8.481873834035786, 0.35534640858568056`}, {
                    9.304602952968644, 0.4213234626161535}, {
                    10.111147071973447`, 0.21903522965632755`}, {
                    10.98625195088932, 0.9030618932152826}, {
                    11.249628182018398`, 1.1014586149394523`}}], 
                    
                    LineBox[{{15.771412943705718`, -0.8703158171245318}, {
                    16.066487745573653`, 0.7549396609359356}, {
                    16.95541626475183, 0.117676522080852}, {
                    17.7434713180919, -0.8703158171245318}}], 
                    
                    LineBox[{{19.521148143615388`, 1.1014586149394523`}, {
                    19.52509182271802, 1.0910494968915179`}, {
                    20.349280342183974`, -0.3790115722626214}, {
                    21.130580295181545`, 1.1014586149394523`}}], 
                    LineBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAy0dpypowNUCc/5ARk5/xP/Jbk0Wq
CDZAK0ImDCnOyr/QkKEjE9o2QDosjK8CFt6/EGFdNAm9N0D0UVow0UGCv9zQ
25HamzhA9Urt+nN5vr9KYidJrms5QJm6mYxq/7O/Go8gMw9NOkA+CAhKbQ+v
v4zd5nZyHztA4vImhTBQrr+Ly28Hse07QIP3a/TRcK2/7FSmynzNPEDihiGj
H1S0v+//qedKnj1AD4QAAJNit79URls3poA+QPVmBFQW576/W67Z4ANUP0B7
YLVC2xPBv/hajWueEUBAVTuJO02Pwb9zrASAAYJAQF7CsgdipsC/v45iweXq
QEDyDZuKYam/v7s+F5yQXEFAyW06yuj3tr9+Pi0dKcxBQBCoGFD+a7C/Es8p
y0I0QkDfuW7ljE6vv1ctfRIjpUJA8Aed6MS9r79tHLeGhA5DQGI+eVWQJ7K/
SVtSodN1Q0Bh8zhAQpW0v9ZnRFXp5UNAcL5joPXzu780BR02gE5EQCe7eUUQ
s76/Q3BMsN2/REA2bwF4XIPBvxgr3dAoL0VAfL3zwH0owL++dlQe9ZZFQIt/
0jXtc76/FZAiBYgHRkBuYZ2rucy2vz061xiccEZARJJ0+9JPs78WsuLFduJG
QEgdHqrT4q2/tXlPGT9SR0B8vTI1jPywvybSopmIukdAOgdF48QCs79H+Eyz
mCtIQGL8oAHKTru/Oa/d+SmVSEBqr6qdi6O+vz4Z5Pj//0hAsFENNrTGwL89
7hGC
                    "]], 
                    
                    LineBox[{{11.936218696000152`, 1.1014586149394523`}, {
                    12.56755418898978, -0.8703158171245318}}], 
                    
                    LineBox[{{12.796931539722205`, -0.8703158171245318}, {
                    13.368845159164426`, 1.1014586149394523`}}], 
                    
                    LineBox[{{14.54710455461701, 1.1014586149394523`}, {
                    14.830410649220854`, -0.8703158171245318}}], 
                    
                    LineBox[{{17.847817766528454`, -0.8703158171245318}, {
                    18.212886711516383`, 1.1014586149394523`}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 50.}, {-0.8703158171245318, 
                    1.1014586149394523`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "50.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{8.47457627118644*^-7, 0.10000000844626661`}, {
                    0.8150884459927834, 0.13441644834306551`}, {
                    1.6987368044390112`, 0.19638247413239815`}, {
                    2.5238272830376207`, 0.20164807272900073`}, {
                    3.3327327617081743`, 0.2585196431038295}, {
                    4.2101990002897995`, 0.39427681849095103`}, {
                    5.029107359023806, 0.20103708929180622`}, {
                    5.916576477668884, 0.21928346843215982`}, {
                    6.787860596385906, 0.37369164249172937`}, {
                    7.60058683525531, 0.16484461132933964`}, {
                    8.481873834035786, 0.35534640858568056`}, {
                    9.304602952968644, 0.4213234626161535}, {
                    10.111147071973447`, 0.21903522965632755`}, {
                    10.98625195088932, 0.9030618932152826}, {
                    11.249628182018398`, 1.1014586149394523`}}], 
                    
                    LineBox[{{15.771412943705718`, -0.8703158171245318}, {
                    16.066487745573653`, 0.7549396609359356}, {
                    16.95541626475183, 0.117676522080852}, {
                    17.7434713180919, -0.8703158171245318}}], 
                    
                    LineBox[{{19.521148143615388`, 1.1014586149394523`}, {
                    19.52509182271802, 1.0910494968915179`}, {
                    20.349280342183974`, -0.3790115722626214}, {
                    21.130580295181545`, 1.1014586149394523`}}], 
                    LineBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAy0dpypowNUCc/5ARk5/xP/Jbk0Wq
CDZAK0ImDCnOyr/QkKEjE9o2QDosjK8CFt6/EGFdNAm9N0D0UVow0UGCv9zQ
25HamzhA9Urt+nN5vr9KYidJrms5QJm6mYxq/7O/Go8gMw9NOkA+CAhKbQ+v
v4zd5nZyHztA4vImhTBQrr+Ly28Hse07QIP3a/TRcK2/7FSmynzNPEDihiGj
H1S0v+//qedKnj1AD4QAAJNit79URls3poA+QPVmBFQW576/W67Z4ANUP0B7
YLVC2xPBv/hajWueEUBAVTuJO02Pwb9zrASAAYJAQF7CsgdipsC/v45iweXq
QEDyDZuKYam/v7s+F5yQXEFAyW06yuj3tr9+Pi0dKcxBQBCoGFD+a7C/Es8p
y0I0QkDfuW7ljE6vv1ctfRIjpUJA8Aed6MS9r79tHLeGhA5DQGI+eVWQJ7K/
SVtSodN1Q0Bh8zhAQpW0v9ZnRFXp5UNAcL5joPXzu780BR02gE5EQCe7eUUQ
s76/Q3BMsN2/REA2bwF4XIPBvxgr3dAoL0VAfL3zwH0owL++dlQe9ZZFQIt/
0jXtc76/FZAiBYgHRkBuYZ2rucy2vz061xiccEZARJJ0+9JPs78WsuLFduJG
QEgdHqrT4q2/tXlPGT9SR0B8vTI1jPywvybSopmIukdAOgdF48QCs79H+Eyz
mCtIQGL8oAHKTru/Oa/d+SmVSEBqr6qdi6O+vz4Z5Pj//0hAsFENNrTGwL89
7hGC
                    "]], 
                    
                    LineBox[{{11.936218696000152`, 1.1014586149394523`}, {
                    12.56755418898978, -0.8703158171245318}}], 
                    
                    LineBox[{{12.796931539722205`, -0.8703158171245318}, {
                    13.368845159164426`, 1.1014586149394523`}}], 
                    
                    LineBox[{{14.54710455461701, 1.1014586149394523`}, {
                    14.830410649220854`, -0.8703158171245318}}], 
                    
                    LineBox[{{17.847817766528454`, -0.8703158171245318}, {
                    18.212886711516383`, 1.1014586149394523`}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 50.}, {-0.8703158171245318, 
                    1.1014586149394523`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "50.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 50.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"\[Psi]", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{8.47457627118644*^-7, 0.010000008474653144`}, {
                    0.8150884459927834, -0.011635934792220618`}, {
                    1.6987368044390112`, -0.025576457198848795`}, {
                    2.5238272830376207`, -0.034392640965451825`}, {
                    3.3327327617081743`, -0.09401608417160992}, {
                    4.2101990002897995`, -0.07452895977166887}, {
                    5.029107359023806, -0.026106113783865473`}, {
                    5.916576477668884, -0.12854692426878367`}, {
                    6.787860596385906, -0.07668867784039261}, {
                    7.60058683525531, -0.06406613489093153}, {
                    8.481873834035786, -0.1524781787345626}, {
                    9.304602952968644, -0.08511824765860052}, {
                    10.111147071973447`, -0.07379703021900057}, {
                    10.98625195088932, -0.175378672201408}, {
                    11.802798949957575`, 0.04866836537385172}, {
                    12.687906708936902`, 0.011117836179663923`}, {
                    13.556829467988173`, -0.21392205835374875`}, {
                    14.186131410039435`, 0.07897940643655268}}], 
                    
                    LineBox[{{14.832623244737222`, 0.07897940643655268}, {
                    15.24611998630655, 0.0041088984108728355`}, {
                    16.066487745573653`, -0.1298989614392134}, {
                    16.604586498191587`, 0.07897940643655268}}], 
                    
                    LineBox[{{17.32378281743256, 0.07897940643655268}, {
                    17.828159784001947`, -0.10748801710151562`}, {
                    18.64234542340445, -0.08282153754544655}, {
                    19.351078824604862`, 0.07897940643655268}}], 
                    LineBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAwCL6vXShM0Aa1rOP/je0P9zQvm9q
WTRAogVVfp9+yL+2SFLBQyg1QP4UPzwgHMa/8luTRaoINkArWM/M3MKpv9CQ
oSMT2jZAyA/p6vPdxL8QYV00Cb03QBg8z1NubcC/3NDbkdqbOECAwypomRm6
v0piJ0muazlAUQz6Puq3ur8ajyAzD006QNGe/qIZaL2/jN3mdnIfO0C9usgT
4Ye9v4vLbwex7TtAdzdHihi1vb/sVKbKfM08QEOF575Pebm/7/+p50qePUBg
WlGM7ly3v1RGWzemgD5Ar9Gr61Y1sr9brtngA1Q/QHXQmkpsEbC/+FqNa54R
QEBz8AP6ixSvv3OsBIABgkBAdlZvG14csb+/jmLB5epAQAiGdd83VbK/uz4X
nJBcQUBP1GOiI3+4v34+LR0pzEFAka+dvkngvL8SzynLQjRCQHfBbAoOU72/
Vy19EiOlQkBqbpaTl+28v20ct4aEDkNAX3Kji1s9u79JW1Kh03VDQCWwEDIB
h7m/1mdEVenlQ0BNPo4F02S0vzQFHTaATkRAe+DRkUqDsr9DcEyw3b9EQBWN
G92vWq+/GCvd0CgvRUA8x+Bj/Laxv752VB71lkVAfHS16M8Is78VkCIFiAdG
QDS54gyaZ7i/PTrXGJxwRkAABajpQM66vxay4sV24kZAJtZ+EMq9vb+1eU8Z
P1JHQOlV5WBiOry/JtKimYi6R0Dz0ntsssy6v0f4TLOYK0hAxn13gq3/tL85
r935KZVIQH5uOhldsrK/Phnk+P//SEBRpD0n/r6wv6VPI5w=
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 50.}, {-0.21392205835374875`, 
                    0.07897940643655268}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "50.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{8.47457627118644*^-7, 0.010000008474653144`}, {
                    0.8150884459927834, -0.011635934792220618`}, {
                    1.6987368044390112`, -0.025576457198848795`}, {
                    2.5238272830376207`, -0.034392640965451825`}, {
                    3.3327327617081743`, -0.09401608417160992}, {
                    4.2101990002897995`, -0.07452895977166887}, {
                    5.029107359023806, -0.026106113783865473`}, {
                    5.916576477668884, -0.12854692426878367`}, {
                    6.787860596385906, -0.07668867784039261}, {
                    7.60058683525531, -0.06406613489093153}, {
                    8.481873834035786, -0.1524781787345626}, {
                    9.304602952968644, -0.08511824765860052}, {
                    10.111147071973447`, -0.07379703021900057}, {
                    10.98625195088932, -0.175378672201408}, {
                    11.802798949957575`, 0.04866836537385172}, {
                    12.687906708936902`, 0.011117836179663923`}, {
                    13.556829467988173`, -0.21392205835374875`}, {
                    14.186131410039435`, 0.07897940643655268}}], 
                    LineBox[{{14.832623244737222`, 0.07897940643655268}, {
                    15.24611998630655, 0.0041088984108728355`}, {
                    16.066487745573653`, -0.1298989614392134}, {
                    16.604586498191587`, 0.07897940643655268}}], 
                    
                    LineBox[{{17.32378281743256, 0.07897940643655268}, {
                    17.828159784001947`, -0.10748801710151562`}, {
                    18.64234542340445, -0.08282153754544655}, {
                    19.351078824604862`, 0.07897940643655268}}], 
                    LineBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAwCL6vXShM0Aa1rOP/je0P9zQvm9q
WTRAogVVfp9+yL+2SFLBQyg1QP4UPzwgHMa/8luTRaoINkArWM/M3MKpv9CQ
oSMT2jZAyA/p6vPdxL8QYV00Cb03QBg8z1NubcC/3NDbkdqbOECAwypomRm6
v0piJ0muazlAUQz6Puq3ur8ajyAzD006QNGe/qIZaL2/jN3mdnIfO0C9usgT
4Ye9v4vLbwex7TtAdzdHihi1vb/sVKbKfM08QEOF575Pebm/7/+p50qePUBg
WlGM7ly3v1RGWzemgD5Ar9Gr61Y1sr9brtngA1Q/QHXQmkpsEbC/+FqNa54R
QEBz8AP6ixSvv3OsBIABgkBAdlZvG14csb+/jmLB5epAQAiGdd83VbK/uz4X
nJBcQUBP1GOiI3+4v34+LR0pzEFAka+dvkngvL8SzynLQjRCQHfBbAoOU72/
Vy19EiOlQkBqbpaTl+28v20ct4aEDkNAX3Kji1s9u79JW1Kh03VDQCWwEDIB
h7m/1mdEVenlQ0BNPo4F02S0vzQFHTaATkRAe+DRkUqDsr9DcEyw3b9EQBWN
G92vWq+/GCvd0CgvRUA8x+Bj/Laxv752VB71lkVAfHS16M8Is78VkCIFiAdG
QDS54gyaZ7i/PTrXGJxwRkAABajpQM66vxay4sV24kZAJtZ+EMq9vb+1eU8Z
P1JHQOlV5WBiOry/JtKimYi6R0Dz0ntsssy6v0f4TLOYK0hAxn13gq3/tL85
r935KZVIQH5uOhldsrK/Phnk+P//SEBRpD0n/r6wv6VPI5w=
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 50.}, {-0.21392205835374875`, 
                    0.07897940643655268}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "50.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 50.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{
     SubscriptBox["e", "y"], "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvrD5WOB6Q4Xq0P/BdXF00
Feo/vz4LD9eY0D/OO7mkBi77Pw2/Nr3c3uU/ZDHLW8wwBEAf7+/oYFryP0XB
TstvqQpAdEBHOyQK8z8alh9oPtcQQLuJI0UZIPQ/GlLMUc4dFEADMJ5Nref3
P6F7LwaTqhdA4CKJr1EY8j9aI53txCYbQJ5z0D6qjPY/nFE/PABnHkD0WqIx
u6b3P7P2yyq49iBAj0dvRhZZ8j/chxLr9JsiQClboJ7g2vY/H1jeROg4JEC+
4FI0/M73PyVfBQT2+CVAMKdVX7mm7D9vqcZ2CJsnQD94DcWchfY/fSrjTjVg
KUCPZcsGzYT3P6TqhMAYHStAXzz4BoB82z8P7sDlALwsQA49JTW3HQBAPihY
cAN+LkChVSEBHvjxP9jSRFcFETBASM3osyevlr/zLAsplvQwQGikUbP7kQNA
miaURwLUMUCV+YFhnwzSP+RB6r9wpDJArdxoK+gu5T+P+O1qbIYzQI6G21Db
WgJA3NC+b2pZNEDG8M3zLDPjP7ZIUsFDKDVASDH4GPM/7D/yW5NFqgg2QKRl
DGOiMQBA0JChIxPaNkBtSgkQK0TwPxBhXTQJvTdAGXQiw67C9j/c0NuR2ps4
QH1hnZU1h/Y/SmInSa5rOUDaqUfxg/v0PxqPIDMPTTpAJNIOWpl39T+M3eZ2
ch87QASqjmlievU/i8tvB7HtO0Br4B873lT1P+xUpsp8zTxAPvy4/Yco9T/v
/6nnSp49QJlz5z8Z/vQ/VEZbN6aAPkBtpuf0MF70P1uu2eADVD9AoviQS99c
9D/4Wo1rnhFAQPvg6tw0UfQ/c6wEgAGCQECutJG9LVD0P7+OYsHl6kBAcs9E
SdyT9D+7PheckFxBQGatNF/jEvU/fj4tHSnMQUCDWCKT1271PxLPKctCNEJA
mHtMGV+a9T9XLX0SI6VCQO5hrxIfdfU/bRy3hoQOQ0CnjxqJZVH1P0lbUqHT
dUNAJnJl+t5F9T/WZ0RV6eVDQABWZVaQufQ/NAUdNoBOREAb2RQozo30P0Nw
TLDdv0RABw1MxhJl9D8YK93QKC9FQMM0E2k1e/Q/vnZUHvWWRUCyK3ecgqP0
PxWQIgWIB0ZA/bu48OQo9T89OtcYnHBGQLrldjO3T/U/FrLixXbiRkAnutQg
56D1P7V5Txk/UkdAw7u+wCl79T8m0qKZiLpHQKweMaenU/U/R/hMs5grSECm
+XWv+tr0Pzmv3fkplUhAMAD4yt6h9D8+GeT4//9IQCwvNF+rc/Q/gBS+2Q==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, 
                    PlotRange -> {{0., 50.}, {-0.022152538638875258`, 
                    2.446280861786864}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "50.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvrD5WOB6Q4Xq0P/BdXF00
Feo/vz4LD9eY0D/OO7mkBi77Pw2/Nr3c3uU/ZDHLW8wwBEAf7+/oYFryP0XB
TstvqQpAdEBHOyQK8z8alh9oPtcQQLuJI0UZIPQ/GlLMUc4dFEADMJ5Nref3
P6F7LwaTqhdA4CKJr1EY8j9aI53txCYbQJ5z0D6qjPY/nFE/PABnHkD0WqIx
u6b3P7P2yyq49iBAj0dvRhZZ8j/chxLr9JsiQClboJ7g2vY/H1jeROg4JEC+
4FI0/M73PyVfBQT2+CVAMKdVX7mm7D9vqcZ2CJsnQD94DcWchfY/fSrjTjVg
KUCPZcsGzYT3P6TqhMAYHStAXzz4BoB82z8P7sDlALwsQA49JTW3HQBAPihY
cAN+LkChVSEBHvjxP9jSRFcFETBASM3osyevlr/zLAsplvQwQGikUbP7kQNA
miaURwLUMUCV+YFhnwzSP+RB6r9wpDJArdxoK+gu5T+P+O1qbIYzQI6G21Db
WgJA3NC+b2pZNEDG8M3zLDPjP7ZIUsFDKDVASDH4GPM/7D/yW5NFqgg2QKRl
DGOiMQBA0JChIxPaNkBtSgkQK0TwPxBhXTQJvTdAGXQiw67C9j/c0NuR2ps4
QH1hnZU1h/Y/SmInSa5rOUDaqUfxg/v0PxqPIDMPTTpAJNIOWpl39T+M3eZ2
ch87QASqjmlievU/i8tvB7HtO0Br4B873lT1P+xUpsp8zTxAPvy4/Yco9T/v
/6nnSp49QJlz5z8Z/vQ/VEZbN6aAPkBtpuf0MF70P1uu2eADVD9AoviQS99c
9D/4Wo1rnhFAQPvg6tw0UfQ/c6wEgAGCQECutJG9LVD0P7+OYsHl6kBAcs9E
SdyT9D+7PheckFxBQGatNF/jEvU/fj4tHSnMQUCDWCKT1271PxLPKctCNEJA
mHtMGV+a9T9XLX0SI6VCQO5hrxIfdfU/bRy3hoQOQ0CnjxqJZVH1P0lbUqHT
dUNAJnJl+t5F9T/WZ0RV6eVDQABWZVaQufQ/NAUdNoBOREAb2RQozo30P0Nw
TLDdv0RABw1MxhJl9D8YK93QKC9FQMM0E2k1e/Q/vnZUHvWWRUCyK3ecgqP0
PxWQIgWIB0ZA/bu48OQo9T89OtcYnHBGQLrldjO3T/U/FrLixXbiRkAnutQg
56D1P7V5Txk/UkdAw7u+wCl79T8m0qKZiLpHQKweMaenU/U/R/hMs5grSECm
+XWv+tr0Pzmv3fkplUhAMAD4yt6h9D8+GeT4//9IQCwvNF+rc/Q/gBS+2Q==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 50.}, {-0.022152538638875258`, 
                    2.446280861786864}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "50.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 50.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{
     SubscriptBox["e", "\[Psi]"], "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvrD62DzKGi5m5P/BdXF00
Feo/O9WJpaqskb/OO7mkBi77Pxdv5Dy2gcQ/ZDHLW8wwBEDYKlO+9xOnP0XB
TstvqQpAjrQsNEkoub8alh9oPtcQQN4QFakgWLw/GlLMUc4dFECkxLwvXGev
P6F7LwaTqhdAXFvX4hKwtr9aI53txCYbQMbLGDQNl7s/nFE/PABnHkBqmvok
Oeifv7P2yyq49iBA4io0znsasL/chxLr9JsiQKLCbzNQILk/H1jeROg4JEAz
YkaWzMijvyVfBQT2+CVAXNLC0Go9uL9vqcZ2CJsnQE85yMTzPs4/fSrjTjVg
KUAaHi7xnC5+P6TqhMAYHStADToESh7os78P7sDlALwsQJ2GZrLE+tQ/PihY
cAN+LkBMce2hbVJ2v9jSRFcFETBAMCj3buTIaD/zLAsplvQwQCFFqGkSHtQ/
miaURwLUMUCOl0PbrKW2v+RB6r9wpDJAtJ9SZK1JuD+P+O1qbIYzQF2389mE
5MQ/3NC+b2pZNEBdfljXNFPFv7ZIUsFDKDVAbMjBCW2Ndz/yW5NFqgg2QBoa
kxflUFy/0JChIxPaNkBYtxwTiK/CvxBhXTQJvTdALgcw2zKcrj/c0NuR2ps4
QBvfY/HKL7m/SmInSa5rOUBZ1b3xbaekvxqPIDMPTTpAYTRo9fnYqj+M3eZ2
ch87QH4PemAHt7y/i8tvB7HtO0DPn7SWbkqtv+xUpsp8zTxAgFDPAHMasz/v
/6nnSp49QLfWvcLu8rO/VEZbN6aAPkDHN4870lioP1uu2eADVD9AdsTPJyip
uj/4Wo1rnhFAQMdipiB6Kqq/c6wEgAGCQECX0/GDOHmqP7+OYsHl6kBAWjz6
zupjuT+7PheckFxBQDokLA569rq/fj4tHSnMQUClae6JFvqtPxLPKctCNEJA
diPWIxVigj9XLX0SI6VCQCNXEGZBr7q/bRy3hoQOQ0De09tMzVyxP0lbUqHT
dUNATwntzPxhmT/WZ0RV6eVDQGB94iNuLLO/NAUdNoBORECDoAa0Kw24P0Nw
TLDdv0RAgIzngpe0R78YK93QKC9FQCtwqsEbc5W/vnZUHvWWRUCBG27fbja9
PxWQIgWIB0ZA03W66e0Zs789OtcYnHBGQEQanV+Rzq2/FrLixXbiRkC0SMEl
nR6tP7V5Txk/UkdAExWpIFqovr8m0qKZiLpHQIwdrJXFL3I/R/hMs5grSECw
xzfxxPynPzmv3fkplUhAJm+OqZhBtb8+GeT4//9IQHTm743ORLI/eoTASg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 50.}, {-0.16660175814557734`, 
                    0.327805685252409}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "50.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvrD62DzKGi5m5P/BdXF00
Feo/O9WJpaqskb/OO7mkBi77Pxdv5Dy2gcQ/ZDHLW8wwBEDYKlO+9xOnP0XB
TstvqQpAjrQsNEkoub8alh9oPtcQQN4QFakgWLw/GlLMUc4dFECkxLwvXGev
P6F7LwaTqhdAXFvX4hKwtr9aI53txCYbQMbLGDQNl7s/nFE/PABnHkBqmvok
Oeifv7P2yyq49iBA4io0znsasL/chxLr9JsiQKLCbzNQILk/H1jeROg4JEAz
YkaWzMijvyVfBQT2+CVAXNLC0Go9uL9vqcZ2CJsnQE85yMTzPs4/fSrjTjVg
KUAaHi7xnC5+P6TqhMAYHStADToESh7os78P7sDlALwsQJ2GZrLE+tQ/PihY
cAN+LkBMce2hbVJ2v9jSRFcFETBAMCj3buTIaD/zLAsplvQwQCFFqGkSHtQ/
miaURwLUMUCOl0PbrKW2v+RB6r9wpDJAtJ9SZK1JuD+P+O1qbIYzQF2389mE
5MQ/3NC+b2pZNEBdfljXNFPFv7ZIUsFDKDVAbMjBCW2Ndz/yW5NFqgg2QBoa
kxflUFy/0JChIxPaNkBYtxwTiK/CvxBhXTQJvTdALgcw2zKcrj/c0NuR2ps4
QBvfY/HKL7m/SmInSa5rOUBZ1b3xbaekvxqPIDMPTTpAYTRo9fnYqj+M3eZ2
ch87QH4PemAHt7y/i8tvB7HtO0DPn7SWbkqtv+xUpsp8zTxAgFDPAHMasz/v
/6nnSp49QLfWvcLu8rO/VEZbN6aAPkDHN4870lioP1uu2eADVD9AdsTPJyip
uj/4Wo1rnhFAQMdipiB6Kqq/c6wEgAGCQECX0/GDOHmqP7+OYsHl6kBAWjz6
zupjuT+7PheckFxBQDokLA569rq/fj4tHSnMQUClae6JFvqtPxLPKctCNEJA
diPWIxVigj9XLX0SI6VCQCNXEGZBr7q/bRy3hoQOQ0De09tMzVyxP0lbUqHT
dUNATwntzPxhmT/WZ0RV6eVDQGB94iNuLLO/NAUdNoBORECDoAa0Kw24P0Nw
TLDdv0RAgIzngpe0R78YK93QKC9FQCtwqsEbc5W/vnZUHvWWRUCBG27fbja9
PxWQIgWIB0ZA03W66e0Zs789OtcYnHBGQEQanV+Rzq2/FrLixXbiRkC0SMEl
nR6tP7V5Txk/UkdAExWpIFqovr8m0qKZiLpHQIwdrJXFL3I/R/hMs5grSECw
xzfxxPynPzmv3fkplUhAJm+OqZhBtb8+GeT4//9IQHTm743ORLI/eoTASg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 50.}, {-0.16660175814557734`, 
                    0.327805685252409}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "50.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 50.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6271490562013645`*^9, 3.6271492165895357`*^9, 3.6271493304175963`*^9, {
   3.627149400409367*^9, 3.6271494226530137`*^9}, {3.6271499883259983`*^9, 
   3.6271499919484196`*^9}, {3.6271500513060813`*^9, 3.627150054844446*^9}, {
   3.6271500946780634`*^9, 3.627150106560003*^9}, {3.627150141668462*^9, 
   3.6271501602118545`*^9}, {3.627150199728259*^9, 3.627150235100894*^9}, 
   3.6271503782575536`*^9, 3.6271504406322317`*^9, 3.627150560524344*^9, {
   3.6271507143231134`*^9, 3.627150719522588*^9}, 3.6271508398619986`*^9, {
   3.627150891190296*^9, 3.627150916278062*^9}, {3.627150947520938*^9, 
   3.627150963654719*^9}, {3.627150996003335*^9, 3.6271512160710773`*^9}, {
   3.6271555519616723`*^9, 3.6271555620974455`*^9}, {3.627156394921487*^9, 
   3.6271564086396494`*^9}, {3.6271924982724266`*^9, 3.6271925666721315`*^9}, 
   3.627192880282686*^9, 3.6271929716377306`*^9, {3.6271930077038307`*^9, 
   3.627193015117784*^9}, {3.6271932383499494`*^9, 3.627193272029454*^9}, {
   3.6271933398267574`*^9, 3.627193346542245*^9}, {3.6271934119212866`*^9, 
   3.627193475963077*^9}, {3.6271954315448065`*^9, 3.6271954360988493`*^9}, {
   3.627197307416922*^9, 3.6271973242881975`*^9}, 3.6271973622095366`*^9, 
   3.6271973985718327`*^9, 3.62719749643923*^9, 3.6271975334369497`*^9, {
   3.6271975994800835`*^9, 3.6271976198887177`*^9}, 3.6271976557056503`*^9, 
   3.627197720084672*^9, 3.6271977545597086`*^9, {3.6271978528443794`*^9, 
   3.6271979455203085`*^9}, 3.6271980061398153`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
7B/a3Pc3ah56+rUPVsQS8ONN0Rgf4jqYHWK0S4knIGWtxiHHo+RYF9395kMS
ARmjC2ByjgoNKJJzn6QQ8BeD5wFhYzossPEYsU0n4JEB1vqnpxlRp8iY9WQW
Ad2HWbQ+9zFjmqSE9p48ApoUbHy5PMeKSj4LNoIkAjaZoF9jLht+HS4OoCgm
4I2W9vMDGuwociQkc7xs970OuxOZL7JjyNcb/fVVBHSMpLtnvpcdWWm0GbLq
CMiUqCxck8eG/tcZ9kQ2EfBDpVUKxT9WJCvruvisjYD7Az93/yllxgeyP/yc
uggomz6+VcjLiPN+T1JN+wg4b8yW/vkfLTqMne7aP7SL3z+eVn1nqHDYQJxa
8u9u/hRnqD5ZkmErfbH53DQBZ7yPtf19MQ2n7d97tc8TcNvTZstKrR3KK68n
EZcJ6KXm4VzhWknMeUlPFrhNQLFI263w2iWixmSn/F0KNUwY1zrV/G2bmHQi
6awVjRqOSMgqd3tTkqR/uLsfZlBDa9KhDb/rtKQI5tNxCixq+F+3eKT8BAOJ
11msgZ1DDUX0R/YmbjOTgmrn1le51fDVjnhSkREbiV61SKqfXw0nw/48kT7D
TvJ6/e5UmbAaWkw50fkxc5A2ZmzdksXVUMFPzsjjMQfJ1XhfzHtpNTQaPDJl
F85Bmkyhq34sr4bEhzLf/Zw4SLbsnUtXldXwBqVcOPc8O6n3znfR42pquCai
Ps2twk4ya3xsqL5XDeWfudYzyLKR6tRP/cevrYYx6YsLZmXMJIO3op/JdNWQ
6cgjKu02BlLBwmzpX1RDx08J1VaBtCQd08LZWn01ZPcnHTPcpiQpcf+PAiuP
p+r7ohGSKIRoFiol8h6eN3h3v0gqlaQSDZKhRJmKNIm+pSgKEUkqKpnneb9H
hsxTZCxjyJCxkvS7vz/359579jlrrbPOOtdaL8JQHTS+nylpj/qFJjXfZz4b
qUOG8ErP2YU/8No953dSh9Uh9HREfWdqB77W/W1udEwdVDzvMZZUJhAVf28u
9TuhDtcIZ/XFM13ERKYQr/Q0Ob/yrbLG7j+Ilc4PXBbaqMOJqYqHFQY/iR0q
UhsJO3V4bdRU+XPPX8KuP+yzxwV1kHE+Wb1NnQ8ev5D3zXBWh25CqA5YCyHH
7K3OxGV1mC6ovDxQIADdUmo/tl1Vhxfa39aKpQuCSE36y3M31WGvXGi9+1oh
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
zIsO+pZ0qB2MldwtnomK1wfit9jQoSbrQs8Jbjqm7zg9utSODq91pu7ev5mG
+sKtqpMOdBjTulCQbJyKTVXGF5ud6JBnGa5wlJ2CNoEVibmX6GCx/nNygH4y
zpjq/Yi8Qoeghqf7Zy8koaa7c/bn63Rg3LR5utksEV1DXnhJeNEhn+/Fuhq1
BEzLqN675w4dcrIs1uSeicfJT3NS3vfpkLopsGXF7zikTG/pzH1IB53Isz9P
jcehs9SxN1OP6aBacXWPmWE8JlPvOm4LIecrE7Z8tXAC/jBOp9uE06Fk7vku
cflEVHPu4Y+MpMP4gcN0/t1JeOGRRGXzKzpczjd7umZLMsYnEcHib+kQ80rh
fKFaCg7XOJzcHUeHK1a0r6qHU3HrWPgmryQ6RCSE1iwOTkO7peU/ctLocOJf
o677YDoOGm70Vsmnw/eI98+SM7Jws72JoTWPDumSXXLbN+TgWV8v6efFdHjC
UX4r4JOLb2KTOps+0sFjhc6NnK487P/Y+WZZNR2O0S+LqisXoNKgqJNBPcnX
lv73aaR/WwkzGbea6KAguH7FfdKfX206tzCnlQ6yZz7EtMRzsVs/pHKikw4X
PG3X7VvOQ3mb4uCtPXTYqc9exLHiocV/kyetvpH6C1m/6WIkD1+8lt8c8Z3k
M+DzyokiHn4pOjD+aYwOtmc9/HbV8XBtz/WcpVN06BZSox4s5eFJ/jjvXb9I
vk3rIkxieBgh32roOUeH4rm0+t8XeNgOwjLZCxjg2a2abLCBh6sstL6MCzDg
l6nIhmgeF81uWr3dspgB9a+f/fu4n0v62WOnM2IMqDhWbvFfCGJLPpfxTIIB
sSlVbSWXClC2Y3ThJ2kGtNp8/uGpk4+mc6urxFYyIK5SeEx/KhebGFdO3dzA
gLKrpx9V6WejtNmbzVkbGRDkbBrfO5qJJlc+jf/YwgCBZJeXJ59nYGDowlxl
NQYUBi/QWWmejvWZ6rctqQxQeKP689WWNJRoPrUvnMaADeOtEeslU9Fo5oFM
I5MBDMrYe4ZMCgZI530RBQYsE1c0lGQmY43G0Nudegwoeh65fPvtJFxqIut8
w4ABmfZtnyYHEnG/iz4z05ABNnybzxxenYgPHrsK/DBiwJmNBw+ERidgZfLL
qs2HGeDxR/OP9Z0EXFJX++T0MQaYmnesmy1IwD0/5k+FnWDAF69yL4X9iXhv
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
/bMM8a1rZgqHDrus2p1klStwovLK8SIuHWTU9990316JTkdlV/Y30uFKy1hW
6Gg1nrN2+PH3EaE/W0+aGZJrsUIztUXpCaEHKhKV5dfq8LNQS65BMx2ERa4Y
cD/Uo9J78VCHFkLvaYsGnVY1IKOeZh/wnA7Fpf4FjdZcDLsWq5HQTvQ/sFPl
//9p6f6Jxpk7HQSem1sN7DV52Osg0MH9jw4G/pXFIhd4KKVjXtj9kg7ND00s
OYM8NBePOPPzNR22maX+mlfn47GPtc5Lugm+e3x6W0ngNZf3a51eLx0OJx3I
V9/Hx87MzQLWfYQ+xBWojBL5U+T0iVf7++lgclVTV4XOx80upQ+iB4n7ceBM
Ki7lo9+mbzFZH+nQaXxhP/M/Hl6T0nWr/UyHZL28WdFwHj79cmjDy2E6TJ5+
MlwozcM/j4sWTI7QgTwXptWliah953PPojE6xHXuiBuT4eKeSI0yrW90+KW6
68KZQQ6m7N53njJJ6HFYwunB2/X4bUmfYcQPOkjbBF65+LcGyzwPT574RYf6
/PqtsvXVGFw8wwz4QwfFsbeWrZFVaPTz/CGfv3Q4Oui89aFNJf6xVFq7Z5YO
RqcqWU2aFchJzf/gNE+H2KKNK/fJl2PkW4Pb1oIMEBzdaNi6lMijaxrdScIM
8JxSSntjXIrCQY7KWxcwQHnMh/Y1mI1NnL6Xm8QY8FO9Q/1dfgmeFz9yed1C
Btw7s3dRRhELrXf8tV8lyYDuwRL36h9MlLqdKKksxYCnNbznnwg8v/iq9FRG
mgGmPVphN0KZeNm4IFZclgHyK8r/ribwv+OcoaWAHAMalqzJZW5moVJ74+wv
eQYM3rrANBYrwW6V7XXfFBlw3QGHX8gQedTvfcjQUgbknrSL+P/vxT3Ljhi8
V2HAJr+42ssXS3HV3N9vr1QZMKO7dNOe8DL8aJX0oG0FA34tSC5QjSrHgitL
DzapMaC8WW736xsVuF5382ClBnH+oP9bxEwVjoc+zGZqMqBflvGn27gG2Y+2
78nXYsC21NrLZqdqcbP70a4MHQYcsP3zrW6oHn8X/ktL0WNAXvqmViHpBqz7
nmQXu5EBhk3Z659rcDHCQlkiQp8BBaJXBd9qIFokFzadMGTASct3xncW8FDo
9eZzAUYMKPRVGbYl8ukj9UcWPiYMeHGQJT7G5WH8Uad/u7cywIj+ZJAkxEer
uv4aJzMGhNl/Xe1kwMdFooEnrc0Z4Bdrd813Ox/bts9uIgEDer5tkFvkTviV
rOTxLSQGZAWkZa525qPzF+X7mygMkJTbUdtO+B/FzUX+62jEeU+uWKQYkW+j
jDRWMRggtf2i4MfHPLzZ+qh/qTUDDNqE5v4d56HHUucsGVsGBJttdBWT4aGa
74CbuD0DqHJIEtyGOFgSqCjgyACYecEiARf96SkXvzkzQFtVK/3MQg5qp6vY
DrkwgH1ZdcyEyKejfUXi710ZML1j+bqi7FoMCnkc3baHAQpiAU+TNavRsNHZ
vMmDAR1n4naITlXiT6nBmQYvBuy7Rsy7uQJr3I5VV+5lwNHyjtal7HIMz587
wfQh8LfX71EGkd/MJ1M25u9nQNvisKsHsBQFti0by/RnAF3+7b6V39jYeP7e
vYyDDEjIWjPSsY2NcV3GfikBDDi8RaN2q3sJMtSa1GOPMMBDRavSOJaFEod3
vA8PJPiRMCHU8JOJrdWDt04EMcA32/FUZyUTLwoH7Qo4wYAq79o/Xo1MpAiN
FWedZIC+ROq19PUs/C1wcLb9FDE/l/rrot8J/z//0UEojAHZGcaRMRJs9J7z
vmMYQfT3y0tEqYmN8rO9036RDChqFHz6sKgUm//uot+IYkBlntBjG1YZRs50
3WiJYYDNid+6jR3lqP/HcXQ2lgHiXl6Ps6Qq8fOvVvONCQwQYfFetu+pwls/
GZf2JTJA44we+X1lNYpMg9GTVALP33JKnI7XYc0U5/yfiwTfFhxs+dpUj0cm
TXrWX2ZA11DZX4NFDag+UaHrmcGA+kD3nDFTLr4a3xiVdpUBGz45ZLk4IiaN
PehsvM6AzAvl5cvVeWgxqrXmx03i/rzIk0lEHp0euXtqbRYDnLVuuSX18rDo
i9oztxwG3B9VXHpNmY/uw5mqKbkMsNqrqnzFgo+yQ0sDuXkMWDQiwO8i9Lzp
UwZ/Ip8BtJiLJgqEPw/7KCO/uogBD9o2keII/df7kOLnUswAy5eBrMYvPPww
IF6b8IABDjtG+1/f5OH1/ljJOhYDfn9XfWZizEPb9wKeo2wG3Dj57GdYNKJA
XwR7RTkDIsD/q9EJLlb2/hbaXknMJ949rY7RgCu6Jworawl8U6uOkKrqsPPN
4ZmhegawpN4x/+6uxYTXw7YqXAYE+XgIMf9Vo9kr3xxbHgOaj+8OsrhThRNd
/ZORjQywcJt+G+ZUiXf/c6eUPiLqX7wquE+uAt0631z90ETUIzTAODdahos7
dnxRaGaAeZ1WquBgKTa2vzBltDBgYZGYvdsfNoa02V4Ie86AwJb3L/qM2Lj+
+dP+B+0M8PYL195B+O3+ForB+w4CL4z8CDlfFmY848XJdjHAdbOqwxSRNxnN
Zm/IrxiwDoue6T9n4uyTGu2QNwxo+Zo3vluWhWVNhmeKuhmwOrPDWr+ChX6P
2e3dvUQ/Dv81Pi4rQZVHOupS7xkQ72Vy2ySWje2NRcEWAwx4pBVaeMq1FGP5
Gk+CPjDA+uiqfGOHMjTh3Va++4nQR61pjbd+5TjKVT38aogBx41W71Ei9Di3
4TpXfIQBKxMcM5f3V6JEfZrPkXEG1DKi7P5crkFu7aKqnAlCH+OdTlhN1uKJ
mvPinVMMiNm1ePaBVT1qVYvsEfnBANt34i9OXuFgb2UU0+gXA8ILRa1d2how
reLf/IE/BF8x/1b8OBep5aFOt/4ywFgwY3puAnGmdPru81liv5Ueb3lxgIcs
9rFf8/MMOG3vOVfexMP/Ab3i+rs=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"x,y\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"x(t)\"", "\"y(t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6271490562013645`*^9, 3.6271492165895357`*^9, 3.6271493304175963`*^9, {
   3.627149400409367*^9, 3.6271494226530137`*^9}, {3.6271499883259983`*^9, 
   3.6271499919484196`*^9}, {3.6271500513060813`*^9, 3.627150054844446*^9}, {
   3.6271500946780634`*^9, 3.627150106560003*^9}, {3.627150141668462*^9, 
   3.6271501602118545`*^9}, {3.627150199728259*^9, 3.627150235100894*^9}, 
   3.6271503782575536`*^9, 3.6271504406322317`*^9, 3.627150560524344*^9, {
   3.6271507143231134`*^9, 3.627150719522588*^9}, 3.6271508398619986`*^9, {
   3.627150891190296*^9, 3.627150916278062*^9}, {3.627150947520938*^9, 
   3.627150963654719*^9}, {3.627150996003335*^9, 3.6271512160710773`*^9}, {
   3.6271555519616723`*^9, 3.6271555620974455`*^9}, {3.627156394921487*^9, 
   3.6271564086396494`*^9}, {3.6271924982724266`*^9, 3.6271925666721315`*^9}, 
   3.627192880282686*^9, 3.6271929716377306`*^9, {3.6271930077038307`*^9, 
   3.627193015117784*^9}, {3.6271932383499494`*^9, 3.627193272029454*^9}, {
   3.6271933398267574`*^9, 3.627193346542245*^9}, {3.6271934119212866`*^9, 
   3.627193475963077*^9}, {3.6271954315448065`*^9, 3.6271954360988493`*^9}, {
   3.627197307416922*^9, 3.6271973242881975`*^9}, 3.6271973622095366`*^9, 
   3.6271973985718327`*^9, 3.62719749643923*^9, 3.6271975334369497`*^9, {
   3.6271975994800835`*^9, 3.6271976198887177`*^9}, 3.6271976557056503`*^9, 
   3.627197720084672*^9, 3.6271977545597086`*^9, {3.6271978528443794`*^9, 
   3.6271979455203085`*^9}, 3.6271980063549576`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
X/8X2ifGdRkgoGuc6hfDQ/cfLi/SMWKAkurFzTeSuYibR7juSmLAQhFpvaNL
K1rz4eCOWCoDRn32Km950oxsZm/LtzEZUFeZ+2zbn3oUIVfcKwEMCMPjL8z2
VKNmkx8vLcwZcOTqofgZtwokaafgc8WSAZJta/erUkrQzrNbmHnWDIh4L+D5
hZCFGjKSGrXtGRBJ8gm+TvLHVra2RB/ex4CBz+xjUkUvMKvxpYOPDzDg3s/4
evOlHKzGcP/kSncGJJVt3p9xrhIT2XmzyNyTASOJAczFrBpsy4m865dPMoDx
mmcsGtKAhYR/25Hrw4Aa+6bzIl3N2PvXMmt/nWfA9u+/A3/ubsWE6jl9my4y
gBfVzUg/zsXMf5x6dSiQAapy3u1eRjwsWCze51Ewn89h4x/CCTysXLuByb3B
gB716bKpHB6msSm2tfwWA+7sNfD2uMjDQjQ9PbLuMuB5x3LsxAwXG1KnLybf
Z0DCvw0JHVpcbNtG0ftRMfz4l+aeeMq0YqmqH7T/i2WAzMubhPTAZkxiQ0rp
uQQGiJwJsNRza8BOKp+zc09mgMfeNKEnn2uwlvXmPxxeMOCKQP2PoIVKjLhO
5urW1ww40DOTcKIJx6IUvsjR3jHALnfDoRvv8zFHuascxTwG6B4Ym4x8/BAr
lNn1QayIAVtWHVOeHA9DStIqJ+ZLGSC69+OW8YxXqFey+GFXFb8fu8XfDGpj
CFbdMmyoY0C6YE135OcKlLTSqbK4ia/Xy66PDHqrkZC4jtMbLgNcjw4ajN2s
R+6if3496WBAud+ZzrPNTahmRfV/dzoZQGvXESW3tiBd4ej1gT0M6JKJEfL6
24rClx/NOPWFAUEWyfH6/Vw0Jmiy9dAgA5wUKJY6V3jIRmD5Z5sfDHCWn9KV
bOahzKVWH84YX19HEOtrKw/JLj4VJU7y820+u7I3hIfO/T0Vv3GWAZtu/HF+
/ov/3s6xTWTm+fVEbr80JclFtD+r6pYvMeDr+T8ut4Za0OPZ7oPTgkyI/ndk
jLisGS1Mv54ZEGaCdKB3yJbieuQyFXCrXYwJ3mMtCz0raxA+sU2tahUT4HrY
Se5SBQoe+279Qo4JJg/k/E6uzUUDI7lfYhSZYB/RpcNSfIW2/PzPP1SZCd81
a9a37glB4kPqz45rMmHx3uf99NZ0zHtwku6kw4TqR4YKt1wLsaaBsmYrAyZM
JX49UddYhhl/jTjKJDBB+W+G+VX9Kuxe/8G/emQmmItKF1mw6rDJXsN7SnQm
1No6xBSMNGJ2PYtaq0yZQOh1nIeYFiy3u6F4EZhw3/1fcP5cK6bQFWs7Zs6E
kRIrKa+1PCzgk+dQjyUfv/TtNb0/eFj3B/qVZmsmXLjy0P/xqTaM3SEqi9sw
Yc2fr0+3JrVhCW0fXqXbMSE15qRZyLU2TICXghIdmfD7KWe/sWQb5tp6rv2e
MxMKXwwM+lnxsMpmc6+gQ0x4Ghm4qoTOxbSaZATPHmHCxL+0uAt9LVhow5do
t2NMuCYg37gjtAn7UZehb+fNhOVmA2EWHXWYde3VcvPTTMgTP3GFUFCFva3e
5Uj25fM1qOFQA+WYVJXKmKY/E7yE167r/1uI+VSOBstfYkLS2LyFiHAGRi67
9e53MBPqftN+ZRreRlsUpZpYoUywar8QYtH2BjmciRq5Fs4E0Trbqk3zBcij
VmFldQQTAnTKd/7aXY781Z7oSDxgwt2o6eIFp2oUekHNcvcjJhg3V0d7CzSg
R63P3aOfMGHXROOfKrkWlKqj+19XIhPs7CbWPPjaigqvvU1WTWGCGB7oJXKI
h+o/EcuPpjJhLGP75+ygNtRNyOtLfcvnE/dteWjejkZuMv/9ymSCU12Klu3T
drTYjymT85jA8dnH+ML3y5IMc1ZAERN65htIk0rtSCWyxgnDmKD58axfAKcN
Gf2wviBUyQTZrz0CFsI8BGatMdtqmBB8eXtzxclWtPuxfe6dBr6eXsgur13Z
jFwnP7XxWpjQ//370YoXdcjHymVKoZ0JIQ+9hjdVvUfBSV/WuHzi4/cxEAi7
jKOoeXfj5M9M+LpCMV2kIQc9s/25c6if3++ZK5TDbs9Q1bLpWz4/mHAsae5z
57dU7IOTf2reGBNWUmbpu6QLsKHMhZqFSSasiDn9ylSjHPsjfu075zcT4tc2
5+aersbE3IRX3PjLr+84NUbKvgFbV3RTo+EfEzLq6zWznVswXRnJzWuEWODu
LbIhczMXY3pFHnYQZQFbVbv8eDsPs66QvxorwYJXydx0cbF27MD62Pg+KRZE
e1eC3Yd27OTZDSWaciz49Tu5roDB98/1yV2eiiyQ8txnYmrcgd1V155/p8yC
QspXeW5+O/b0YprCjBoLCMOLraMf2rB0njGVocWCZIbGjZFIHlaml2MfqMuC
9XK3G3vG+ft/MN230pAFq8UkH2dON2Nfu0oixUgsqP7wRMjXpx6bJpll7KSy
QK6RtOz36SpMbsBq7CNiQU+E6VO3xFzM0dz52KgNC8KSHsfrSBSg43F9IUR7
FqyA5THrieUoYPrIc799LDiaxcZVb1WjMOvhiuIDLFCed6OU+jWg2Gcnvgi6
suB7y4C/8OkWlLYwIbDVnQUBf9/tWHTgomK78xvCPVkgrW5k8nWQhxrT5k1b
T/Lx4WZOrLXtqEco0Fn+LAvSUnoyVPrb0Zjz8ov7/fj5tSc++6MO9C/7xqOn
F1mw833UUKdRB5JaJZH/LZAFeTI/w/GsdqR6NKJD9zoLjuAfkUJzGyKUyM6c
CuXjefs67cUNHjKTeySTE84C+/Vh8GGgFdmeUCbOR7Dgtn3VyHxPM3J7n2iD
HrDA7czyt7vd6lFVgH/A6UcsEIq+f+Xf9SqkbbzrWeITFvByojjvt5ShkccL
v5ensCDyen/2Zu2XaKcNT42cyoKIqxdeKtxzQenCqdvd37Lgb8TP4JXkFMz3
9N6Emlw+X4KkB8K5ONahaVg7V8iCimIJY9+v7zFal9CULsaCe6HG6Wvf1GGP
I7qUnCtYoMC92kBYbMIWLDK33K5mwdC6uLT+g62Yy9/Q06X1LMBz/Js8Jvj7
VPrBx7+aWXAy/qzSGb02bKM7pVK1jQWXW2sCU0XasevrV43t/sjncx/Z1+5a
OzbY8nVtcDcLVmXWXot/0I5ZhhRysvtYcED6/SMxi3YslXnP69sAC1wPWgZl
RLZhEhMeD+SH+fFuhn10CuZhJ1PY2NZRvn4JMrNmylysZb/csP8EC3YMb3g5
7dGCEdeMSKfOsMBUNd1Y52MD9qCqnNU1x4ILp+xjT7nXYH8uPnKXWGLBgvHH
1pN3KzAnwukI02WmMNbm7CrDLcZU4pQHEsRNYY/1pCG2Iw67unt6VaukKeiA
SHaDYAT6sqKeukzGFOr2WP96Ov4GpZzxv3VkvSnsKjEUFB0tQ6KbduU82GAK
M8uPahNyqpBnt2ZvlbopKC7I/XCSr0cN9xZE/2wyhbRhywadxSZkuJVH1NE3
hW4RqyAR/VYUsfDK2cnYFHb6KN0pu8VFkxlXQ26ZmML3+uRzFL5/tfPYm15M
M4XGr/9GadvaUJ6SYecoyxTObRrQXxvfhtZxhYQ2cEyh3jFBTjeqDV260WVg
Y2EK3NRE5U79NtTDytx7bZspnBdTmrvoxX8vJ0OvZe4wBZEBrevtdlyU9OLg
66+7TcEaG/06O9aChA5Q2mUdTEFZt/OuRlATcpde9c/CyRRqxO3dX6XUoZrq
r9p+LqbQrP/a1+1AFdK9XGj70tUU1vebt74pKEPhxHuXPrmbgutaReHXCQXI
5gm7hXmK//+66fTd0/dRpq3cvPdZPj6hZTLBIw8wWdER9Xg/U2hTuNp9OeUd
9snnkZ/AVVO4sc38IKW4DGNpn04kXDcFD8r+3jR6FRb/eUu9a6gpxEm3/jjK
33cE7ivP3A83haUrFz++W2zEXC2nVd5HmMLgCRs3zXstWOVineVslCmoJk1W
XehsxbSyEn02PTIFeO0lUdXGxUKP+cc5PjGFEJLURyLf3/5Q3lV1M9EUdH3u
xnDqeNipzKpin+emEEPXyCmp4GHTW9hZ+1/x7z/evT3mNA/z78p5Zf7GFEpO
OE0tcbnY4imDpwYZpsDccHiDwVgrFiT0PFo+xxT8o3ZcsqpqwVY8Urr9L98U
8MKiZel4E3bLICp4qNgUfszJGxhcr8ekylcGtOKmkGHXu6/uazX2wCH4dGGl
KVhOpY9dGq3A1v2cd0+uMQWjjPNX5A5hmLrsjz3nWkxhi7vXNZmAVIziXmOg
2MfX53+X2P7q+ahoHmksGzAFNxH9gpELOIK7eet+fjcF6agvUR4plahS3WhN
209TSBwwnSy9UYO25aeIlPwyBWrn60f2qxtQk7XK0vMpU0iXs+fdMmpGtv0P
pu/8NgXDtoam6dEW9OHcqp9+f01h5TtO2DshLnIW/6//0D9ToBc8aqZ94KK+
+IUP25az4c1XgXP5h3noKMm3iSjCho+ExWi7RB76Uf2zcv1KNlA/Wr16GsVD
J53dioRWs6Ggbb56C4uHpsY7M0al2TBvvDaY8piL/P+zfdkhz4ZAEs3ZPaMV
LSjWxWPr2FC3W+Ax/l8LuvaW8+ClChuUV2qPydGa0IrNBbfubWTDffsL+UlT
dSjsg3FQgBYbhpyTP8daVaPV3i/93XTZEP7sxOQ7qwoUJaB6ytqQDULE1Re/
CZUihQcxR8lENtSo+FsUL8tBT3RWO6tQ2PDA7ey3CpcXKMV2yXLclA3BOVVP
U6OeYHrfz6FPHDZY2vDYAl/SsfSLo+RyCzZM/m3NkNAuxEykjuq/3sYGRalk
eBdWhhU8694YtYMN72Pu6FhUvsfYdDvFy7vZ4NtxXDUvvRYrb6xf7W7PhuxN
9KJX0Ihtdd28Ytc+Ph6dmVM9xBasYbZwgXqADc69RG+Xm63Y7lvEKdXDbKh+
TJecesLFOjakDosdZYNJ2ZHUUC8e5pSt1jd5jF+/xfWz/0Z5WK/lo44ubzak
xxT/2byxDTvyWaqx8jQbcq9fYcysaMOGzoRWvPFlg4JUTt/HOB52YoVAYbQ/
G+wm//EWvnGxycd+6YGX2BCndPvSzW+tmJ/Rr5RjV9mwlPF43+uEFmyhwv3J
7utsOPqx9fNvYhN21bHnPiOUDWseDBI/ZtRhwqP2YerhbLg02r3KobYKC7vW
eFUigg02EbqP14eWY5LyFn4z99lwI77/cvHfIkwBmRypjmXDBcnmmIKtiZi1
weGvQk/ZYHWx/d+V8GsocP0dV7NnbJAKxoRGpVNRplhRf+BLNhwzk9Avy85D
g7+/HypJYwPp2Wo7g2VlaN2gbN98Oht2vPmh8G/gPdrZxjlIy+HXq9fQecq7
DgWVn+w5V8CG5f5ND1cGN6Gc9NgDWSVswDhyg0fFW9FQfE33eBkbznwK+V5w
g4uUbs/sN6xiw1W3yDdeGfz97uLGLq86NrjfPjv07mobun58l9OrJjaco6f7
GI23ofy9lz4NctlgP54vc2yhDf20eOWo8YENGQldA7LP25CKSceHw11suJib
cSpghIdsNy7fm9DLj7/XqSy6g4tCpIw7ur/y9e8ClQvHWlHBkrP9uiE+nvJG
H2f7ZjQycrNt7wgbhhN/b+jdWo9Uu3L3PBjn/w9FJyjFVciu9iuXO82GJ3MS
e1ZVl6HQPClbqTk2FG4b0Fm1mI9+3fe0uSWIYJ2pu/+08n9oY1BMc40wgtb+
FpC9nog5nK7cuUIcgVWUSku3eDYW5jLRuFkSgad52hUrIQwrtVbZcU0aQY/C
gsXW0kpskrG9oVQewfoggVsvE2sxTR3/7QvrEAzNX4yXlmvCHNc+r6NvQPBp
8OzePYKtWLgwd5ufOj9/cByN9prvP6aWarI3Idg1mfNz1z8eNtWvZzmph8C/
yGKN4GwbptXiWG1kjOCaw9do1s12zKn0vy0nTBBQG4VFcrLbsTtpme9TaQis
d4oFI792rPxxr/kQC0FUy74dY9w2bDZUolKTg8BO87NRdT0P0/Gjb3azQPxV
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
vp+WG1j3iUSDDKvjhVH9HJQVqfxokUKDmiVUp1Eibx/nO6aoQKfBw5Nxqskh
LCR3ISlBh0mD6F8vaoZrOlDHlzeSpiY0uOkf42gk2Ioi7OWinE1poOgi0h/T
04B2ca2EL+0n8P/7tOKBxSv0nXHncqIFDc5knk+M5itDJ7ZLBrRZ0WC11ee3
y1hxSD5j/8yHwzS4VBXfuOPaXdypGO25cJQG16vkT2WVv8S7BcVcttvRoITq
/Kk/5xX+4c8cNjlOg4i/Rx6UrmvE2ZNXbZ1O0oDjPeX6amcrPunQ8OaiIw1e
6ls+fDXYgVe9EbC850yDyM2hxwXDWLhrH7kz15UGvZqMW6YtbHy1JnRv62li
vfK/8gm1HLxbD9ePuNPg0YHLYj6uXPzj6T/0z4MGwdrMc2aFXLw7JurJd08C
j2ENu6JsLo7wVhIY9aJBkKqi4UZLLm4/nO307jwNfsubTLa85GCZXUaNnAs0
CPNSnH5Tx8a2a5o1mv0IPu/68CfmDgunCxy5URVAgx9/VBs0mJ146vPHsfwg
GshM2Bnl/mrF+u0+plkXaTCFBez+oCYckivw4sElGrCOlUUE6NThxvi4FXfC
aLBOsHL53ooqfMQul3PxCg0kloFO98UM7D81ftQymgaVIaKy/5LKUQ0nsJx5
i6hP/bHqVNkrJFIiqmx8mwbHfltWFHxsQBb/JV7UvUMD0+c+09Y1LSjpksbg
xgQauB69cZG1swO9dywGlXs0MDl740/sOhbazKSlSCfR4JqT4Qn6GTby1uIJ
iP5H6OPm1slV3hxULunovJBMgzK7uIhd27iI/+d044+HNPh1z5T+M4WLTHpD
N355TIPAGJ97PU1cFFe14uZACg2O1kqMdD7gor4nD8e5aTSYNAmtH1vPRepX
tc1aMmig7Z3CGnXgoDNulS+qs2hwz0jH1+YoGxXu3ydZmE2Dg6Qe4wIxFprX
eev1NIcG1ZndS+YX2hFV/jT34QsaVL3sTpAMbEFRf3/viM+lwadMF77t8Q1o
db3sbEghDeafW1yebyhDLllp1j7FRP2hv684n8tFL6J0K06X0sCeKu52wf0/
ZHzoQIhVJQ0slghaPBJ8iq8aDQ3urSbwWn5VIoS/GHeu9iShGhrQRY/7uuzA
WI5/IWVHLQ3iLbsd8ufq8PFPUYKb62nQ+OZL0pRUM85qVXJZ00iDPJW5f1+6
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
CUQ04Re5534vLjLBv/dJVf22Ovw/UuN5gg==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(v\\), \
\\(x\\)]\\),\\!\\(\\*SubscriptBox[\\(v\\), \\(y\\)]\\)\"", TraditionalForm], 
        None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(x\\)]\\)(t)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(y\\)]\\)(t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6271490562013645`*^9, 3.6271492165895357`*^9, 3.6271493304175963`*^9, {
   3.627149400409367*^9, 3.6271494226530137`*^9}, {3.6271499883259983`*^9, 
   3.6271499919484196`*^9}, {3.6271500513060813`*^9, 3.627150054844446*^9}, {
   3.6271500946780634`*^9, 3.627150106560003*^9}, {3.627150141668462*^9, 
   3.6271501602118545`*^9}, {3.627150199728259*^9, 3.627150235100894*^9}, 
   3.6271503782575536`*^9, 3.6271504406322317`*^9, 3.627150560524344*^9, {
   3.6271507143231134`*^9, 3.627150719522588*^9}, 3.6271508398619986`*^9, {
   3.627150891190296*^9, 3.627150916278062*^9}, {3.627150947520938*^9, 
   3.627150963654719*^9}, {3.627150996003335*^9, 3.6271512160710773`*^9}, {
   3.6271555519616723`*^9, 3.6271555620974455`*^9}, {3.627156394921487*^9, 
   3.6271564086396494`*^9}, {3.6271924982724266`*^9, 3.6271925666721315`*^9}, 
   3.627192880282686*^9, 3.6271929716377306`*^9, {3.6271930077038307`*^9, 
   3.627193015117784*^9}, {3.6271932383499494`*^9, 3.627193272029454*^9}, {
   3.6271933398267574`*^9, 3.627193346542245*^9}, {3.6271934119212866`*^9, 
   3.627193475963077*^9}, {3.6271954315448065`*^9, 3.6271954360988493`*^9}, {
   3.627197307416922*^9, 3.6271973242881975`*^9}, 3.6271973622095366`*^9, 
   3.6271973985718327`*^9, 3.62719749643923*^9, 3.6271975334369497`*^9, {
   3.6271975994800835`*^9, 3.6271976198887177`*^9}, 3.6271976557056503`*^9, 
   3.627197720084672*^9, 3.6271977545597086`*^9, {3.6271978528443794`*^9, 
   3.6271979455203085`*^9}, 3.6271980065180674`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
1mZ87KkvRk0fJHa9NGYB654naUq4DJmnR5+oMGNBgtTBP8JPytFn1+X5tw+y
4JGzondRRwU6rXp+9Jw1Cw41iN89vqESCU7OqDrasyBTPXtK9lYFiq865a7r
yIKLvlVq7lblSOnccIGKKwvuXlHc4OFTiio0j4ytdWNBeoGBk5JwMdIVeq82
5c6CIrNl2VvC8lBXm9mpbi8WfFTJHIq7koVc454X1Z1hwTKRkx1eW++gGSvt
8bv+LLCUsZ2kvL2BaH7eNW/PsWDf+XRnmk8QOp2YFiYWRuSXc41+lGqBlVe+
2Gt4kQUGZ+H4fE8gNvVmfn14FAtSbkhdKHwehpF/qfTVXWPB4PZgZ+O/IZj3
+kM507EsCO3+N1992wsroVzy3J1I8GOb9KN13BmNm1WwXJNZICdq+1hpSSTa
4/1p6d27LHj6sEyRKp+IPG6ItXZnskCgaEVKSGw6KijGEkRzWTCl3vWiLSUH
jba72xvksyDtEF2/lF+Adv1M3hFWzIIDRRWDbKES5Lb22XhtOQvE6pgj4e9K
Ud7u2ZqpahaMyhbdSpgqQyNG28NVH7JApbXrqzm7HCmfNDdyecQC/r0HJ0qK
ytCxK2GSqU9YIEqTbh+wL0U5ecV9Xf+xwLTrxbiMSzH68l9fzroXRP6sWcsH
HQ/QtpHVXvqdLIi5IjworJ6NnIU47NAuFii+ulF23iQNZe44vqz2PQuWTh86
9Ug1AQ3qJrZO9hH6juobL7x9ASm4PknY9YkFL3Ov3b4QfwQ5XJiyd/7KgpUn
6nctI3liaVkKyne+E/inFBRWRJ7HPj42mXjzkwX/3V45TQ8OwTZ/Ole7dpoF
OTn5A+vV/DD7pfnherMsSLpad0wryRS7o/DeKGSeBRJy5zfcXOuPekBIqkaA
DbdnbJyp3dfQJgf6xwlBNnQddbdb1XAbWQc756oIs6EyKlVdQDcDJaXGejmt
YYOM7cs/cpE56N1DnJ0ixobDcT/LvDTzkXTv2LI3kmwIyRphlosXI6t52bY1
G9kQ+vN7m6d3CUrctPem7mY2DH5c1TO4oxR1sf0PB29lg7OIq+KGbaVI0jpH
uXo7GzTCyeaTJ0uQuf+biXEVNnj8VZSuWFOM4m4tq9u5hw1/OsWmHxrmo84q
UoQjhQ3Nr9w0tuflILHuw/uSGWzI+pinYXkjA5nOXJV6zWHDjxRJ0wNlSShG
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
m4/+ebQRKjiOs//+sWH/Jtlt99aowP8AZS4i6w==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwUV3c81t8Xt/feez2PvR5ECJ9jZFcImdmyM6NSZDVIKCtCkqzIV4TGc4s0
zCQrlJGIZJbt9/z+uq/7uvfcc86973vO+y3uedbGh4KMjCyHkYzs/6PErb0H
RSL1ek84Dyx8cszBJOwRfbDfLYyGPupgImyDaD2pcEvGrxhjPRWHj29eJx5Q
tVkypz/ChI2F7Gib1oj2+X+safzqsIAOlV3T0FXiIE969UFJA2bCaEr/5Ncy
kcIDr7R78xk2litaJ2GzRFSsbn2yeeE5dgNne3Hb7RfRYcNKbeMMEaO8QXBo
YJglvileG42peo0pey7VhHtMEofa9YT+lbRhP4kqMUmTw0QK1i9FazffYR/9
yc84/awj8h0S+x6W9AGTdXjR+KK7FVNyDBRfvtCJVfxnYfzr6CfM8QF52eKZ
Xsw0WczX/tMUdti7PFy9rg/7aRun8Cv3J/bmr8XtyKpPWG0qxa8YgUXs2PWV
hoaH/djnT+kmH3HL2LBg7sBqyWcsJcWz7BXTKuZVq7OhUjiA/fno+fRu2xq2
BFPcYblfsFmKTww/DTawmM9XNZ5kDWIstYPtUVf/YpS+iqf+3BzCyCciKmfT
/mHpm/3RSteHsdMsLq26VpsYX2pMXnDSCHbk3n90JZ82sQfCIi01caPY3cWn
t8wZtzClJ20jCxe+Yl9siRcydzexFgP/bblzY1hzcjWuq2wTM/rCIhgQNo6x
SjDQCFFtYr1nnh6pDJrAnnYwbRTz/8Octh1d5s58w/4FeGV9ndzAwjviXt1W
+Y7VJZbwfnVfx5pv9R9Xq/uOGQQPX/e4u4rtOUh+61eYxBqSWUvdbyxjBhIx
Z8OrJrEg3hvbzDGL2LWFjwfsMlOYn8i3FQmHn1j3U+GM+odTWM2WQFr3u0nM
waTtyXLJNPajv5HDN6wDK2Lj0c8QmcF6evJLH1rnE6dH/D4pF85gl9y66ukP
dRNDglhWQ3J/YOGWifRH7WaIT9U9Eli4Z7GZyuHUs//9Im7tN3DUZs1ifzNH
suiDl4lJmY5qv2/+xKolmay2Bf4SPzrVtKUxzmFdL94YGZVsElnxBycVrs9h
pz89/Wc8uU20/W0900kzj12oL9j48XmXeLepLDIwaR5Tl1o+qhSyT/wW94+K
keIXlnRN7llU+QERb2aeXRX3C+u8afEnUZsMBXDckzTf+4VJUIbUvjxDhuq+
/mmcv7CAXW589mbqFBlaLzMwvr65gPFpqhVcoSVD2iHZgzLnFrG26cf8VHP7
xLjDc77v1xaxEWK2r/7hPWI72ZF/Z8J+Y9r+/pRj29tEho83r9L++Y29KHxn
rK22STxx+zvvo6AlTNneoY4wvU6846JWYfxrCfMh8p+SZVshjkqmaM6e+YMV
JB2rW0+ZJ+7hk77xLP/BdCxx9vEvJohsHPptOB0SbleqZX2N3xBV2bEA2/Zl
zJ2eMm9WfgprZ3v1MohuBds7YrL89OlvzI5Nlz3ZcgVrWi8NPH99HYthPdLc
OLCCER1U/GN0DjAG1lbGHr5VTE/irqEkDQUUsGi5zbqsYgsFpVnGSlSgwNL8
337JKsZeebc2kYEGXjEfpuH9sYoJm4qaraTTghVzk6Oy7Brm/m/qZFEdHUwy
qT82CV7D6nLdboMnPYQzPSVzr1/DcA5S5zjv0QMVk5ptzMYadvrVKvA40EMO
43+PMrTWsc8FAmEdaXQgzaiyU3FpHWNHm4ojGrTQzPDk+OvX61hfyflHZbbU
YM6gXDpCvYHhjJ0ep/2kgDH62o0Vsw3MJL53TW3+AAumVzRjSN/ANB/MiRJF
trB9uppCiX7SvF6Iz656Bcugk1/W5vmLJcwrnvsSPI1J0FUZnnT6i/2IAJ1/
KU1YA61sbmDRX+zEw9wiN8cx4iCNtF6h1D/sVm8dZ/juP6IfTXnm04B/2HVP
TrsVejK0RS35o6v2H1ZR8brn3ldKdIO6TPPHKulfGn59PuROi4SocWl7GpsY
c6tfpHkKA6qlKv3GfXETaxUQi3uixYwwKnE1JeImxiBF3d/gz4r6KEtSjCm3
MNtBR5HJBDbkSSk6etpkC7sgr75XcsCG1imKFKNTt7DDFYm2YXh2lEwhfOVW
7xbGWPCYpXeBDfFQFA484tzGDMVcp2hs2FAFuaAMOrWNxaYR56orWZA2+d2L
wwXbGD9Nxfvvc4yok4y/d/nbNmbaaRM17EuHXMjyJOjxO1iW0+r324pUaOmA
55y43w4mNeaoLdZFwvtB9getmh3MXVtXePPsOpHtgEvYZnkHOyKTV0NDP01U
2+doT4jZxajzOs2uKPzC2vcyeQte7GJlOtdDeE5sYvZ7bIENZHtY8fWbmoRc
cvi5e+tVp9EediuM737nSxqI2WXhmLm2h7WSvWz1vcIIDLs3fXa79rCI3DsN
uh2sULDD1MLFvo81/TidZtbKDgo7qUyKdvuYCM30vWxtTni1zeB+NH8f03pw
req8AxdYbV9vcB3fx/zy8uMjGLhhcouO9pz4Aebtnt4hb8oN4VtXndJ9DrBH
kupXQ0nrVFs0teWVB5jWUXFf5WNckLOZTE78fYAdCntQ6c7CCVyxCVULfGQw
5v35fMIJdhjb0R/4p00GJ+qGCx7Is8DDi+T7lK5kkI6aq3ZX6SBh/V1aTywZ
UPaE88SmUYJ7cLpgfiEZePGHCAfH72BCboJaSmNkYBHDcny2vQPbHpp8t7lD
Bud4BpfmI6aJQ1YV9m2C5JAURyZop/SXmGWgHungTA6Jcap2jgs0KPT5DgXu
IjkUvsJbp5xgQscOvcn8fZccxsYPexsWsiG5x9fEmlvJgfDw7597HRyITupE
XcIoOaiNdvPgCrnQbBG33rFtcnhp8fl2MzsPaucd6+IVoAA5/07yT8K8qDSj
1HlKiwI2x/3CuZp5URy9/68aRwpg3U0P3BrhRS4Jyuejz1NAtea9s/cu8yLt
nQ1ag3wKiMv58VrvAQ/ii3yRw9RCAexnJzPXTbjR38UEyaFhCohRdB/5cZYT
DfiYPb2/SQHS6r0ZcuLsqH6C1TCIjxKE5rvfTPczofRTg580NClBl9f7u2kn
DQrqK3Qnd6AE4xZti+fWZMjczOtPZzQllLXGHI/nWiNKv5G9nJNLCYp5Cy+N
WgeIUw1NBfJDlPDvmQ/uIOUvhhQuyf39Swk9X6QfDM2SQ9FDwxbEQwW9e3ox
Qwp0ECvCYJqqQQUi43pSdP+YwTG3b9DOngri8faPjLPYQYMt10fsHBWUhpFR
0PaQ8HDddf1XNhUMb5JXCJVywyo5PrGxkQrCpnNiuCh5oe/CL/b4L1RA2cLl
4vCTF2rXnpSYb1DBTJSIiLUJH6QGRStzc1ODklq2yaQwH/j90H317RA15DXG
UOv68YLxaapjVaS612jUyN8kxQP4oY9fIyOpIUPVn5LblQvIrTIDsDvU4Pbc
NZiZkwMm3p/aon9KDacMLIWPvWGBF/oi1wY+U8NVs4ihqFY6uNs6w1O8Rg1p
nxsuRqiR3kGt+qE/Jw0k9velC5f/xdQkNdv2bWhAKfKIfBTlEJGtaN/6QzgN
cL4vFT/oXiMu8bz9fjuLBpI8vTehlgx13Uo9e/o/GkgpeVS8wk6Lquhs9mX6
acDjs39pwDITunaF7+baCg2Mi931H+RiRz7bE4Kv2GlB13PX7rgVJzKIeFh1
TYUW/qjQtcYLcyOxxUCtk9a0kGwtRUYZxoP2vVXfC4fRwtjQW7Hr+rzo6/im
/VwGLURsh1iRXeNFzfbEH/89oYXLF9JfZwMvyulNjrzURwtUJTIKaf48KNLU
ktJ0mRa0PmMu76m5kc1rjiwONjrQzHF0fiXAiQjaI2LjynTwQFRD0/A/NsTc
UFz36AQdfKH5ZkPRzojO8Wzl9YfQgT2u9eXXcmo0cd4mYe8mHRxVu22WobhP
fALUdie76MCcvdEtra+NyFd2Wu/yAh2oR19qyNiYxa7QNktXMtADo0RJ5ybv
FvYrgJ19QJYebiSkWLPRUYJNT8D2vik9fNRDrMBED89V2qdl/ehhw2CJVeMc
C+Czhbttr9LDT+qjg9yZ7JC2ea4prpwehsrVutbPc8KGc19x1Vt60PbMn+aY
54LTRNnrX2boQUuHXXXwMzd0SCSGk1ExgLiA73CuKg8op4w5y+MYYMOe4Us+
GQ/kzasftTdgAIuxcBo1HW4gO3ZL6YoHA1wRjR4X/ckJ/k/meGviGQCzLKuh
oOWAfk4D8qFiBjCE48bMp1hBO7rgFzmRAb4sCOKff6aHB6PrnxUmGCDV6TpV
VzklMOkdf3lqjwEO3T+LP7a0hY1TkWc8PsIIm9TtKfmv2onGfk7nh50YgYnz
vjET1wqxtrPBk/ICI1w8cXmyyOCAyKvMbKmUzwjnR4q73vvSoPgsX3XHZkZI
LMja0H/ChOY2iCJJQ4xwU1ObrkOOHVk78tPV/WWEmln7C79zOVHri/CVEW4m
MFLefiuWzo0kxLpGqdSZwCeuKzdpnwelJkq2K9syAbn43dvfxnjR+uzlx04R
TCBposl9XZQPuZgP5yRnMYG7pqThScSL3j5WiX9SzwTjlXHJUy94kBJ7qv/X
PiaI/LQROsnDjXIiZ2xolpmg4c8zmW9fONDBkK6OCisz1OcdxcZY2JDfkVxJ
FyVmcN2xV1eookd9RcssV48xQ8NiYVldNAXSojDfrA9iBnILvus33TeIDB92
P9JWMwOvfNuployfWISC/VPVj8xwZToySLtkFxu7VXfPdZ4ZZipD9H/cogGj
Nbqr1+hYoP+2eaZ9GAs8tvcMbZBmgW/s3oEekxzA0/rcccKYBdqaVNZGZHng
sjC3Ib0vC3jnplew7PDBz/gQhUPJLHAtY8b7HCYIVjPvuN3KWEDB9L8b/tNC
0GwifnC9jQXcz/HZUQ4Kg3j1hbmnUyzwZOgzFZFBBG6wDHz6Rs4KqZJllv/F
CMNqmOJzBnFWkPp46Xe3oBA4f0kpUwdW+EaLf7v1lx/aNb/fdHdjBdvUweAV
EV5QKNSKTr3MCsmGd5j7yzkh+yDLvekeK/R9DhXtNWSFfc9Fs8kXrFAlrKCi
Y0kDvh1H1ZjGWAER3w4aE7awQuNdChVmNljKf2zz2HOZyOR2+S6fCBvEs9m9
73tOiWKjyVTJlNmgPGTvqDsPK1q8lfDhJ8YGVcm+XRe2uZBLBZVHrxUbNLIu
VNVTC6AulLLZ5MEGlgNm9gFXRZDOCF1GUTgb7J1Lf9WkKI5qVm5IpySyQe1b
N7vFOgkkxMBMDL7DBvr63Hr6rTiUJnHL3u4hG/wVWTzSj+HRrjb7kk4TG9Ap
2qfc0MCjoJO3k/Hv2KBOd9T3dS4OjQVyCzMNs4EeQXqHwUMCWSblPl2bYwMt
qcUGtUIx9KKQ3/LrFhuMRLLXajQLIYXGguk3DOxwUX6TeOY0LyrsFr5YJcgO
f9i/D69ZsCOm2WKOLAV2MF3/EFxuSY1i98Wrzuuyw0iOSMpw1SLRRVlqxNSN
HRw+cKSGmtBAl0lFKCGUHZouZ1OFRHCAjrscHd8VdqDy7uY3u8wPNTE1xQek
OiQlKplyglEMhDKVDv8sZYdDX4MVsmhxkFb5pKengbT/5aEHHfckYfe1qm9T
OztUw2EBhZfSEDT6dO/eF3ZoufGYnctIFsZWNbKTZ9mhI6PX7qqSHFgytigE
/2OHWif3mW5/OXiBO9JuS8cBpg6NihsLsqCg89JZh58DRh9dCVKpk4F7ttga
To4DaIbm7YNapIAl+PUNxiMcIPJwjs5BEg+Xkw0l1iw4wP9oFYcPlTgs3Xvb
MupC6pNRrf/dGRSA000m1m+COSAu79cM/XcO6On5MFd5mQOktr/iDSupQO+n
RXzmLQ44zhn8mPn0ICbCZ1XnXs8B7S594ioDbCid0G9s+oYDzvnfbSxt4kf7
prYTyp854M3i2Rvl3OIoxGMwineGAwIWheRv7+NJ/cOB+WCdA3CZT0q/XZRB
x7NGy2apOYFihHdHIUIevapy0enh4YRuWn5Tsh5FpNQ28blRmhOiXK2KfSOU
UdFX98B7mpxAbjM5VSxDQCzrUxTJZpzwfd+TzFqBgC4z+dwNcuIEUXnJnyJx
ymgJ/1PFNpATLpwb6qBEiui0rv+HI7Gc0EyTu+UnL4967BbccTc5SfU50+Pi
lDTSCwneZCjihBuOFePuuzhUm/Ln1motJ9xpvspdjxNFIsVh0qNETvAqabtC
HcuN0p+tvXrdxwn4w9Ff/kbQoP3eKPvKSU7oa363wsvTRgyZ+/c7Y5UTiCtT
szknqGCC7EJyDCUXXBy9dUzrNRcc598VcufigkmW19pjv0TglcrlpyaSXPBP
iHaXWwUPSuZklsoaXPBxitiaEy0DRZ4J0zwmpHWncYZMggLk/bv6eNyeC6SO
7m4w8yjD7bSb0WW+XKAbmtL4poYA6eK39QPPccE2laN4S5QKXGvKY1RN4YKE
Ndy22jcVSLAo+rKZzQXh52mrXk2rwKXvD4qJD7ngv4/HjBfjVCAmqtI/pZEL
wjY3hC/8R4Bwhjq1Y2+5QEEzfzdvRwmCip/ucX7hgju31V8oz8jDmUOt70Zn
uKC2pD2BTksGPD8QM++vc4GqWezXSXY8uJx+6+xHxQ0uto6xmcyiYL/2UVKZ
ixuEfYpNWDy5wfpa358NHDd8WEnVpaigAeP/viYmGnLDDaYj+o6WFAhMJo+Z
n+QGHdwRjnRlTnRkbJaX3YsbHr8TZPccFEIaYYuTQ+HcQAmyb7n+SiACzWp1
UQI32KXdzJgTl0ZyBf+ifLK4oX4tu8V9RA5JEvYwBRJvjTokpCxHo4TE3lIw
rNVzg9mq9zClBQEJONENtLzmhqEHZ7sNdVQQ1x/movhP3BB6PWGmvlcFsSZx
+plMckP2YFDinwMVxMDPr8qywg21HCn7Jz+oIKpakd0BEs+I3hkrtZNTQfsG
+I4CNh542c/q9ARHQFtDshmeYjxA2WHl4RWjiNaDlJ1kCTyQcsTky30WObRE
ro5fxngg3j1yc0xcCs3laC81nSDNvZ0J4Z3iaFoemi+58cANOZ8ufXMBNGxn
YckYxwNTtKVPomK3if2/rHj603ng1YOr7/70/sK64+y/5xXxwCDtRmunNQO8
qfSIlHrFA48ahHe/pInCC70zer+7ecC8IUFfewYHzz4H0T0d5wGJ8wayv25L
w39+4f0XfvMAIbPxyDSSg5q96EL9PR74cBB2UtZJEcqzLvnSMfPCUuEXqm4r
ZbgvnUjoFeKF3vgNe29LAhS+uLadrcALCZoCMpp3CJBjnd7uosMLzab9sR2x
BMiYvZ2Os+SF3HwP1WkqAqRezHf45cwLmu9o9TyclSCFrViiPpAXHNTZ6YfW
5SH+Ydli9EVeaCj3yGddkYEL2lVNeqm88Pdm3iDDWUmI6q2Lpy7ghfaJBoqI
q+IQsNXKdbuVF1LJbQPe9bGDdzqacPzIC4euzNKUppKDG66jQmyUF5LqONqO
7/9HdGruDP85T5qbXjnCH0CBbI990qnd4gXCFNIUfc+Ojk8N0kTR80G8yZkp
3xF+ZBo91neEnw9wsZtvyEvEkAHT1F0KWT6QTA95feEXDune/+n9QZMP9Ki/
ZvW2SKH1wjfWU2Z8MOV/wGAgK4uq8u7p7TjxwXvai69f/5RD7ndi5LmC+IDK
0+Uty7w84sk4yad4iQ+6FnmGLksqoK5UJWrjdD74bV8dtpMvjxKu0q+eLuaD
khbXG2mmckgzcWYi+gkfKOZmUdJryaCly8TOjNd8cGaNfSEjVhKVXbjbXNnP
BxcoPifIa0kgp3NRD99M84EG4RHXSW5h9C5YPm6dmh++6LwlY7tBjy770wQx
8/IDq1WI1muBFeIhn0kHKRl+yNOwV3LOWMZ+ub84imnxQxF70h/+q3RQ4pKr
6mDOD2ai6zStU5xg7xAuGubMDyGjdHysfQLAZHuM6UYQPzgENHcuhYjBmxMy
W6WX+EFVnafAdVkCYiwoZ5+n8wOzWBK77hipHppM9A8U88PKh3X9JEkpmDFo
If5+wg9/XRbpK9qk4K7enRqaN/xw1M87ifI/KbDWPpsv+pkfRp+q/teyLAl0
GuYpmjP8EMtGcPiThCfVW8kI6w1+uJN9S/NVjAREKpK5B9AIQOy5/Hix96Ig
J/vVMpFXANwHTuUNd/DDd3yTVqGMAJyMfsVvKc4JOWKZUo1aAmDPN8cizEsH
FHwmZD+dBWBJf0fnfOsMsZlT4vdBkACpH3YL64VTohDWvRG+ywLwa8enZSOK
DeEZhztUbgnAtsKzGvt7POgrTUODeYkAbHWGU26TC6EsivQSr3qSf77auXxd
MWS673cz9o0AzFvMhresiKP9LcML2Z8FIEe8hxrHhkNPN0TO1M4IQMCdvDuJ
t3AoYGXr5LsNARC3HJDlCMQhsd8D8J1GELq0rLzjSiXQ4Fyd4havIKhEF9mG
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
tobr54EcZWdpAvwPXwJA2A==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(a\\), \
\\(x\\)]\\),\\!\\(\\*SubscriptBox[\\(a\\), \\(y\\)]\\)\"", TraditionalForm], 
        None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(a\\), \\(x\\)]\\)(t)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(a\\), \\(y\\)]\\)(t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6271490562013645`*^9, 3.6271492165895357`*^9, 3.6271493304175963`*^9, {
   3.627149400409367*^9, 3.6271494226530137`*^9}, {3.6271499883259983`*^9, 
   3.6271499919484196`*^9}, {3.6271500513060813`*^9, 3.627150054844446*^9}, {
   3.6271500946780634`*^9, 3.627150106560003*^9}, {3.627150141668462*^9, 
   3.6271501602118545`*^9}, {3.627150199728259*^9, 3.627150235100894*^9}, 
   3.6271503782575536`*^9, 3.6271504406322317`*^9, 3.627150560524344*^9, {
   3.6271507143231134`*^9, 3.627150719522588*^9}, 3.6271508398619986`*^9, {
   3.627150891190296*^9, 3.627150916278062*^9}, {3.627150947520938*^9, 
   3.627150963654719*^9}, {3.627150996003335*^9, 3.6271512160710773`*^9}, {
   3.6271555519616723`*^9, 3.6271555620974455`*^9}, {3.627156394921487*^9, 
   3.6271564086396494`*^9}, {3.6271924982724266`*^9, 3.6271925666721315`*^9}, 
   3.627192880282686*^9, 3.6271929716377306`*^9, {3.6271930077038307`*^9, 
   3.627193015117784*^9}, {3.6271932383499494`*^9, 3.627193272029454*^9}, {
   3.6271933398267574`*^9, 3.627193346542245*^9}, {3.6271934119212866`*^9, 
   3.627193475963077*^9}, {3.6271954315448065`*^9, 3.6271954360988493`*^9}, {
   3.627197307416922*^9, 3.6271973242881975`*^9}, 3.6271973622095366`*^9, 
   3.6271973985718327`*^9, 3.62719749643923*^9, 3.6271975334369497`*^9, {
   3.6271975994800835`*^9, 3.6271976198887177`*^9}, 3.6271976557056503`*^9, 
   3.627197720084672*^9, 3.6271977545597086`*^9, {3.6271978528443794`*^9, 
   3.6271979455203085`*^9}, 3.627198006718199*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwUmXc8le8bx+1k7733dtAQ1XXRkihJvkRCVkYhlURGhJRQKQ0UZUXDiCiR
laxQkREiO5xp+53fX+d1v677uZ5zn+fzfK7353XkXc9ZuzMxMDDc52Rg+P+n
wu21rHSZN7vZa/6kD4eUwIGAnM1+Xrch/k9PepB/CRwd1rqt5pUBLalKd/Ss
S2CD5bMFd2IOzHYrmOrLl4Bt2txRNq9XcJy0ZB0+UAw/RBILNjKLQZPnsr5T
bDEwuSjprN56B/Z7Qx1jZYtBu+D968WQSjhmkvjzUM5bsKNYGVA8q0H9HkU7
X+4t1GaQfgXn18C/X2Wetolv4Gfdbila5md4fYNsXU56DTOT8Scv3K8Hm9Oj
d0ZsXgMT7/d00q1G2HkvIZzV7xWIbZEbCoj+AkaOlZqpxkWgY+8jPx/yFYQ9
NGJeyBXC3qtlrmcDWsHD0HFhWvUl2GcxZs94tsOPaa6IEycLYLvbi8Ctrzrg
83s9q56WfKilHroTlP8Nfv6X0z0TmQ+W8QvFxc87QTH36LZzsfnQI3m/m5jZ
BZeNVPy2jefD6aKdFL3H3cDx4Jl5S14B/MMR4YD736FJrnRW48dLCO6K3fY6
5QcwfBdzigooAmYP7f/mbv2ExwzP2qPhNSQudl7Sie+BfW6XfefC34BYQvAD
v+heiP8oPRq89BaypGUqXob/gi2TrDzh+SWg8/pz73RIH+Tmjg6ZJZVBhemZ
ZY2L/TC6uhrMm1MOe7/zSHoHDECxelUw19R7OLFs7zjh+RtCPVPyOAeqIbAh
/OMdvSF4tf19eDbUQPntzsMGr4bggaD4FsO0WjBVCD4XmD8MTn6Kg9zH6yFu
unmDX20EnjSf9SgpaoDWEumkN89H4PSKXkjTRiPYHfj8ej7zD5AvL96budQM
6XwiJkkyoxCu19957/5X+NPr9U338SgcrbEcF8lsAbWsSpd28TH4oigsQU5s
hbO+PMSz98fg/iM5nuOubVCy1SWKR/gvDCh/YBESb4el9WKBopS/oFXhZtP0
th12N7FlWfKNw+j0YvOYaAdEJ9sbzN4ah9milebHZh3QfOLl55ucE9B+yPP6
Bd8O4FXaOKYVPwGa6Rp1pdEdYDN7dPQr2yT0U9jOUVI64GFZdpBP9CRsevXO
QzitA36H01g4mabg8eampC30tdJB83v54VPgciuvKOteB3gLPFE2X5sC7tei
zT+TOuBV31zpZMg0/PtImna41QHkbNP98YvTwKf9mVRDXxudvfdD7eIMEIJc
TO7c7YDw7RMeTaQZEPcq0TDJ7oA6BmOaZ8AsrOsUVwpXdwBH863YTXOzQDTO
llQe74Ajd4ZEc3z/gaBLERvKfIO7jga5+6f+gXaWZuO4+zf4pXzd8K/nHBx3
8BLYW/0N1pSif4vMzwElaorAvrUT+ARMPivunAfjzFMV85864Sn/J5GdEfNw
wz1Pscu1C/T5wdumbh687QrVZsS7oY7v4wdf9gXYn/315NhoNxzn28UfY7EA
3R+knX/XfIdgXuPy0u4FgImGeObcn8DB+56zTYwI12Yvr1sV9MAjnh2n/joS
oZHnYztvaS985N7OJjpGhJO86VztrX1gxV1mr6tOgieEDbZ33/thmGtr4QE/
Eiic8rvP92MAWLgMbIIpJNhcNvz2TfFvSOV8m5O0gwyX8snM3/YNgSqn3kpu
GBl+r9pZf8wdgnKO14drasiQmpR4dYRxGMw5dJ/1slLA/lPO70arYejfXERZ
OEgB6yHJvr33hsFvs/ZBjkQKpA7esQ1rH4Z19pePFTop8FmSLXB0YxiS2DXn
jUSoMMfz5OdO1RFQYM/fc+wEFbQ59QPu7B+B4k3q933SqXCSoCKx/dQI7N2U
O3VthApfjqv2FwaOwA821d2PVWjwam2HWW7UCHixvUgu8abBaYdvrqSkEVhi
VR5rKaKBpqZIyZmMEbjBmm04RqRBc8zf8T+vRkCKVfHm2rZFqLcV+KNeNwJF
LM9+C19ZhMa3VpKjAyMALPIGOtWL4HrupEPi+gh0MGde38+8BEbpSe98VP+A
K7PsL6cDS7A13uVWqD39vWRK176UsAR4oyjr4r0/EMMkHXm7fQnsEnQfV/f9
ARGmx905gsvgcseUx1trFHIZJdU+/bcMe4KCjbfGjoIR48MrPY+W4ZxO+Ynb
06PwlUG8ff73MmgU3PR9aDcG/zZELsp7rUBSrFDc8oG/YLAuUBcVvAoSoUZH
Sg9PQN1asuijqlUwPWxwoKJ1AmzX+HyKGdbg6Ka9IQ0HJmF89fbHr3vX4NL5
wSu8lZMQvMojMBq3Bp1pm8YpylPAsXrLfbVlDaxqWF6IxU7BoxWuCiH+degS
PXXAeWAKtFYSuLSPr8Ndxner7GrT8HGZw3lf2jpYfWxqz/OYBqvl+OKTA+vg
QTUfM0ybhuEl9k0X5TcgxNE1mOvTNAQuxZ5IdN8Ah9XXBT1908CyxFb0Im8D
3rnu1sqfnYbUxRjG6tkNeMT8fGKAOg1CoVH502IMOLFZXVxkaRr6V0y6aUYM
aFybp61Nrz+/wrjOfJIB2YvESKrz0xBFbrzZFsqAEPjEMGNyGpz9EiXTHjPg
+czUSr7Radj91yb/dBV9f2ZZwNHhaZA6JblDp58B89t1W7T+TMPyz+HGxRUG
jHK9v/2/6Wn4aZVr+1mSEeNFb1c4r0xDyZezY7eMGbHoS4d3rtAMpJhuDbJz
YMT3cxFrVoYz4F+5wqR4hRGzXp0Z3uY5A5ZbapNnHzIiu5SA88TTGdAojJMr
f8+IhzuObMqcmAF2lSOvon4xYlwOyz4T41n4my6823KZESW/K33+L20W6kT7
W0QlmJCyNKgmzvQPwjefmXppz4Sil8KEhv/9A8co3cuXLjOhoIFa9I9zc2C0
QtlkmsaEu/W4Rj0pc0CdiVL+2cOEp9Vf0FiuzUO3+8GSp4tMuCYQvse+YR7e
DPLu8RVjxt0/qhmebVqAxP9+fNtmyIwmI46r9fsWwLfjsTOjHTPKfnzOXha+
AOYHT899vcSMeX9JT8+XLIBqrfrV1PvM2PvynKvYnwVgMZ7ncnnHjBB9arqf
gwgjxWWPNH/S9/fPu8lqEuGTVpgGlcqMmsPlwmf2ECH9+Z6KTyIs2BLmNhx4
jAihMhxmCdtYsME7LFrNgQj29zt+HLel16uSXfNPEGEb3313uYssGJSd/93S
mghC8SfJU/dY8F1rzcYjUyIQGZWulZayYI5GhO4RLSJ0hEzxR3xnwaN8KWOH
+YhQRHqdaU5hwfOp1Un5cwuQ4HtJV1iYFY+tBqje+Ur3YScWy3wbVjSRcCk9
eHUBlH429wUFsWJka19s338LwGiV7A13WfGsy2Vbf4MFGGz6b2lzCSueqx5m
8xRYgCoTmbjuLlZ8W7Ojh5c6Dw/fj4pkkFjxi1GNxvPf8xBsUPD8jCAblsuO
Ce7pmAfblwFbthiwYakk457fTfNgoGz4ed2aDb2btZJNmueBL3396JdANuz+
Y/ZhrXse/onUD91JYcPL53S2np2ch5bbCeec3rLhKNPWiNf055fPbr2u1smG
BlcumWbpLkBcpNgt0gIbivU6DI85L4D78qDkR/5NqBWqPNL7cAFMzz/Pj9Pb
hDdS2Uee9y+A3IzPjmNHNyHP7wUNI2UirLvpN0kHbMIY1j/FtueJ0DewaDuR
tAkH7BhsUuqJkNoeExTWsQmX23rXVP1JEGRmwWw2vwmTciFMr54E1jUCKQJ8
7Ggo4q/TKkoGglGv3IAuOyZEP719xIMM3MUZr3KOsKOgdNcZmVdkuCiy9KDz
LDtGhoj0XJsjw+Bl66i1W+zo039m+1tVChwYKPBRK2TH+sOXq67bUuA1sh4/
1sKOR/YF2vNcoYBYttPuq9PseIVgknPzLgUiN5Wr5nFsxnLu1NuRzygw5c3P
362+GU88fl1YmE2fU23ey+tmm5EmmT8n9IgClXp1f9S9NmPBkuTbjRgKKN2T
brWJ3YzMj1aql9wpcHPxYln4i81oEJk2325MAYpDR0Z+/WbktPH5kcBOAadq
9fjvo5tRondC62wrGRoUrgUysHCgCT9Pw3gCGR5Mbt1na8qBDy02riiukoDB
8rZOpAsHjhLi33q/IcGZ1xOiLyM4sEvY2Rw8SdApaMr4M4MDIwZ6vl6WJYHR
pUdTjNUcSGiifJ3sI0LWL3KX1iAHJkW/e26RTgSu3Yc//LfGgfKxR5T2eBEh
6GnOiygpTpQ32338gDERBlgYkwqNObFQZ40pi84R+71OXO45wYmTMXtlPBnp
78fXYlfmEHq9n2bjRl0AUV1uC500TnztMSSovLgAESkeW+3LOVE5iyFoko0I
E5RqmeifnLjz9JX8bAUiHLUXZ39F5URSjBvTmjkR3lcFLvQKc2FRAihahhNB
Qa7lF8tWLmS6Efo55yMREq4p1+nacGFqlUVv/yYSkP9eLTxxngsHzaiWEfYk
qC/Ui3j9hgtHTnOse/KSQYc/4UxfBxc+oF7sp56jc0jQqDXbPBf6aDBEpX8j
g5fxfWVHHW7ckPidx5lEgY70eZ5YS250b7cgfp6gwA4m88U3vtzItCU5NdmI
Cs/cs4b7E7hxMfWJZME1KnB8WW3eVMCNwZb6S+drqXBey7ZEv5kbuRXYtsZS
qNB/+9WTk5PcWP0zV+OTJA32kthj49h58M7Xsl7TLTQotHX1L1blwc63Pdci
d9NA5H2l/eB+HuxeSvmCRjS4Ki28Z7MHD8pZO26kqdJgPOKs1pYYHhRLKXBe
ZqOB1Wij8KlsHlyQ1jGS76VC+QH5jfjPPLjZ5qqiZAYV5AtCJkpGeDDWearK
mM5JN3i6v/1m5MXDYZKfhbmoQAzQruSQ58XzQunfAsoo4PD9evZW5MX/lrpo
exwoUGc4dMv5FC8WZimoPl0lw72NFOeyJ7xoVxOy7/0uMqy7zhwcruJF1o+v
t/0dJoFHwz4Drn5efNQvhqcTSNCuniG1fYUX7/plr8BOEjzev8qkx82HwvNn
5E5T6fo7dfWhmAwffhA9HMn7ju7nlxj0GXT58K2hX8yV60SYuR31ZRz4UMm0
apu4BxEcc1lc2q348E/zPo4pWyK0fLq+WObCh+fvMDNfsifCzl72pPRAPhyv
D4ls8SPCy4Ubqtev8SEb21ru5TtEkOLgrva7y4dEalXxnS9EuKlw2/b4cz70
c45S/sBDglUj/n87y/iw68N7iq4LCXyP3YlRauTDHfVO95s/kqDfR1iaq4cP
f5w6YCirTAaL6PslpAk+jC70i49OJkPVY3GLviU+JEm2ySsxUuBxq/SVfEl+
zNOxNTIcpADX3wyBFC1+FInauV61jwqh6/L5l3fxoyxXgE5jNhVmRLJNXA7z
o4/B9crKRSo46qr0mp3iRz7XhKsHgQYtB3L9Cf78WMD+eSXkIg12Omuwi0Xy
Y8VCAan+MQ1eBr/M2Ejmx/YvnVaib2gglayzffwZP975tkbpe0uDm3mv29qK
+TH07TYl1mc0WK3R9yiro/f/K/OOPZwGvr9K1p5858cnUbzJA+Y06Cduuxfz
lx8vNkqmk+h6s+Cs0PKj8WPn9clLaqVUqFI0rrNhF0DmYekDFf9RQWvnB4ed
4gJofTtFUX+BAk9sgKSoIYBGbtMfHaIpwONXc4PTWADPy509oilEgasxexRI
hwRwQZJTuTSLDP+e1Ff8chTAT8dNLohtI4NT2YGjtX4CuOjO3eHVRoK2ti8T
eVcF8OvEUd3750iwe/xQRPJtAVyab9zlIEWCoo1W0cuZAuh0iuoj85MIMmJW
r5zfCOCFmlHOiadESCR07jerFUCerLRky6v0eWVmM6jbJYBPiqN63eh6Oevy
44LoqADGBlaMVp4j0ueJHfcGWQCdje0TjsUQ4XDKr+y/rIL47sFP7cxCInzM
d9zZJiKIoU/Cs2+NE0Hn82BXqaogyuemmsbpkSC9z9nniaEgjlNW3sXHk4CH
PMIUc1AQq65+fag2S4KrXO4PfU8IYuX9T6n59vTz7jrzxThUEOss/162MaFA
2/FpZ8VbgqhkUr5Vlf5+7j7rt8iRLogmn7YXWKlSoej63G1ikSB6BG5Le5JM
BZmMANVf1YIY23r95sYCFRLfkT7WdAjiWM/3D9n7aLDefsE2b5hepz3u5LlB
g7MTtNkkoiD2CKRvUf9Ag0GGkJhgZiHUtPL7cnKABofFV6WchYSQly3tv5xJ
GnzUu1pyQFkIr3UPzj8ZpoGOOYOF7jYhtOwUuhpST4N016g/IgeE8LrHxGGB
VBo8oMUWDtgKYYWFDGuhPQ3u3Lx1KdtDCHs/mhP28NIgUf6Oic9FIVSzSn1W
Xk6FuLIHnPrXhdDJeEbR2I4KUYfSvy/eE0KSi4yNwTwFwoayMqqfC2GhTFrA
lmsUCOR4ZWBZL4TW+5IGuZ6TwTejZE3wuxCWXRTnOkDPpZ5b3jf+GhXCewIW
jdu7SOD6pTr5KVkIP17IIZ26QAJHp3oHLxZhvDrxlklQgQS2pGZlXSFhbI5M
l/Gkz8ujcR1zFEVhbLjcoaOSRQQL6R8VVQbC6FJxe2tNCH0evu27dm2PMPq3
HyXuPU0EPDBsaX6M3q+lIMT6JBGM+/+K8p+m1185OYqfofNowMzwz0BhTPSv
lbal+xuBjViQHiWMd3tDScdKiKDxiHbBPUUYnUXs+RYWiKBMWAOtZ8IY9iDX
5cUuEsjVM3GQ3gijaH51XMo9EkicYO+uqKHf70rM9+s0EgjNcadHfBPGX0Hr
a8IuZOCNFvQ6MCyMO5U2RLLbycBSJLPazSCCP8ru3fv6mgLrpkoNj/hEkHbD
M39ImgpLP9WTXOVEULTLyI83hgpkX90T6gQRNHOuHe/+Q4V/jFuV5kEEtX1H
5n9tp8FEqtG/siMiSDgQ28JK948/mlgedkoEPYp82qPe0fX0aV/U3nMieKyj
IO37bxr0HD9kwRkugmG3DFz+UGnQOWUl0pkogl3VgbMrKzRoDbcdepAugg5y
Ogm//9GgScgx/1SRCBofo0jUttOgNs8lSOWjCKa8kLtrnkGDqt2eu2dbRfBh
adK32040eNfly14yIIJZz8Wu89P19dYrsDNkln7/4f3BRW+p8HLt0mOTNRHU
MN44++AQFV6khHmwc4sia6vx8339FHiqeo3QLiWKz2/yKbh4UiD1aGKd405R
5LzyiVUvmAxJf+8kKlqI4ieLlvIcZjIkXEmzm3IQRUWeC50zd0lwnS9D4Y2P
KBaWnHYo0CFBxPPsmUtXRPGczwfBE11ECDHKL9udIIrtJh/v6NH95EL7qwjW
R6K4O0z2gcJ+Ivi7lZq35Iti2n8Gk02iRPBeei90570oTku8rju1sgBuiZ8G
7ZtF8doZt13lCwtwSrEhV+6XKI4ZLJ/Vp9dPlH8NHJ8UxeyexqMV9OttLL/t
LFoSxVuP4ixq6f0Pj/xgu7BZDAV8tFSOxBLB7FJ/h7G4GO4ZCN4g0f3SlGvk
IZO6GNp/vbr4exsJdj0dd/tiKIbPL/fQ8yidtx7XHh05KIZDYVXcZXJkyH/w
ZPfKCXp9m9cJ9xwyiCQdE9MOE8NfOz+q3/tAgZYEHdb9iWL4wKm85QJ93kXF
biY6ZYhhuUn6pE4DFQyvjQ5eei2GhZXlu7bupMG/q9Vfk2rEMPOw/tiBbBpk
hzwsz+sUw5shbkUxdH2cuHjhee0fMVy4lxB3BRaBL9AqpY8shvIpT8e2nl2E
Rj/NcDKrOGZQbnRbXV+Eq2fYfLlFxVHZk2cnS+wibHEftlNRE8dTKJ2n6b8I
U85V+2CHOH7vi2M6aLoImY739e3MxdFswbw4cp0GtnaBsgEO4rjyxUT+wQsa
cNlYct3wpfcLDOoYoH/f2iNqS8/CxDHy2NINxToqBB9i/luZKI5PAj7szgYq
6BwY7OzOEEc6TRbMvqXAqGlF9exrcTQyMLdolKfAUaNzabJd4vini3mwmZEM
7NvMrxuOiuNsM/VDcQiJ7rfK549SxJH7x/7MoHU6n2szOHuzSaDnW5dotyS6
X6j3WVwTlUDOJJ/YKwZEGFIq2/FYTQL9emgvcWoBUuWSVUp3SOBHKYnZsrIF
sJDyFWwzl8C3jrf9LOl5jknsAMO4gwQWX4h80nVvAcoFFWY3fCXQRsd6IyBv
Ac7yrvWKXZVA8acVQbnd9HzL2dOgd1sC+51qx6xE6PmOrbjYPFMCN9ZfTuX4
EiGFKTHz9BsJTNm+fNT+O11f6163QmslUF9cRyHFkgTrS3tC7nVJ4N57N+SF
O0lQQpHxLBql97e+/cD6FBm8F5aONVIk8LThJ+/IBTLIzXbjEJsk8m6XtK2g
88OPiVfaS6KSmDDtNM8tTIWbozckBNQl0chSLzovnQqmQ+6bNI0k8Qcx/caY
NA0W+5C855Ak3jx229z5Ng2KfkoOOzpK4qCPXpfgPA3cu6itF/wkUeOO6oLP
rkWQav/2PvGqJH41fu9rf2EROptf5uTclsQj5jbNLqmLENcQe/dTpiSGbm4e
zs9YhN21rpG9byTxuCQjI2PyIpA/7DpLrJVEu/TclV7vRcivEHPg7JbEU1mD
L4/oLIJzKemA0pgk/jfgZyVGn68ib9q27KJK4s6qdzKXL9P57mWevO0mKRRr
rnq9hc5bUbnRPOfEpPCj4unnF65TYS7DaCLTSAp/hcxZF56jwItHwt8rDklh
3Xxtr9oQGRzvz9d0Okohqtt+ZzhGBoE7X4um/aTwbGnOfytfSdCU+OIRS7gU
XmuxLCs5TIK6jebS1ttSKGMXdeDcEBE++c+1p2ZKYeEdca2MSCJUDQtOnXoj
hUx5jPffbCHCO2tDFvVaKdwTMz6cRvebt58dZYidUshDKpiu/bkARVsiDSv/
SGFS9ywva/MC5D9/bh1NlsICsw2XzM4FeCHS7GvJKo0GRlV/jej+9Sz233UR
EWnUUZ41HVUiwpNFgae/VaRR99W+CGm6nh6c2V6Zu10amx9sqRqtI8LdXw7f
A8ykUTar1LBeiwRJhyLmjOylMVrXYHkykwQ3q7I3s3hLY4ubbYK+DBmupc/u
Sk2Qxtt/9vS/U6HzJq+A3anH0pjvV8uzmk+BkIhtgWqF0jj8lyf4oQYVLi6c
uLnwQRqZbzj5b39GhUDX8Bfv26TxKJueVBEPnZe6sj5d+y2NQ81ZuSp+NDiz
t+mXxbw0+q99E9WspIFb6QxZmFEG/x5xbCunzzdnFX7e3/wy+M/KvPeIzCL9
+WxVz1WQwZT8AzFrhEWwYz+xJ8BABhvuDKuepuvD5vLVk0Z7ZfC5Q6VNucgi
HJl6don5uAyeW1CYa5yigblDY3KLuwwGOIZlTRbQYH/LdMG9izL4qW2Bi+pA
A9NdfA1OsTKo0ihC275Ghd1FW4ZUH8jgXa+jy/YpVDCStV+ez5XBM2/2+1jL
UGFbUpjQ+woZ/CA8n2WZTQHtwAYziz4ZNLks/TmhgAxqf6ZchWdk0C7/g16k
ARmUbHjDBldlcD3rvz1ltf/nEYP7OdyyOJBs/p+hIwmkttm98ZeRxUfS/ldb
mUgglhP6dYeuLH4flhAbKieCoNjTMSaUxeIX7/p8IojAE1+/8dVKFlW2vdWY
O0EEjuVJ8XsusmjkLsV/6iAR2Hx4tjgFyuJF5L0mZ0EEpn79w6rXZNF8S/86
C5231i3+85q/I4vK7luuWt4iwtKHK1EV2fTrtWP2v6bnO7JO5uOoUlnUuEkS
dxMhwXxGXdmhBlk0/Pt6USeABDN8kx1CP2Xx2oFvEsE/STARyT09MC6LPZyu
vxz2k2GUqMeasyiLDtU1zjXvyTCvV8BbziKHC3W8vgF6FJh+1q4eKSyHszMo
+UGMCl59w2Vj0nKodEWqhukaFf4KkveYq8jh1ftljlx0fnKzYPtWpCOHW4is
vzW30WAkWsxJcLscRu4YesQZQtfLB43pSyCHxoaPPT69pPMTZWdw/wE5THvJ
1tzbQgNHnSOsJlZyaB3x1tuvlwa/PFxSntvJoeBD74OynTR4crK0/LKzHAZ6
bPW9XUHvZ7P5t6WXHJ7X3LolNIkGiodOsir4y+GFQR7q1H80+GvyRpN6SQ4/
8UVGmfLTIM+Q1bo5XA7D3n3vM/lIBV9d++D0WDl0e9jXQnKmAlGKsX7/fTn8
oqz+qjaJAqWCx6clMuhr2tnwOQUKBHPk8c+9kEPPXGvRthIyGDOubf9cJIc3
mSbfMh0kwzrNyul+mRy+kD6XIDtCgpp/2dE+H+Xw9Vi948MoEkSPLeZDgxwu
Ulkbaunvt1m/xTfBNjl0yTjUUzxCBM6uTNr4dzksm/05v+8FEdq+kKWrBuTw
Rv2FRsbL9PnzyWxv0pgcPl7XJgs5EuH4u8febrNy+FP3WvRBKyKIFc0nGVLk
kCU3aXj9OH1+Ze99x7Umh4x96uqq9PyX/ujBwBCLPB4LvTy77x4RXFJmmEu5
5DGqmuJ7vpUISvGoES8kj5ubvyq5CpFgPPyu1UkpebwykiHv6UWC/IsTF/WU
5PGGVqJETCMJ/Px2PmHVksfBge33L+uSgeCW9LnXQB4T3ige//qEDKQTo5OF
xvIYEhE32MtLgbKjhnxRe+RRpvgu/78oCuyEIUeNY/L4m//fA3ChwsbWLdfW
T8jjudJfDtsaqVCrFZfX6SqPEg/4F+sUaRCj2N/+wlsemxuyI0qCaGAmQaCG
BMojM7vRRa5yGnDyR0sdCZHHvcvnxmRnaNC2qcdUMUoee35+N07jXYSUdc0z
tHh53Lk73iNafhGOU8Jvf02WRzpzDx2nr8Vmukoz0uQxqPfH0XmeRegfUe0/
/1QePe/vSH1O96eM3itMZnnymMvxqmpbKQ1cO9rVpN7Io5GW04+2czRQblQ8
Ml8uj4dULp5ZlaTnhw+XLtR9ksfrH3sGciqpUFDy9dGDJvp5Dltu2nSUCmcL
ZGt9O+TxZWq48+1BCug9Oz+BPfJ4S/jpzF8PCpAfNPIID8njr4anKt0zZHh3
W3Lr5Lg89jHt49Y+T4aQ6+ccPszJY3Dfk6X6VTrPhn2OTKbJY9rB4l3ON0nA
ECSa674hj5/OsGakKZHgs7dP245NCki6oHihv5EI112qydy8Crj76dENm2Ai
HLQTlBwRUcA0oarM8e1E4DriaVImo4ADrdy1SuxEaN9X6XlDRQEVeC6z76bz
V8pO3kQnHQU0cvz6eG1wAY4bnC7R36aAOTt0H1T/XQAxjXe/2HYroOTl07vO
MRKhX46TsW+fAjJ1m+TE6BAhQ/SU6itLBVR1ETfkpuvzU430KS1bBZxoz95G
raXznk9/ap6TAn48ELA7Up0EjCKP2lQ8FVBc46UT7QkJFD7Zs2WfU8D5OlsT
kCbDHm+x3fLBCig0H3mflEUGN6GfF9IjFPDP+uWuEB06T3jZjD1IVkDK6zyy
NlKhUUBQWuShAh7/GGPL9okKE1XfbO48U8ATpizZu7bSYLNn0k2+AgUUC47s
ef2YBhr8R+puFSugxo4KjvskGhyq5F7lqFLAjsH09pTti+Dr3mIQV6eAq+8z
meo8FuEWb4IPa6sCLitvL/8RvghFFQezor4r4JxInjFP1CK0n2bv2xhQwMm6
45st/BZhnrtRIOyvAtr+Jdvx03mdvzzGfPmfAoYqpRmFMi6CvuveqEs0BeRh
L2PAQhoc42J+T95QQL63v0gPDtAgqKxmIYBdET+UU/Ybd1HhrnOE+hyfIrK9
/b4Gx6hQygEuvuKK+D58uxnPVzpvlqw9mJRXRNr1gp97dlOA6lTV4aGhiKc/
5Mw/ek0G0c1X2Ef1FXG3ctvX78pkMCzegS7Givgq8vHaQ3pesj+5eGlwjyIu
iV1n9lQlQcimd68cLBTx6PU86fPvifDozYXxHhtF7DfW3v/sJJ23HLbI2p6k
7+djT/AVJMIAK8m2y10RXTbnlbcMLMD6qzeJVmcVMXMDtuh9XADZE/4NrRcV
0XpWMsK/dAGQRXfdPFwRBagPR2s/L4BL0ezWplhFrLBXWKyeWIAou5d++5IU
MZbz9HcXRSJkMfk8r32giN95G+5yBRKh7qX6ADxVRKrN3ysPO4kwZjsh9CFP
EW9aPhv1NSUBG2OOhdFbRRQ74mcY/pHuz8eVqrZ8VsSndeSn/a1kOLMxQnrz
VRH/8z+YTrSnwI28p5q63Yq4+sWvlX+UAvnHnE+/7FfE5zTu5UwvKnxdk3mk
PqaIigE0Jf1RKszkDHS+mFXE5LcC7x4eo+ct68ccSlRF/G1q6LmphAbaqydM
n64rorZFaBgr8yIcfiEeIrNJCccrle5c3b0I56x63jziVUKSxa6Tr9wWIWk5
dVJMTAn5koPVNIIW4U32cflUOSXkMKtKmPKh8/1hIXtBdSXczerj7n9oEUiL
nUlJekpI+VEq/ENgEYSykpu4jZRQewV0B2ppsNXSiiHBVAlLhU8IEB3p+ZDG
Y8h+SAll71zxUKXP90tPW8/FHFNC8b1QrWlHhQeHbuYwOSrhA9d3d4yqKfAr
Y7Pomq8SsoTx+RUHkgHZOSYmg5TQsfCh6Qo9D73w56j4EaqEh91IOje3koCr
l+PG52gl9Dm1IxrTiRBowunw+qYS8p8N2zPLR4SePE6tJ3eV0EZs7ZdZ8gLs
FuBai3+shBm7jhR8U1ig52eutovZShg9Y25c2jQPnH+4Mk6/VMIcp4yS8ph5
CDzE7W9VooRKh56vKzrOQ08xt8muKiX8HVQt8MpyHnZL8Qho1CmhsFQQf5DD
PGRH8/wRaVFCh+zcE6P06zlmeUqYu5XQ9Tw21rbMg/9x3pj5PiUssnTKUdBd
gB8feG0H/ijh/prAUu+CBdipwqfaPK2Eu+TVXE4CEZ4l8i2WkZTwxm9HeeUJ
IrDT+L5krShhNfBeP/WMBN2N/D5hnMo4UMvkoW5MASOCwE5vQWV85cRy5D0f
FTIfCHD/J6mM3rRMVsoYFfzOCL4iaCqjzpKpruuVRej+JhghbaCMr1WdDCr0
lsDISOgoh7Eyzl+3dN3TvQSZz4QUaKbKGO9joNLstAxsnMKkP+bKaJMUkHev
dRl8zwvXdVgr48mWG+djpVegs0/43ocTysjgrsdFsFgBw70iHvmuymh28PPN
of9WIP2lyPb73sp4+o3cw3ewAizCouzRgcpY2VB/K4d5BbzDRHv9Q5SxTTH2
XnD2MnSMieafjFJG3rebTtQpLsO2w2JXzG8o49EUW57Za0vwuEzMYnuKMhod
cHAXaVoEJllxaaWH9O/jcitIgUwDr1jxf3zPlPGU96/KDC4atM+JV6/lKaP6
L6aFIhE639tJJE29Uca7K3nso6IUePxJwuVnhTKqlovwK4qQgUldUr+uRhmF
XfYMhYiSwCtZkvnNF2UskuZ6viZP56slye4n35QxQoVNIs14Aba4Sj2/0auM
B75fLZw7Mw8Pm6UuXhpWxr+Gd695uM0Bg4H0AbdJZSRKVBqw6P8Dj0fSYkcX
lDF7Qswtee8stDDLTO5aUsbpX5MVVs9mQN9X5r0GowrGVJa31h+ZgbRumQTR
zSqor6gVfZ++Ztgl68jCr4KHh5dToun7PZ7Lai+IqSDDjno75wP0ftxy6wNy
Kmjwe3iHjPE/0L8o196spoKeazMbk8Fz8GBQLvMdQQVNLvnXyIfNw/p++YBs
Q/r+gV/zlx0WwO2VvGkyqmBhralmgjURmkUVBK+aqaB9kAxzHj3PECIURr2t
VLDzvPyNZDpPpE4olP5np4I1vFeC79P593SF4n96Xioo7GaTCTU08O1v2k09
p4JP8k5TxGoXIWjDT6Xykgq2/jxv9qFoCcIUBHkiwlUw7Suz3OXIZbi+r5yy
N1YFTf2vq+tvXYHbXicHNt9Wwdw6vB1bvwIPEpjq21JVcAQ/Hv+nswpPi3Je
3klXwUUWj5TGs6uQ/83irt0LFdx/z0v17LVVKCYvXJEuov+eTfvbdvuuQpXo
/dMjpSroNzu+lKa+CvVGOw/lfFBBo5kKg76qFWg7OazvW6+CFXczXSzVVuBn
xHUJvVYV3BX2IlXk3DIMZWkyUbtVsFbhoqfcvSWYbOiYfN+vghutwVFsGYtA
nLzwLXxUBWWDeptVU2iwwiVZsXdGBbdvMrR7FEQFFsKnzM1k+vOyfrFzsyUF
uI+5x7Wt0OvugSmhCmQQucjhf4dZFe+dVerSWyWCbNqr/+w4VfH7qxCp08ML
oFZlA9KCqiiwOSxXqHceCL+XVEYkVNGkWvlSXdcc7GDK4MlRUMWe1rj3zwz+
ganyXqqPhireaC14aNE/A+ZmkwMEfVWs0DN7GP5jGo75JNZTdqhitf/7FIra
NDgmGhS+N1HFaF2/3i09U+D+pudu+EFVNHq23eTy3yk42x0WuveoKrZeftGb
e2wa6GzhttleFT821XOekJ6BCImmQ23OqujZ5Bs5v3sW4nf5GdzxUsUnu3qa
at78gxRnAUk7f1Xs3kFcz9k2D4+uvWOSDlbFKu7ElHoDuj+/cJwaDlfFlxGx
ocnmRCj8wtj5IlYV990+KTsdRIKymRcVPrdV8Y3XKk39JRka9RfiKOmqWMDh
FcujRIOO46n+71+o4jll0QWr44vQE2xsF16kiuNrr7YrX1iC4UdDsLeM3m/l
i7dc6DJMfYxR3fxRFScSzb0dT68AaViDt62e/nv+eHanUGkVVlk6qCmtqliW
JOTR8X4VWNUuDP73XRVXCF1Jd+TXgOeQRIPUgCp6JYeQycfXQPRsdeHwqCrS
2Gv1jWzXQC7Z7d6LGVVM/3wjfoW+X71kc5gPWRV9Pq+xqNL76f8sciOsqmJS
qfK+JblVMF4+ZkFhVsOoE089Z+xXYK/0ksF7TjV8+7L2zpMzy2CJ6ZLhgmpI
lrkbl398CWxP72HeK6mGrLW32eOUFuHU9YkpdkU11E2pJh0ZoOfvvFudrRpq
aKX+dyw2lgIhcz+f/mekhssGV5uOtBPhmkBYvJQp/X6HrD1+hi7Aza0KAcMH
1fDU0ybHCuN5uGvXaPfiqBqORLZfElf7B0+u+KKPvRoynfrNziU5AyzWoTt6
XdRwtMEqpm7nFHir3dQ/4K2GW2eTmWZaJuDb+iPN0kA15PQi3T/YMw6G3wuU
FK+oYVKhGquG1zhkFFRKJ19Tw88J+46xRI0DW9RXkY0ENRSMHL5trDoBvnZ9
vH531fDBndBlruOT0KUzzd73WA0NG+5efMgyDUasK4wHn6vhcb9YNgXNWcjs
41gpK1TDqmKFObP3c7DprQRZqUwNtS8325pZLcDZOI3ZlI9qmH/i1ND8KBG+
Oxn9ZWhUwye/k/6KJpFh51bz32fb1XDdNfWv3H4qbB458818SA39PPa/eZ+1
BP7ll5vLJ9TQRzJ0eNeWFfiRGP9ZZUEN8VZE14Onq7DLPa3q7pIanhOxCFQc
XoNs47xSJiZ13GZ2w0Nqch04BSqK/DnUMTVs6yb2NxsQONGUMyigjjprq3VM
4gzY87En00JSHb+N5N5IMGBAuDeR9l5RHQNrTEQLVBjwhc9iipqWOjZp5GeI
j24Alyn7zdQt6thC6k9j1N6A82JiMSy71PGEIWs0WXMdfv1TvRq4Tx2DncX8
2cZXwaR++6UhS3X02kh2PuyxArmPDvgftqXvD7Bvyi9eggtmnq4anuqocO2f
lNk4BfplLjk8OKeOH6on8hzHSWBKuW7DFqyOxzLFFo7T+Tnva6plUIQ6rnff
jwyZmwO+Zy/2j8SpY5JH1ZHj+2bgUnAZWCWro5gnW7zN9AQMHm4w/JimjpI1
s2Z7lsZgr/IPPa1n6uhRvhIwEv0HClbGNB7mq2MB8wFnxafDINBJUWQvVse6
XPXo8yeHIDiXVfpipToKP34+aHnjN/y+Kiwy+lkd23uNWtc//Ib9x5V5rVvU
ke/YqNHvl0NQqLmV/VO3OubOEUpyNUdAiGkfo86AOlILo6N2HRuFkB6b5Udj
6mj++BTpvcg4DBe5kTb/U8e3/7VyNbpNgVlM0MwlqjpaMo2TeOn6L3KIHhtb
V8cbeox6JMUFCGXP/lnDq4FfD1qEkFIp8GewuENXTAO9v3sMO/bTwLz085cn
chr4796fkHThZXid0FXLqa6BHyl/RCkGqyDq+qfysp4GJkg4H+RUX4erhqSS
8R0aWJ3gfOfA+AaM8jAXHTfVwOv7LzlIvWHAQ2MCOZ/NNbDZ8vnY1QOM+LZS
IVPvmAZy8la6W79lRPEU/bQMBw3MVftkvusfI0Z4maZwu2mgcTabr9ISI/7d
bZ1wxVcD7eJ/PoVORrQUdo2eDNLAcpPDqQohjLiYVyzSGEq//qn1s21rDJi9
mzUvO1oDpcfNuovtGdCqy9Y46qYG7rcdIIDKBqx65raeuquBPJMv6vId1iB3
denUrsca+M2Jlvbj5ArYJB8iSmRroI3HRz9lwyV4+f6fyI9iDXwUapTLlEMG
uyOYV1ypgU+NDA/nHScCy2iycfJnDTwb7RW7g28eXgf/aT37VQNjGwjSgk30
+cS91dmiSwMbvB/RlKvGgf3ZdaJ6nwaKmGWK7BAehZJtPdGb/migTEXJ5pbJ
IXD+qi46NqWBG3FX/T0e9QOX85W8WqIGbnpxLV4oqwfKyS3GmcsaaD1t8O0K
yw9wi5dpC2PSxGKNbSzO37qBT8bf2YFDE8Of78EJge9Q9baGaCigiakuVeVe
X36A1wHBGBEJTQwLGBg6PtMLQv1uomR5TdSo3f4uznsQPvmX5X1T10S2Mt/L
J4RHwJeVfecrPfpa0yNg8/UxEHto33ZzhyaW5b9deHp+Eup0Cpy9TTSxfcNx
I6dxFqTsDscoH9XE/XZilB0ZJGiayRBlttdEr/+yPlwQpkJQ5ELekLMmRpIu
pZLiFqEl/27bI39NLD/L039dew2C4a/z5WBN/MjBW3LedAOUureTbCM00ZOl
STAukQE7vOJjtsRp4sGZPzv/2TFi6NovUYEkTYxZeld9ZYUR1VK08ufua+KH
Ts6L+oFM2K1ydWdrhia++2EUJfeeCSMq29vyczRRKx/1LnxjQi0reZe4V5p4
pDbwXsI7JuwZDSS5v9PEwdb9rbO+TBh9uS5mT7UmTmi9bDlMYkQCj4iYfKMm
5tsf7wqzZMT+Z575622aqHsoRfdIOAPGba/Y2f9DE+9xXjrJIkkP+S0c7RWD
mijO/KnNaGUVblIKSUH/NLHaPirafsciGN7YiLGmauImF1Ji2///X5Q5KkZY
18Sd/PxZNBUSJBU/y+dm08LIz73vdz2fh51m5J3T3FqYNcWwsilkBib697U3
CWvhlWja/uDlcbgbcN/lhbQWbumtT18a/wPINkm6pqyFVp/euhg7DsHMQ6Pr
LtpaSB84RgF9v+CB7k0x2KqFh0XLrHY4/YC9dQP5Uru0cG5vr/WVk10wb6e7
a3mvFr5n0i4Jn/kGj2cj2n9aaKFge8+rHKFOMIvqdCm10UJ2aTHubd+7gCyi
RE5x1MI+LS0BH8WfkFlw4bq/mxZy1AcPf5vqg0PYKHbYVwt7V+f0F9mGwSbu
WlV3kBYmSAULjrGPgVMHODuEaeFAXKQXZk+Cl9gq80iMFjqfNA4ILP8Hgc7l
OV6JWjg9L3aShZ8IoblBh+ZStfCl4jGOwQEyXJ8nzF3IoJ8nfP9Os1c0eBiR
t+3aay0MNZXU1OGlz7cm91+bK7TwAqdVyeKFDSjiU7iaVKOF5/ncZp9/YcBy
u0F50WYtvFlwe9vFAkasyXxY/6RTC2vIPZuT7ZmwecL2jFKfFg4pMkXfb6Pr
iyDIXfBHCwOenVH6wcaMg8Htr/VmtHC+X6DyNAMzTnxKsCkna+EHPZYpQiUT
EtnNFnevaWGe7t1C9h1MuGrF8rieVRuTFz+kRIYxIlvaJ7Dg0cbHj27nDt5i
QN7h0D+dItq4Qz7z7NfhdRBT3xFrL6uNHxY83x46uQoKARSNIVVtrJ9iSvPJ
XIJtjGcDZw21cVZ8ePBfCwnwoIZIkIk2ltR5Tpn8ngfz5L8Vywe18ZPTrsGb
QjNg0/vsZKS1NsZf8o36XvcXnORPMbI7aGPKrranP6nD4HVG8nniaW3ss5tI
i0rvg8A3P82EfbXxs8KQGwx0Q+jSnZlHQdo4UJWQ9fZTO8SYWCUphGmjzjGz
JtOsL5AYz7UlL0Yb+bKeXAlKa4QH35p+6ibSz8viulej6gs8E4+5UpaqjaGu
z4wDmTrgpYuJ7K4Mbezsi2edVfkOZXlrtZ9ztLEfVmsuqvfDp4UKD/PX2jhI
Pq1N9B2B5h0XOb6Va+P8NNOW/LBx6I7UL/qvRhtpq1b8DIqzMPjl39HBL9q4
Jnk37sTDBZjgL6C4dWojy+w9/zefyUC090yb/qWNP/2S9Jeo9PzzVHFX4B9t
TNya15UuTc//U7+HFqe18Wy86uJL+XXg0X8cHU6mn7fpwNzCRQYUC7FTY1vT
xqmmiocLZYyoUCvUcpNVB+/U2iwFNNL9hePbOUEeHRT8kh8Dmcy4zfqW4EMR
HYyR0+goMmJBfHjwnZysDoZejdrxO5kFD46wOuSo6uBnwcN+f5+xoLVG7bo2
QQcXxMxrJ3xZ0DHw6rMSQx38z1UiUnaBGT3eG+03NtFBqXe1Xe36zOjPRJus
OaiD4j8HIvW2M2GIefEtM2sd7KicqD/AyojRKef02k/oYIt3ddzxQxuQ+Evz
+/HTOnhevdQrae8qPFCYCO730cF/R3v99LmW4Jl3ttTpIB08U8Vl8KyCAi/f
On+aDNXBTE61k5zuRChblnLzj9HBPxVzJnKW/6DatHcT7ZYOHtHN1uPQpPPw
PqPa46k62Bsat8MudwTEzB6FlqTrYPZR5rbytD6oN1/dJpijgyqJXMm+57sg
0PLkQsArHRwuSslX1m4GGauPBR3vdPC62nrMbZca+Got66H7SQfrdIo3KhIq
IPh4hFxikw5OxTD/ntkoByW74V8zHToYIMGk/t+DT9BxwvTeoV4d3OTjdsV9
qQnCTmYdyR/WQfUn+jDwrhM0nFk4Nk/poNl1946s77/gh6t7nSdRB0vzOPNP
Wo1AlHvD1YZlHawPXk+iTY+DrpfqDmVmXWz1Dt2YF/0HcX6ThSOCuuhqGVsa
XEmBLf7mXiZSuujnUxZ1QpWe3wILFDKVdJF767+e8MhVSLzANbCupYu8p1a+
MxVvgFGw3/2TW3XxfWXuDa5jjDge0na0apcuKrtLl1pnMeHdMF0uyf26GJL2
rNuphhkxIqnh8mFdtHjo9N+t5yw4G7UQ0WOri/fav7kWHWTFhzHWxttP6SLG
swSo57Hi/rhiyj1PXXwrIWClUMOKpBtCr8nndDHzkBM5OYkVM29d8D4WrIuM
rdZ7rcVY0SLph9LbCF2cfxl3TtKBBZdStv/mi9fF/UfY3M6fZMYX9x6knUvW
RacnAmeSlJnQ+sHSsbY0XYwIa/igW8mA6w9P8Gg/00VOszPKdYfXoeBJZVNC
vi42PPghlzGxDCxZYbsOVupi/VKdTlkFCd48H6TlfNZFjRzL8yGy8+CUC2/Z
WnRxxjdq+vveSeAoyPR176afX4D1XMubEXhXyKha16+LQvyZqiOnesHtteuw
wpguymyTP7eR2gp8xZ8fRc7q4q3Eia01ue/gQ6mS7RBFF31JMRIXSpOqvctj
+GBdF3N4qWuTWe+qb548P3aYmYDFqSyXm+RqqkcGs0yvbiLg2mrmm/I/NdWG
zt0ZhZwEHLkqMvNVv6o6cZhlrZ+XgFtnzjSHX86pHnXdeoJLiIAMJ95rth7O
B6NR93fGYgREo637R8YbIMk9VchHioC25n8fy9h9h/G/DQEP5Qj4/rbM/J4T
Q7Dbi9b2RYmAh63F9lLT/8LdSVWtJTUC9tOU/NOsZgFn4v7+p0fAEw+NGMKz
KJDqV7EndisBzZ+uelwSXYKZf5OZZTsIKJdj5xvosQqm/hLrY7sIyCf2Iaok
ZAPSFswdhE0JaNQoriokx4jzgVfK9+4nYEAQOea8NRPuJxcIB5kTsPnIoW29
Fsz4+EJ/YNZhAmqPPdyns5kFiVSujk5rAj4U6LzOeY0Fff4bXKqwJaB3Yvly
cBkLjr57pfj0BAEzl22FlQpZ8KRYpGWcEwGvxC+8aPJkwR/B1pfOuRJQurDa
IHKCGY/0Kj619SBgjlo1czHdr5p2UJp3eRPwknVsMtWcie6HDWSlswSUvxjQ
QtnGiBXL92W4Agm4VHHzUOLyBug7nDEjXSBgr9W97Znma5BfaRT46zIBb3V+
LPE6uwyPQwfqcyMJOCPKsJZ0iQzCA0Vzt2Podc8/U16RC5C4K0L8UjwBZaML
jw5bzsKm9KN7nG4R6DzqtMhOGoeIdQW/fckEfH6qRbdK4A8sOZFTte4R8A3r
/bh3dwcgsLr+k2AaAW/uCiDTPH7AtOz9qeXHBGQVIMdHN3SAW4SX0EgmAYVO
Dton53yBgaEdu79kE/D1roMUtoP1YGvC6fU6l4B7s658Kb9eB+1P+5PvvyRg
/GVG5sOnGsGMqajy6msCHi/dUqhX2Qo1ruFj7iUE9BJs2pxd1gVGn614LcsJ
WK3gGwsSv6BYUWHHlioCBg7lFLjNDYFWNMlV8hMB2+znL586MwbPR+tuMtUR
sDL5zV6WU1Mgsy+1bLKRgKZXvgl9eDMHvGw7OMrbCWjN2xbLfJECcR4cWzK6
CLj7Obe/oNkiMDT2nbz+k4Du9w4PZ7KuwGXVwli/PgK+aMVb3U/WgBh79Y3N
bwImvT+sb8HAgD4TR/qM/xBwguVmXRQvI46aybMqjhPw8aaiz2MURjyZR9Th
mCagTNXfrIZCJvyxuc5u4R8Bv5Z/U02j6+GI972oHiIBvxmEswhE0vXR7PGy
mkpAhZ/y+/E+M5poGv54sUzAu4dv3nkQxIzvEzYzJK4TcB+1M31ZnBkNZn6p
X2DSQ5MrnaN58Uz40uLlMUc2Pfx8WGNsVyMjKheGhe3h0MMfv2Js438yYDr3
kRwNHj2k2T2bIEZsgOhZuW/8AnponK90eYB/DZLaFpYXhfUQ314Nlw1Yhqjb
dw83SuthlsQUxZTOmytz7sFF8npYneG1t4eLCEFW25/dU9ZDfYdTD1zT/8HM
a/aWUHU9ZH8+QW44Mwnu/L8op7X18HkQYwbno1EYDCiQPaSnh8KDrtZWR4bA
tjP0oP5WPTyzB7Y4m/ZCu/7h8+I79DC+Ibx+k1UXmN2RfcKwSw9Pvj6Hnf10
fZDmG8ZRD6U+JgQlXWwCI5va+ba9enjU8+54z90GKC65I1FmpoeTRQVhvw82
gZaw+94nFnr4kKe14VdyK9i0T1N7rPRQoya8fPhRF4TGB+YJHddDRqkCndgT
vyB7z5KDlb0eWijHnfrpMwxf18J5bp7Uw0whWnGG718gvmOraXTRQwG3U3fH
uWZAIvDWeWYPPRyLPmb0XGABvP8+7Ak5q4fmItpdbHE0SMmUTygL1MO+/1F0
3vFUvm8ct1UoZSQZldEwytnLua8jIV+EtqKSEaXMEomkEipJqRSyUwolmUkZ
LYmQlS3K9hwr8bt/fz6v5zjPc1/X5/pc70/z7sttNu9mUYFNuv74afx9tKoS
945/qEt286iOvx48E1czjHMQgCVfcxNdAvVAKNVg8s5LQSBd5exOuagHz++E
CHY1CIHN1nfinVf0IFsnSijknTAE/9teoBShB9W/4351e4nA47yaE/si9eBO
w/Ovv7pEoMZjr2p0NH7eIO/UGilRmNb6+e3rXdyPMyVfBkZFYE2fQ4jEQz0Y
jptfOH9dBEwS/tCMH+nB7n/6YfO/MF/ZeA4Ep+iBrPK+8UOCwnBXdia25LEe
tA8KrzzQIQil1YEWs5m4PwPrnhhECEB/qJggLQf3R7HKKmn1PJLeeu2Fxys9
WNwRzO1um0WMfzJOmQV6cGFlPmPQewpd8Vj7Sf2dHkxSNDi3A0bRM630gMOV
esCIWfFKlfMbNfTqbnnwCfdLue7xkfZuNB+f29X4VQ8c6tLfdqq0Ik0bzm2Z
71hv4uxPYn3fkIXsO+MdP/TAL11emZNVhk5Xb58Na9UDSdbugwvuKSgutOZp
RQeuN+lR5OncuDcVBnsPCfXqAUWpWMF1d/ab4bm25dwBPSj+87HTdT77jXye
w/uzQ1jv824XLhsnveF6/DmdO4Z/nmXvLrY4DjlqeW4c4+tBz2SB5FRgKYro
nW7RntWDLWkhbrvCatDL+MDrx+b1wL35lvLbK82odb8YL1mIBE5O9++FznYh
EdlrE+1iJHiTfPdqpcEA0q6WSV0tga+DD/y9OD6C8+L9fXuXkcB1yVOdoJMT
KHkurbh6JQl4jy2bPHbNos+vdN2XKJEgPrfviXLMP0S4564zWkOC0xZ2nest
BEBJi1N/QZ0E72NVZxbSBGFrb9mV4g0kGDDa661VIwSu8dtZM9okOLLOa1D2
jTBE7a8ZpOiR4MKh/MKckyJQILM33p1KAnKBPCerWQS6vrRZPWWS4OjFqpEw
AVFYEuog0q9PgnMvwycS20WAZPDnlZoBCXZ91CxinRUBmzkPl0NGJNAK9FNx
rcF6fTW9OtaUBA/v7a8U+S0EGe6B1Q0WJLh54qmp52dBqN0kdmHFThKQ+pT7
zwcKwGxPBNliLwlybPKWH1SYR2vjZfquHiDB3xkT43Uzs+gEg+0YcIgELcXu
zQYjU+jVN/se96Mk2B5vciWwiUACx8OOOjjj9+Vdbr/+cQyZiuR07T1OAsGg
7PbGx0Mo+mHTkf9OkWD5RN3TD7L9qJ0m2Mn1IkFHQP3m/VNdaFPNhsOkMyQ4
1fhkrrq9FXm7WLZr+JPg1QrDbE1SPSoR8rVbFUiCTmOu+E71arT4QXyb5EUS
6M2Mh9cYlqNd1MqDAldIoBl2dpXZnzcornq4ZSKMBMtcFrISE4pQv7P8gV/X
SfC5pdH56d5SRBbkNjdHkaDJdYO54HQ5On/fcX/1HRJox9nVTYl/RVXkaz/e
3ifBT9WEupHkerTiy8u9uXEkcM+MWfWR1oZsnVob0hNJEJvZLJIj0o3SF4T3
PEglgbJoRvSv8V9o/K5W/Y0MEmRKmmysMR5CHNLOXRefkWCNcLGrjccYuvLJ
r+50DgmEs7vvH7ckkNL8h2+2BSQ4n1YfUPd3BjnFjFlalZBg9Hz40TfJcyh7
y6oawzISNOwZsbVbtYDmPsAORgUJtn4N+6SXIgBGR49Va30kQfky6xKl24IQ
OXfDXLUan1e35MazPULQfDvv84paErw8AUW7e4VAfXP7f2INJLCWykmp1heG
U1Vin2aaSFBYO2vCsMP774iu6VAbCWzSwFPVSBhE/u7+0NGJ9bDcTO38pBBY
RAeYfO8lwUGxVPoLDyG4q5NSWTlAguGZnRvdCgWhq+KzUeEQCTiPf5bc+CEA
OoeJ8mdjJCheaAOluAXkO7N6WyKfBE8qzx0L+e8fKova+v72DAlMOVWDp6tm
kaT28a1X/5EgYfGtDwoa02hveVTZOUEyTEbOyGl48lGiXQHPXZQMu9yubvYo
HUeDU52lRxeT4Ym5TlXamlFEu7kY9kqRQZus7+xt9Add2KT3xnQ5GYp35IcL
ZfWhz+/2cblyZLAcrh66H9uF5G2DivVWkYG+8l7wsPFPdHgyjaOhTAbjncs9
jEp/oCc3vhYqrCXD/t1yF+LLv6PJDVMsSQ0yfA0akA/xqkVQplKwsIEMaQFf
Pzc0f0NhB4yYE9r4eWdZ+7YK1qF6wu113xYy2PlFRkh21qM112/TmylkiHpT
u36TSzNyXV/86gsDP5/pZ9jE7UAvS3uobzlkkObLd5vPdaOF/ZK5L4EMrUUo
bt/ufmQ6QaakG5KhMLiwy1kXz1fEgRexJmQQ+SeeaE0ZQz81LpJumOHndTKf
HhqbQBveZGQHW5Lh+tK22PaiSVQ8NvPcZR8Zdls1Z6gx5tCrnoa87INkzPFB
xg9m5lFW44s3M4fJcHS/l4VqsQA8/hhZyXPE71N56M6vOkFILHb7etWFDLTn
HzJU84XgQZZp4zc3XI/3CsaEozDcTlrfvsqTDK8+5KwVrBeG63dEfh05TYZP
9SoFIUIiEHq1c/ixHxnKBFPFrwwKw4VzJZNj58nwL5HdMRYlDH6nYueZF8lg
Zn5K5d6UEHjb+4oFXyGDwTOLHyQVIXDbvXvpx3AymGf3xCNJQXAyIcmviCTD
52b1qE83F9Bh9jIVm2gycHI2CvnnzyHrtR90fj8gQ/2fazf3OUwiM9lUKukR
GRquMzOqZCbQNvGL+n4pZHhgbSORcnMEcWcPbSt7TIaYCcLBmDqAGEMc8yXP
yLDufoA/BXUjvY5Vu61zyHDEZKlnbE4L2lQ3efD+KzKszC2//su6FqlX1Dl0
FZDhXjlSG+KVI+X8rBOb3pCBdIKjtWD6Ask/vebt+Y4Mva33s9wUbyLpeNdz
BZVkENNsF8+pDXqzOMo4ROgzGUJ6c6L+rt+LhC6pR5jWkCFi9/C6Y0ZpaO6M
YHTUdzJsjjs9Jer9BvFdf8Y2/yCDS8L0d6m0L2jYtjBpXRsZWvK69kjFNaJ+
y7tPXDvJMJBasea1QCfq2urzIqcXP6/vxNuUlj7UQrMunB0gQ5Wp9ugofQhV
K0l+ChsnA0rUX1hpz0eVywZqayfJUKMd+iz00zQqFapoVvyL6//fW9vZVXOo
gJ/YZb9ABhnK+6wm2gJ60R/4O0OYAvbvj4tjVIGnLQfHx8UpsGhdZVq1oRCk
VjNnWZIUYIZE3ZC2EIb4t/JCF6Up8ODY+oTU1SJw9+XE4k+yFGCvP3L6QboI
RKXVLJdZRYFE7buDX8ZEIPx+5qoDyhT4nuOjO8MXgZBrYWuT1lLgieAa+vtc
ETgf5LzxjwYF7i1+O/WCLAK+XoZ65E0UqNjUtUce872H01qmvy4FVH+oabSf
w/t5/zy8I1Gg4ych67tbEBzMWkwk6BTYE+Oz+6qYANii15Y72RRAeWjEnfwP
7SHd3heL8Hk+9V5+T5pF2xV2HNMyoYDT4uDM2RUEMpDQdvcyw8/TPJHpoDqG
OPOLfAstKfBT7JKUWu4goo71Bgrvxuc5z1d2ff4L6faUXflvPwUSPn8XELfs
Rhsa42/csqXA/P3y57+OtaO1H8/FtByhwJyCCWrrb0KKxfvj1Zzw5ydqPyQZ
NCDZLFracVf8+folOYbh39EhAaeC+JMU2PHZO3nh3XeUYXn7S50nBXJr38i5
NzUgIuF9h/gZChx682+sNK8ZobGJCbY/BSZ174GzagcK46mJuwdSoHN9Pi/p
UTf6ftNaMfkiBZYsvTwxU/kLqXZd0PlxBddXUlsm1WsQuZKyQTKCAv4RxREW
b0dRbnDHToikQHZwaoPBsQkkULfM2TuaArOu/Q1tqyeRqRryS79LgdEH9ak6
H6bRba+T11ofUCD9+OfJ67Z/Uce7hwnSjyhwdPWOQ+qV/9Am2S8vDFMoIHZz
PHAHfwH5OMxV+D6mQMOB5Cc3BwWg9KVW89NMChRPmBG9OYIgIXpgqCObAq9G
HWe8TIRgz+4wAblXFKBYVLcceywECSn5MtsLKKC397/2Y3VC8IffrxlQQoGi
AzT3+HIhoBkpsLLLKKCYz33wNkgIgu4Ym/dWUCA6e/KImLgQfOo7fXjVJwq8
N8zSXHFQEOTpqV7mXymQeVu3uylEAI5cqb98oQ7XN5d7bnLpAnraKHI/t5GC
SxLGWN0wh3i+R0uVOyhQ+7z+gvjvKRRRFVVn1UOB8GsbT0vv56MGhbK+S/0U
OBW5tNPvyzha6zI2kz+I+6vWc9xh3yg6kb9GaniUAgLcyXdOsoMob7HlmnV8
Cnz0agCXnl9IyCaQvGeGAicDgg86cHqQWcYzo7B/FNhp4aClQelEMbNt+0sE
qfBoiXb6spI21GUq5TYuSgV6Z+nFpjvNSDuWE6S5hAoCFexF6SJN6Myf47ds
llJB5t/dWurSJlTGjk29voIKZdmP/PqeNSOpiI/5ZfJUkLetDOluaEP7Wmc+
TypSoaMg6dZPaidK1N7YsUmVCrr9J1uj1XvQ0Ll9E3ZqVMjwxPb36BdifLki
dms9Fcb4054mN/+gYOW8VZVaVAjtNWuR+jGCFErkYDOFCnKGwgrlPgQ6unTb
zqMMKkQEtz96VDiJntl5O8VwqHC9RV6pYnAaTT9LOvsJqCB92HP/itlZtHWh
NmLBkAoHzFU4ofVz6PoOoQTydio4q4V6RHjOox/xei+czalwgXN4PbNiAamN
Hq6ItaJCfPvWH/VHBeAkRDZ93U2F5BUrn657LQCvI98MCttQ4YGN68RQmwAI
dw4v0O2oQKlpGjn+XQAs9FRkTthTwbhMLUT1gQDcvWCumeBEBfHalPx6mgB0
fzvH/O5KBafLtU06OxaQ7rqnZotOUcFkwj1Uufcf8vVsOcTxooJHW1NGM3MO
vStb4uV+hgrM/OPe5/fPoi3jzdYH/akgaOA5YeMzjeLWPiGZBFJh+WvuWV+/
SeQb9N+46hUqbEFD6uc9xlHf89W1EuFUeN4d3THnP4p2tv/JnrpOhcGdWwoe
wBAqXVp0szuKCnoton5ztQNIlxvh8fUOFYbNvtZufdeHYt0OWhXep8KVzhoF
jloPWvRQWy8tjgql4v/uzgl2odOf56RvJVKh++Fal8fHO1D338+j51OpsOya
YdO+2p/IUuthjWsGFVa6L1P5u9CGSmzcsvY8o4JGmrqskMNPpBWmH2mQQ4XX
jYJJM7Pt6G6+lLvuK/x900eWa9p2IrGBth2KBVQwP7wbjEy6kZfCs81iJVRI
qpI5TeT0og7j88vG31JhvMq6x+F6P7I4YzHSVk6FCuamUJMPf1BhqsrXDx+o
kDIZ38qwHEEbGoaf5X6hggr5htaqK2NImHrj5LV6rJ/Rs73Sx/nI3eGQxdkm
Kqj73zqza/8U+nlrs65jGz7PwBcPRJtB/71bkLLqpAIt14y2dWoWvR7/OsTp
pYJvZWpaVNQc0lyX8GXDANZvfG7G3oV/6JaVe6bsENa3vHZGB3UBCVyAawJj
uP5vgoS7V2J9ZUm7DRJUsNtLmRXzFoDW9g6zH9NUsN67EJ2cKQDbl2Vrv5+j
whqZzvnadwLwintBMkuABqP/7Th57pUAqJ+0GowVocG+4of7bC8LwM2Haz9f
WUQD6iIh53mKAMx/HnviJUkDjv5ia8urC+jE3NvwQ9I0iIvJ/ZTmPo+atKKO
/ydLAxOfbYa66/8howP2/9EVaLDddJa0MvcvehlG0lJTooHBd6EhV7VZdH2g
9vesGg2cxZQ9DKsm0ZxC0se+9TTYrP83dHIFH7mYeGXUatFAvXbJ0KDjBGo4
szWsZDMNvK6kNbXifGiYJuOaQaYBabr404TpKMpp6N5+h06D+5PXfU3ahpCq
2MuNwWz8/Gd5EX/8/qAIasjik4gG/XclCl76D6BZh10D+7fS4PnOEyqyv38h
52j1D9uMaSBA1XH99KUPfX9HpOv9R4OKu3uZb7X6kMHE+1DlHTS4nmx5bli0
Dz1fd/vY4p006LhavGXfgT6kZO1owt9DgxJ+m4jShl8o7AJ1Q6cNDWT3Pgq4
7diPprJEF32xo8HPSSmPqCW/kUNH/a/X9jQQi8k9HS0xiGqXpVYmO9EgNLKR
v/bAMELodFqkKw2Ke+Ioy31GkWKcvPMxTxp83VZXqWUwgWjrH3xNP02Ds9ap
i8vrCWSdtZYx4IfPV3oX+TtOopPMtISNgTRosaj959A3hcLLtBe7XsT3l7Xx
NS1mUPp/OR4ZV2jguMTBn3VrFr3/Tm/+HU4Df0r9Tt1MvD9tiw20IvH7/vcw
syN6Ds31GTw5Hk2Dnv6al88N/yEF9yqZp3dp8GnDk6KE1/8QZcb83OADfF+U
rnp6+B+yDK7r0X5Eg6rJkh0l2I/cJPabu6XQwI+yyehr/D8UFv0zN/MxDVSf
DT54qfoPpSo7qAxn0uChoMmIjOscKksduKybQ4MrNfF7BS/9RT83nxo5+YoG
ggVvZz+cmUWzr4m9zwto8G6byMBr0xkkb+BXOlKC6/OMsuu72DTasevSTfdK
GuyZdryfcpiPTrQtmc36RIPOyfANF5cTKNQp0n7sK66/2N/+g9/GUfKI3Ce9
7zTw6SxU/pE+hkp9Y8meP2hwsPvp28b4UdQquPZBTisNlhdIx4T5jaCZsFSR
iQ4aOHyxHi+RGkbystpu5F4a6ARxndWFhhDpYXa91wANZn2eJGTaDiILTTr3
5RANPMTeX+apYd55XpRKjNHg+KmOJZnWg+gyw2AZdZIGbdcVi5/2D6Kkt5Vn
fGZpkHG4xGtpO/ZXU/OO3HkaBFh0Gw5rj6DWulqTSSE6PLtZwAo+OoqmD+7L
ponTYSccqBa0HEOyfW2rzkjQQSL9QvzFXeNoy6mjwXnL6KAQMqsh5jKBzKf7
f0/J0OH5kant9EsEuryEKPRVokPKmnGV/S8mUeKts+r5a+g4b2gctcudQiVK
CxEz6nS45X3Y4mn8NGpOCeEzN9Lh0N/5zZPHZ9CU7hI7Px06lFx1+dQgO4tk
X9+oKNCjg+h+ZbPx23jf8OQ2/6XS4cilhjC5wVlk9vF+DJtFh33t+xXN5f6i
YzvXCJzj0qH5tWDNuPRfFNKacqzIgA4rIoq6s9pnUYKj1rc5IzqcvkHJ9bs4
i4qGs5j6/9EheiWl1W9hBjWdoSUG7KBDmmrb0am9M2hSoGhJyU46nAxOXLw5
ahqtCON5ze+lw5r6fLrOyylk+sDMMPAwHchrvUJDP/KRk0bt0zcOdDg7JhHA
/kKg4Gd75QRc6PDhWd7H0boJFEdvCwA3OnQmj+570juOCkvt+4I86LAk/7WY
0OJx9GN7v8VbHzocW/XIZ2zrGCJq3fIE/fB5HIgdObGjSPrghKrBefy+IpYt
t2VHkXavb2hwMB1+28pdqTk6go6bxxf7XabD/dOn5ozGhlFGbvm4ZxgdJmb2
H5B4P4wGlAfXH79OB9mxb7G7W4fRhssrbI9G0aEmJYTIYowg52FG1IE7dJAi
7gwvbhhBqXsOVe68T4ehehqje+8o6im5NPdfHB0cH7bfnGgfRWrrn+oZJtLB
fa9cy73AMWR/o9aJk4rrF61JfUUaRwlT07GUDDq80hmpekuMI5WqbWIaOXRY
Vvxtk34UgWy3nGArv8L9fOQdk32Ujx7cjXKXK6CDxoHtEXZbJlGLQH6KVAkd
KM165RETk0jRpb1ZtIwOAneR9/f0KbT/m6j0fDkdPmqV9tDMptFdpva2yQ90
4IjsuUptnkaNj6z9hr/Qoc9+jVDvDjzfS84+7/tGh80JpvT5jBm02zO+52c9
HTp8op4ODMyg6ObyVY1NdDi38tG2ColZVGswaPG1jQ4Re1uqTkjPouVPVoRU
dtKh8XngvuPTM8hShpn/phfX+6Sm7tz7GXTd/9Bw3gAdxIITsqbPzKAv3ZfU
sobocHeFxO8PMjNI0uzpvvQxOqiKfxzcHTuN/ntZey2BT4cf0qdsfi+fRmFK
M2V3Z+hAy55IV/efQouGtulcFWRApWhm7yxlEhnvPmF/QZQB+iR23/lrfHS5
OCrm7GIGnJ29/9Con0DlGvmfPaQYEO0s+Fh8O4FErrcLui5nAC3qryb9xQTa
OilKt5djwN3Z+aDJjRMo2E77hM0qBvzKtE4TyhpHpRXWj6yVGQBe050pxuNo
Qfdsg+laBiTv0Y1+Oj6GuDHxEls1GDDXeu6wbc4YOrdQDuyNDFjup9Hujfml
0HnQh6zDAM7pVc/VPcfQ7NcVT7T0GNBq0DYsj6+ZDGaHGpUBJwI2ivtcHkO+
CYfklJgMsIoP7hvLHEN5iy6byuozwDolSKqxbwxNuj8NlOQxIAMbu+zmcURt
qn0pso0B4tI9j6xCxpE3b2ZgzoQBBXfPlwr0jKPx5Ua7hiwZ8NTsUld33gTS
8ztxtXcXA/wHFT4+0CSQe1dUSds+Bsy///2CH02g4Zz2DdWHGbCm2Cz4lRMf
6awWs6twYMDJn2cry8qx31/UvlVyjAFGpDsx1TgvPvljXfXqBAO8D/c9OuY8
iX7vPPvvmTsDwq1fZZxJm0Qbi+JJad4MUEgsqdFvmUTH1Cuc430ZIH+ldv1+
oSmUGjH4IOYcAxpFvCffKk2hXmJF7Y0gBvi+1c4v3zSFTheEr/AOYcCNJVfp
y3WmkFiQyM59oQwYvR9JbVOfQne2BdziRDCAJ3x+I0VmCmlKTNatiWSAumrc
KrOZSfSq5qSsaDQDQs++fOX3A+vlzq9dAzEMOLKfQd6YM4l+HDh8+0ssA7Rj
WjhVV/D7rW2qz45nQG552OP3NpNous9K/k4SA15kVEYHaE+i0Kcf9/ilMWCp
XY8ye56PFDy3xtg9YcDR3z9ENL/x0WN6UaPBcwYsK9T+Bql8xPpHUVj/AteT
qrjH/jwffSzL3CeRx4Bhq4g7ejZ8ZBOqeW+kgAG3lsw0qbH46Ld5fFNdCQNS
gn2/+KvwkZ+MguLrMgbEJ3zOMhXnoyVNkTYPKhjgctmZ6UUQ6H7c4tigj/h6
RuJeZi+BtByCWxyqGeC2+BTpWjOBijb+Xb29lgGHbTh6V2oJZDbidVCngQGM
zeIw+5lArS8HHyxvZoDts+xLtA8EOuHn2MZvY0Dwox7G5QoCzaGfys2dDPiU
tJVEe0+gCNG9diW9WC8bFJzi3hJI6dPXuMQBBlRZPtTbVEKgzEiT9stDDMi3
zL5xOJ9A3D1vVY+PMSBRzMZqMIdA1atZh3fwGVCDvG2TMwhk15mTQJ5hAKuq
VfRWAtZfqlbnyn8M4C4bXj+D9Xj+RPLaOQEmXAo6pmIcSqClJGX7DhEmCNV4
8Rf7Eyhu6nbi+0VMOO97u+ibG4E2Fy/tTpdkwtWMgTtKRwhUGnxF7Zo0E1aI
EMYWuwlkaSLg4CHLhP0dCtPZpgTqkDqbvFuBCV3bnZsCeXge6sZ6mEpMKLCo
ONXFJJDAPVcNlTX4fnfnhlkygSLtuh2F1JkQcUz4ZPtmAq1RP5jat54J5vu9
s5N0CJQ98L3voxYTku/4DVjha4Pn5uufb2bC5NLSd8O6BKr1rnC+RWbChzP3
i3xJBLJnofQzdCYw0SlyP51A4wt5/QfYTPCTdfXejPC+LN+yERATcoXO17JM
CLQi/LGL+lYmbI3fWjxqTaBEy3UZi4yZ4DsQ1KB3iEBk+djfg6ZM0CTzJJtO
EOh9i4zWNwsmBD4qyS3E9dr1KOJ4rjUTTkfcLHkcTiBv7fODATZMULipu6w6
E/vj+KS2vR0T/LffZES8IVB03ik3I3smqNVFcI99I1CuwZHhpa5MeB3q//A0
1p/RombdCTf8/gdunN8gykcNX6xPNXow4ceEveCMLN7/tz49L/RhQssZ2tBT
NT6a3Gc4Gn8Wf78r55qkHh9RfT3zfwQwoSMnbWOtPh95xyQELw9mwjvPkLob
Jnz08lX1f6aXcT2Vjc1XWPHRRP2c7MUwJsTdPvhTdy8fkfibfhZeZ0K/6/TU
OzxPnrL704goJggnx7zNP8BH2eQr7jox+LwSajFC+P6odS7TKZYJQQPc4Njd
fLTZs1soPp4Jq4Sin0VY8NHJm8s/NyYx4ecri4YBQz7KzEK3pdOZMEddcr+W
wUeDX93stj9lwj7pjjzPTXykNRK7PjiLCafql4kJKfKR69KPowUvmdBat0/9
PZ7XATPNi9rFTPD4nVWn0U6gDSd2mTm+ZcKSC1VSgXjejoUHy8WVM2FW9B/t
7AsC9X34mbasmgmKm0OKR64QSGNA0sOklgluqz6osrwI5LCIzbrQwISnpnof
i3G/k9a7CBc0M8H4U4/QD3MCdRnFfB7/yQRP15jD7foEWutUflurmwmJOg8C
120h0OFLE3YOv5hg5THd0KdOoITktRse/mGCcsVsorMSgdrf7RirH2HCvUp2
+3d5Aql0BxQsJZhg+Vf0P2tZPK9CTy8aT+P38/7hO4mvH65tNguaY8LtRXGj
HxSwn8Ai+XwBFkzejfauUCXQ6sO09jERFvQEtZxt2Eggm0CH9E2LWaDocO/3
d9r//SvK46gUC8QjxbZdMyJQU3Ep68FyFtwTaVIv2kcghbZh4Xo5FtwNk9os
jed735zSFylFFsCeg5e1LhKogXX2UOA6Fny/0CAhhesnZ5O24bUmC+o1z6z5
8wnr/Wz92OgmFrRGlxAVPQS6dVe4cONmFjgt84YN//A85umF2JNZcFBL9Pg9
rNfljYfMY+ksMLn5OeAx7q/l5DX572wW6MVTR4a4fBQpV9QuCSx4UX3WQgTr
8Svld/o2Qxb4Cis13MJ5aOkuBc/zJizQiMmdsHDjIwsvI3aeGQsWJEbzidN8
dC3KW2TUkgWawTMc6wA++pyd+GXDbhac/h35ZWsQH0l8q7lzZD8Ljgq0LOQG
8pHp6Pyh+7YssDCyO57qz0dXl+lsrDvCgkER0xXq3nxUpXtgXMIJ1zte1WGH
Cx+JW1wtNHRlgeSbA2X7sf6N3PJCAk6yMH+ElYaYYj6K6DV/5cmCti0/atfQ
+aj8iczKkdMs6GN4FYev5SORT7yO9f74fF33C3WX8JHh71OPDweyoPy28flz
YwQq2/CZXXuFBVPcoc2i2O/V18d+KwtnQcvBt2v4KTjvaLg6v7iB+8tdL+x2
nUD9asx/SbdY4G+vJVZ7hkDb1y26FR3Dgj9qu1ddsidQxprGDZdiWbDoQJ9n
pwWBJFVTS3ziWWD0t0uNjfV7Utlnl1MSPq+n9es27Kc1qw1/70ljwUx5wNiS
tQQiKcoEGT9hgbs67c4M1mu0Qpcc4zkL5tz2+3xfRqBJ+ewnG16wwPR0zt18
CawfuSDeqjwWlOwpLcpfQqACmR2Niwux3ha05H9I4n22QsVttoQFV5ft5y1Z
gfeP9JDQnzIWfLBuyWAo4vlYWnS3pYIFe+KLFJAGgUAqXPfzR6zHa/meQ9jP
EyVs3hdVsyBP2+D1oq3YT5dstMmsZcEbncKlZnj/OC2aHnnYwAIHft4fFxcC
VYlVXrrezAIrzTwjqUACbRK9szrwJwuETtc0Nt/G+1CQYny4jwV+b9bNnyrH
+0tAuM3yNwviLmXEu7URKGf+mydvmAXVz5tuivAJJPsvYRFpHJ/H3rfhqwQf
+fw9FbduEj/Prv3KSdzfhhkuRWYW92v23P1LVD5iTEt9FJ5nwTsBI7+3xnx0
f7L1ECHIhuu5uZcasb/OEU/4PaJsMN+wbP8VRz6ym/ALr1/MBrOBFz2x7nxU
OrZ9bYUUG65uaaAN+vLRulGFvFfL2aC0kpg5gHnn4vAvszQ5Noj3uKa2YH33
DL7qilnFhhpv5aPH8LXRn0u+ocpsMJkweSaB5yF9YNfSs2vZMOU3+rUZz8uS
frVkFw02JO2bVp3E83Sib5xps5ENOg6vWaH2fFTd8/arqQ4b0gNsNMt38dGW
7khHth4bLjJUvP/v3zc7D/3VorLBMqnLjknmo/F23ZtKTDbEV13rXVDlo10/
/2lK6bNBbeW15mu4XgotsdbDhmy4d/eNlU0HgfyaXPt/mrChrUJryvwj9rdG
5vmvZmzQ7Lj6zP0l5puGRbKllmxwI2baVOIJFP+98XHWLjYc9Hx8LScM80Nd
Knq0jw0PbZflB2H923/zqb95kA2bM/0sGx3xfv5qeDz4MBse1Tv8+Iv1oVkt
I+jlwIbaNY67NuF9H/q5687RY2zY7uZzMZpDoN8fs7V3nWBDa0zG8SOYR8w+
BJUZuuPzR3frZmoT6Fnljn1UbzaoWkVoXN1AIOkKlWENXzaEL7bVmsO87/l+
6KL8OTY8W7NcVhjf/15WtEo8iA1HGiu1bmoRiPo2/PnURTZY2J+viNTD+32V
dDUnlA0iIuJWWSwC7fGIHrwQwYaPJrbONtivnT8oSFRGssEl/Rx51y4C+a59
uFHyNhtWBjyL2u+A3//sWhOre2zY41E+rXyaQPe+pTjdeYifH/7qtPlVPH8X
niWtScX6ilu4E4T58FMTqcwxgw0jQ25B7ypxvfXyOjKescFH8W74RCuBBq+y
F0Zy2OBB+mj4DPvRv843ytQ8NkjtEhKOxvyxlGXI8Stkw8KDLWv+U+Ajlagq
mzdv2GDqFPA8eCPe97/Nzoq8Z8MSRnL+BN7nYPAtZnsVG5ZpBY4eMeIjq/u7
X13/zAarN03Tsdjf7cebvtfVsAHJfHPz/z9fmNpNKNSzQS4Xsnqw319M7Fpu
18SG8fPKcRUOfBQ967QlqY0No+eCjRVxfkq2/mPR38mGRTZa6V34fm7GKTed
Pja0qxW4aB/howohItzzNxuaVDSfS2G/brTxzcgbZkPEOv/aFGs+6s+Zq5ob
x/24I7VUGfPQ9JILv3hTbLiz4rNgMpuPFh8VFbvylw37Pl2V8NLhI8XCq+qf
F/C8FB8+80GZjzbJLN26XIQDxVczfQYl+cjsnXxQrCQH6B2LYt/hfGy7Ojau
Q5oDtntN9eQasN96qRZryHFAQ2eh+vg77H+fklpcV3HAauTeYYVsAt1Q2zD7
XJkDgn/VSS5Y7wn+TxX4azmwaOOh/DTs91l1W+gsTQ7ciTv3cSX2s7daubsD
N3HgL91MZcod79uLTO/3uhwoMLAYO4f10d1SHLWYzIFDAZsymvYTiCAbZFvQ
OaD0bvN5mhX2z4iKr7fYHPiR6SeRi3ldrsd0+AfigErY29GTWH+anK+SKoYc
sDZwcPExJBAteqfWURMOhH8SmKnB18aDjdvTzThAFbGkXjDG/m948NiQJQdu
ZkzlnjMjkMuDjsuk3fjafF4zeyeed8Ih5cx+DpQuuXRZ2JZAYWYD74psOTDi
2H7e8hiBYpPdugTtObBuh3j9CR8CPZ0bEzB2wu8TfqtLIwTnrV2nVSNcObCl
iiJrgPPLT5HAg/JeHJD1D114mIf9/KCw/4EzHLjfFvvEDPvJwssr9xL8cf3c
J4b1sZ+vcYxs2BTCAQkv1+ZEIT7SK5blnwrlwAFGV5cP5hMDuXsyuREcCLtj
FGKmwUfWbsqk2UgOGHkR4W0UPjpa/sgS3eZAMj8puccA68vP18/9HgeYBCt5
GPPthi07kh895MBg0UFbyf//ey+9GtW1j3C/pIszpLEeB+/PTQmncuB7Wpt9
A9avhWXdWmoGB8yV2/+AKx9liWb85/SMAzbJlg84x/loRWGQT0wOBxIpnxa/
wfzh7b43vuoVBzq19aES74sGDd0PMwUciOnfMmJ7CO+bFpGJTW84sIOje/P2
HrxvIluUDr7jwE5Hseth/+F9sy3H6FolB66trrc+innL7m+oe8knDrBW1u2y
3Iz3Tdah+yNfOXA2yG4oHOfjkNVSw1Y/OHBP4K2l+Azm55rulRdbOZAqFxnR
j3nP5HIB72UHB2TAQnpfDeaLMefb8gMc0C1/P7AnDes9lfvGeAjre9qoPuEW
5osDcgO+YxzwmZFo+R2E+WL54IoMPtbnjdWzYacIdLuijNMyg/vDjIv7hvl7
2v+ek+Q8B3KS6xwW4Txmo+ceqS+kD7suPVvkgfVZ1GdUcFJMHxxCEs4aYp5R
eaDcE79EH3aKpknmYP4NsiKkvi3VB6X47uKfmB+6xD7RhWT0sd9IBPdg/zUs
enSEvFIfdigtffgN+32qh2+4w2p9WPkwUjidQaBF63fk3lbVh1Xb86oPAoFc
WzXaK9T0YS54fU0jnpfPN+cWTa/XhwzNdJuJvQTSNa4jbcS9WWbR9d85Z5xn
5x4ftNmiD5HLi7xJZ3H+zA66HE7Rh6NvBPZ/iCBQnpJu8xBHH/KyFhnrvSaQ
Yq2IiCpPHwLHWLaMrwQ6d6VFx3KbPoysNjxzsw/z0HjohRxzfaC8d1K4gPWa
mHboSbeVPjSe9o1EmKdFbGn1snv0gdPmfCcJ99dphdTCNht9EAnaZWGO/baq
snvDGTt9ONdvdKoH63FTQIF1ur0+RH/Xi1iFeSOCdPNck5M+SPmr7kzDPDz8
yzl1yXF9OEkZz9kZgnn9IbeGfUof+k7fnhm9ykc51nKzJ7xwPQdl2u0i+Eh2
0aBa3Bl9CPsl5Bkezkeni8vMv/rrA3t6usHrCh81ed47IxCkD181ZD6oYz7h
bHB/pBeiD8U/z34s8OGjuDajT/ah+hDC6+YfOcZHAreU+bci9OHdJqdju/fh
fWFCqJRH4v7+Fjnwcxsfvf/30WQyWh+M3U1LrXHe1XzxyHP9PX2w8XucLrOa
j34r76i4+kgfWvlzp7X+EOhUTkWRZ4o+WHdF75D7jv3QiPviwGN9+CLVSJcs
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
ov/drjj2a2mJAbwBDPeb6I//A+hcm7Y=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"\[Eta]\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Eta]\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6271490562013645`*^9, 3.6271492165895357`*^9, 3.6271493304175963`*^9, {
   3.627149400409367*^9, 3.6271494226530137`*^9}, {3.6271499883259983`*^9, 
   3.6271499919484196`*^9}, {3.6271500513060813`*^9, 3.627150054844446*^9}, {
   3.6271500946780634`*^9, 3.627150106560003*^9}, {3.627150141668462*^9, 
   3.6271501602118545`*^9}, {3.627150199728259*^9, 3.627150235100894*^9}, 
   3.6271503782575536`*^9, 3.6271504406322317`*^9, 3.627150560524344*^9, {
   3.6271507143231134`*^9, 3.627150719522588*^9}, 3.6271508398619986`*^9, {
   3.627150891190296*^9, 3.627150916278062*^9}, {3.627150947520938*^9, 
   3.627150963654719*^9}, {3.627150996003335*^9, 3.6271512160710773`*^9}, {
   3.6271555519616723`*^9, 3.6271555620974455`*^9}, {3.627156394921487*^9, 
   3.6271564086396494`*^9}, {3.6271924982724266`*^9, 3.6271925666721315`*^9}, 
   3.627192880282686*^9, 3.6271929716377306`*^9, {3.6271930077038307`*^9, 
   3.627193015117784*^9}, {3.6271932383499494`*^9, 3.627193272029454*^9}, {
   3.6271933398267574`*^9, 3.627193346542245*^9}, {3.6271934119212866`*^9, 
   3.627193475963077*^9}, {3.6271954315448065`*^9, 3.6271954360988493`*^9}, {
   3.627197307416922*^9, 3.6271973242881975`*^9}, 3.6271973622095366`*^9, 
   3.6271973985718327`*^9, 3.62719749643923*^9, 3.6271975334369497`*^9, {
   3.6271975994800835`*^9, 3.6271976198887177`*^9}, 3.6271976557056503`*^9, 
   3.627197720084672*^9, 3.6271977545597086`*^9, {3.6271978528443794`*^9, 
   3.6271979455203085`*^9}, 3.627198006856294*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwUWHc41u8XtrP3yt57vETDek5SCZUkqZQRJStJkSJZEVmVnb333nmEImTv
lRXqS1mJQr/399d73dc55z73Odf5PM9zXmGru0Y2ZCQkJGl0JCT//xUJ20tL
FCjRcm+ruEOVH4JO38uicbQNQ0vtf0jX+ULQhRm5MCnbJLT9Us6olCcY/aNo
NmAIzULUnFGxNtlByCT25wUq2yLU1igYfaHzORriDM37l1yGpLqfXUsO9Udk
lmIKuy+rkO7Urc/UOz5IPq+2eNujDjF2+fI84fRGpr8MD/26jVHPca8HzV8f
oaakjTH33PfIooj3ZbHqfTTcosX3O7kZba9XfZx1tEVkTIOJGy9bUbIPiRLt
MW3MrSI0fc/vEyIhDz7+WPgmVrhiL7zq0YGYd0UanRqc8ZU00vTl293IYkfA
s/6mFz5inemiWtSDGoPMvb6b+OCmLf1Xrrm9qHiEficO/PHZoLWysow+tJSY
5Zf59Tke4Y0eWE/uRz0yboL5mi/wzUKNX0oJA4jkLelfxeMh+AfMctyLHkTO
xhdM8r+9xO79zw8XRw4hi6iwM6FKYZj8lvzlny+HUbjXfik/bTgO3e5zUwga
QW3sp60PnA7H3MHuMY5+o6hNo3pI9Vw4TuMXqMl/OoaSS8u6pgXCsUJx8+h/
HuOIxPtH+pt7YbhG+84fmYcTyDvon2PI0VCsM8jIa3dvEkGWwu0Hr0Nw9+1y
9RyHKTQt9/aRceALfPXPFbOl219Qcl7Guh13IHb5+LThldI0IozthoGeP64O
6zt3qGgaOS8xCWWJ+eA9U/EvfXIziMRNOfyxuSfWFnG/65I7g7yTL5Z8+/YA
B/7X/o9FahaRCH26ybdrjz+X84eXZBBxrWFNVLcJNj3dXLyaPIe8yft+8wrc
RonMnMfDBeYReD10rzZwRXOjtr2KCfNIyFhIUWXjCZJKq7PsPvgVxTw3y/tU
7IOcHBjXnaK/omrjz+/Z6gJQuaqlDyPHAjJcjWy6//wF2tkvYy2MXEDVPucJ
6xShSKuNKu0s8yJ6+1PLxCUiHPlFXDm08nIRJa1ZFcUtRaD2q/nNIXRLiIbl
g+BlkleISezfRbmgJVRm5tGQ3vsKGa9cmO+g+oaa7gdXgMlrFFeZ7mrv9w21
jZxa7A18jb48/U1BR/YdzQgOP2ayeY3Ezui9yX36HQl92NNYXnyF7Fjfiuvt
fUeJ9atFRUyvUNH4z4pvHv+hUGWF55ITEWgzXftU0PZ/SGaLcLHwXDhSc3oz
JPVwGU0U6NdnDISgp0eWbrVtLKPkhom8xtuBqIVE/ffteyvIYtc8uuemL6Jt
f/n8wM8V5Mwn8eFA2WN0/tU0V5bDD+T9sjJ7//5dNCYecHTh9k/UuBx5zOe0
Nd4T8/vCufoTTdOHj5jWu2Nm1uPNohqriLm2MVUl3xensDRyanivIpKsHJaR
vhdYmQXZGbesohHboUiJgXDcwtzwzoF6DSVzzZU/J32NLzFrsvgbrKEeC7q5
O5NReIGp3vpt+BoiBAU5vzOOxe5M6tUVA0R/P9WmvUvxmJaplq6Lex1JLeet
ZPQm4HjGY+YLZuvIWaJEJ7r2LZZjrC7dT15HIwt/m55QJeIGhiNUXF/XESHR
+oxg4VtsyFB5RVF6A1lcKpkpLUjAM/SqBacdN5BQVfM2E2U8dqEvJ7Eo2UDM
VgaMs1UxmIL+kLH7rw2ULfeirenzGxxFV5oVfmwT6URe+HncKBJL0in9zfbc
RM5O/pMFOSG4mrb43Pv3m4gkfVb/Ya8v1qNVTB2l/IWK3ahvp0S64gmawl9r
Z34hkhQJhV0tYexII3+GNvQXSj7/2uwfhSsKp5ZdVePcQsZ/669b3Q5FItS5
Jy5e3UJyZ72YfSleo7ID0tH2iVtorAQrZzyJQToHsr/7zm6hgfglVY+nCWiI
SlIrQeI32qZgL361noRsqTIjyu1+I4qAP8XS5iloh1L8a2fhb0STaH9J63Yq
ekGZfvTr+m9Ee82B2ZwmDfFRiobsHd5GOX/0S16gNFRIkfqF4/E2mh0IOCdA
lYYQhfAhBbyNvLZWFlevpaIe8uSAU+Q7KLCCl+K+dgqyIhccu3F6Bw3MKajd
fZyENskS5d2Cd5Dhm3tM37LjkT8Z/7Ow7h1kO2/mtygYjTjJEgay2P6gaVGq
U//9jkDZpLxSjZf/IOZ3AxoscYFIjTTu8Ug80U7Hupy/5446SA52r375g0iS
S/0FQ2jxj3+cD4Vt/yLv9aQYmogg/PTfm0/H8v8iQpYiyaWFSMz8j53faPUv
MizcoahPj8Gp+6+c7VR2kdQsL82Lqbf40D5ri4/7LtKRtlz5fDQFt+xFcMXX
7yIL51bxHsE0bLLHbF9GsofCGdaUbKPT8eJuWEOHzh7q6YoWP/EmA7vvMrLO
B+6hkI81q2MsmZh296XNbuceKi66XJVNnYnj/9LXsLPsI2bZ3vva7hlY7m8w
vfylffSiSIHe2SodN/yhtTgZu4/4jh+IVehMxYZ/gsquT+4j63qO1vR3yXhm
h/rAQ+F/SOydwgtGvwTssvP8aqjNPzTRrUU62hWFKXaoCjNz/qGPf7wS+DzD
cdS2PyleIfrvA2Hxji9mf+KT+x83CRA8R+ETmQ3OeEy6T36dBCzUNmfp7z1H
PputIV1PSMCdxWaUUT4SWTiG8sYmkEDy8fzUL6dikNaCce7NehLQtcli9Jp7
i/jMeY8pTJCAUFSXY8G9FPRneKZ1+y8JOGX8DVJ+k4aGDbNNmnlJYcoy9qmR
YQYq/+T09aU6KWQM85kYxWaiSG1VV9NrpBA+HKe7YJuFnOv+kok+JgUvR+UZ
49osdFalKWIljhSqWcjpQ4KzkExBoFB1LSk0/nWMlJ3MRNQS54t8xkiBLzkg
xr80Ay0kcmid/UMK7GsxPBEs6aiFa6KTi4cMLLRJ7vSRpaLU8NRrs8fIwFBE
ycZFJAk9pbnzPf8KGfQYjZycfRWLzHwUH7k9IuKkxhVD91dI7e+vA9qxRMz6
vkxqLghtLfuID4+QAQn9TVUKljN4wOZMeco2GXiPSMaMlnnhkimmEw7c5DBd
LtWc2RiCQy8P9R4+Sg5LdweZW2tfY4eeBAtSU3Jw3tjTb4+Kw3pnbv7scCMH
ZqbuZLG+JCzZJO0VFU0OQheebBlLpmIK9VV6yypy8BNvlLm9k4ZnyyrjZYfJ
wUGc7Rb7pQzcKOcps7VFDgkPL/N/U87EiRknaho5KSDB6Tn5xdBM/ESAVjf4
MAUYLBbOldpk4ivRPUOXTChgYPzvgHltBj7MHG0j9JACSL45no4PT8fsQdc3
v7+hgK5C9VC3n6l4nVTMt6KCAmLkn5WVTyfjHo/vLN6DRD6KNwcFZxJw4UZx
st4vCnCfs5+iuxaNgx3cFDk4KMH7MN8hPsMIfOoGxdlcY0pYfWR5WGHXGYsN
t4+7ulICWPOwpTTcRKSGEXboNSWYNpb3Bsr7oKm2yzs05ZRA3dIJet9CUf1x
gcCBfkoIP3a8jdnuDYqrnedM2iDy50rdy+yLQ+6H8jLusFHBtu7nof6XScgk
/56KyiEqKN26IdCBU9Ah8aPN+0ZU0NnzBZ7rpiHmxP0Ln1yoIGTPpOihaTr6
wflh+lUkFSjnPR37+i0ddYYF371RSgVkZrs+Mn/SUS610b5UHxWYWG3bZgel
o8Bn3C831qjAOYvCpDU+Ddn8meJtYDkA2ZZlTeOHU5H2/YzcQKUDIGXte5rM
OhkJLdsfu3jhAGxX/YscvZ6A9q2V2/jvHQBnQSe60/rRaHxy22Qp/AAI0VDM
OhRHoKhuf1fPngOQrNfa9rP9AXLVNSDXXT0AJOZSX7u1DLDRe9ZIVmZqEHIa
5r4T8QQT1EaFJhWpgaT5F/2Zyy8wQ1lSUdZ5anB/0ich1hOJH3LuxPQ5Ee1M
ZTPPBqLx1CMjn72X1HBU1SEw4XACPj2ZZy9VQA0EY/oF3vEkXAyUly52UsME
J1kLvpSCudNvaHn9Rw0a+ovFevqp+NmBaskcWhrIf/jI/E5bKv5ux8IyIE0D
u9/yOc+0p2KjLrs/+7o0kJm8f4DjQiquU2qZk7algU65B1Eb5ilY7A3/Z+Pn
NFA/qjI3s5OEQ7YfVj7NpAGLrWK1assE/OtaT1LuBxpou13oLsIYg29g6aDB
eRrYXItacOV5hT+K+LqQUNCCKSmK5zEIxjHfVE+aaNMCibd/eF2QGSY5G6bw
zJIWhDxZJnrO30N3ipe48r2J2EJ0f6fMD/WxaZMOJ9GC+3fOjABh4vvILf47
KaYF9jvKXEu+b1Da2Ga/3BQt8FXf2qW5Hofotc69u7xHC8vnrIbPhCQi15Ss
TB8+Oijm8YlL+5OMJilIwwvU6WBEeCj4JKSiU7ZXH41cpQNPm5hdGkbifdlR
ZkXuQQd/SBXbZ66nIS5FBgOFWCIOKHo9KJeGvCNvqV6ppoP6pVMbnI9T0dIv
LOA3TAe0v87FUhqkoAtXDlIXbdFBz4ASrZpBEqqtd1kb5aAH7qV47hzxeCQi
1DlGoUoPjeT6t/o1olCwr3iLojE9EOy0BI8XhaPNBa+Cq/fpif0Y8RjW9Ecf
CpS8i0voAUzD6dl9iPsLS/Cd8R5i/BDtk+gjPjjKdd6IapUekoOLY4r0wvC/
YU0NJSYG8E7/RaIz8wbbqkeLmykwwOpZewevjHjck7jK+PwsA9g2vGy9bJOM
j5HpbZc4MEB9lNC9mKhUnGqTNjMRzABtnmtr6ybpmPbTbvuBPCIfaZacR2wG
vi9nUq7czgDJ/wKT1Iwz8URY0dvr3xhAqCV0zt47E+tsUD8PpGaE7DsjhQU8
mbjAxMq5TJIRvDvW6w+KZmDO2rorU6cYwdpN44nh2zTsxc9xguYWI2jJSEfe
D0/Bi95Ocir+jBD+4jsXHWMiNpxv5TBPZwRdiiuTXvwxuPq08L+gZmJ8aKV+
lHMEFs7zWCqfZYSYjBclldf88Po9+TpaYSYwTDs9jDIfoGuDAemqwATF0qGv
Rd+9QC1Hp19amDNBCCVz6mm5N0gu4ZhbsBcTVFOx26UkJ6A3/yItKt8ygXNH
/pvcDylo32r5zEw9EzgoTNv6fElHtz6ePEQ/wQQeGal/xIKyULd0Et+Rv0yQ
fukyqVFxDko4tUumxMAMEv4ThPyTeYje3CuOW4AZXltkXrmrl4+euJEokygy
w7kpv98hL/LRcpjPp0XEDOeP254xJ8lHZtkUlt2GzODqeqsxNy8XdTYGbFda
MgM3icDb4ohspDFKHZ7owgwxVR0L4u8yUP7aC8kAX2Zwvn4zhUErFfHRMmDH
18wg5HH70YRRAgoRCTO5lMEMzKfZjBqVXqFdNZYfGpXMkPzEwJEq2wdN2HPw
048Q/fFJ8bNCz7GBX3T5xhLR/6XbRAlFFK5POGgwvsMMYhU0ouZ0yViuIn6u
iZYFAqeCf+c0pOOEz/yPc3lZwM+hZHduJxvTLySxRsqxgC2PXm/j23z8ZF84
95EmCzzRdWNpDy3Cy5zpxy3PscCu874c5XgxNlOUGNU1ZwHT2eD9Xu8S3Hk6
25ngzAJWWZ87kkpLsIaFDDX3MxY4N/8x/ZBjCc53z0/6F8ECrC9Upc2KizFf
hMKRxVQWyJWqtSHZL8QhOcVdXWUssF8TbKDckId33yvfqmwh8htlLmqUZWGH
sfK9t4MskA1VX99vpuKJ9cNv/BdYoLrL4zlC8diArkbO8TcLbEclH7a7FIbr
RdVbjKlZgWTLjvRjpT1+a4w2RGVYwcDn398r/m8Qo+P7F3TqrPDiwncPx55k
5OV/QmRDnxWqb6HHt/wy0Y+3H2rGzFhB4oRqe3plHrpRefpCkyMrCH+L7DYS
LkZdXZ+WcrxYwfLDqjgPRSnSWtT3jghjhcJOUwbuh2Wo8N9nrkfJrBBfcS4j
2KEcCXAbFlmUsEI/a0dw55dyFEroO6XbxAqVh/iDHDrK0b6u8ZRiPyvM+I1V
XVcoR06WQw+45on2mjtdv2nL0NQjU4Z/m6ywNEMm+edWCToXOZa+QMkG5VSu
rktRhagh10yji5MNNOLF1DWDcpBC81R/hSQbmCofcLrQnIYSxy3s3x5lg7bF
ed3nvXGIcXOWzP8MG5CYzhkpEfdvL3qbOIerRGxQpEppcwb/EFtUMrZnA2/L
/rcif17iG5p3Pqk/YQN3n1M5bGsJuOvSfxaiL9mguFj7lTHxfNByctymTWSD
Jz4akwwX8nBhwM+w9UI26PF8GP/evhgLJN2THMNssHmCZTu6rRSHVm00vO9h
A2aBWHq2onK83/3AJGeGDQgUfz9Zs1Zip6XfK+HrRL1nNgS0vlXiKRIPf3dy
duBRaSkgUajC5w7u8lmws8ML9eu/P09V4gYlr/LT4uzQnSHx1nGvAivokRgo
HmaHrbu1J4TDynGilc8c52l2kFLRVnySUIpjfj8vmDRhh7EqIT6aG8X4VchL
t/Rb7OBA+ySv3S8Phwq/Om7/kB2+R+//IS3KwIGVMXTKAeyQvEJ181l5IvbR
TxzcfsMOPS6S924bRWDP6bQknMEOjaeuVMizOGAX2qJDZz+wwxORN4Hb8jHI
Ial8j22QHXbZuEo8K1PRbZXa1rF5dvAaTPWl+5mNrD7hiJRNdnD2pp1neluI
zG58uGZLwQFJKlvUZ3tKkMlGu7giOwfceCXb8PdHGboQ2PPzlygHSFw553gw
qQIZ8A/V1B/iAPlB8sKS4Up0qnTc1/cEB1S/VKz1jKxCcHrmrN5FDuDS/bj1
o6MKqU8scLHc5ABpTZIEDd8qdPje8sywCwcoWz7VulpbiQhU63mJPhxAc32V
cvFBBZKJ//3AJpIDqqwXNzjelSFxwh6SS+UAhzTj1cDYEiT0gYx2o4QDdMlv
baopFCKeq9QDNe854PVYV4vF82zE/pMh0buXA6jphyPx9VTE5Mdme3qGqO9d
gfrBrGhEUSiwO0DCCSQbB1DCkgPe1xb7GM/MCc4Bd063K0XgnWHpcCshTkj2
8x8MNU7Emw6KV6UJnNBY3Dd0zSwD/yBVFVtFnLBKkS+XSpeHl6LUflSe54Ti
w2bVMvTFeE4Wqj3NOcFbmTPb91Apnmo86aNzlxMCjN/6Bq+W4ZFL+gZ0Tzlh
fo9d2E+tAvd9N+TsC+UE2q65wRt0lfjzU5PpmERO0LHu5f9kXonb2M1yzQs5
wXCm8rrCkUrclGPpKtHACXW2By7nvarA9Vq3tVY+cwL3cxmGnUfluKrfgbp8
khNiIyYU9dZKcamtS5/HCicI290cFSQnno97bgnH9zjBOjHVhu9hAc6M9LxF
zcAF5SeFv+0ZZOMUSV9CNx8XuNpOWU5np+KoC6EtZhpc4C4WxHK6JwiHL7wK
FTXgAhJFvTL5XRUc/DjW9Ps1Lphm5FY31AxEAcxJIiX2XBATYvkuWCIGeWek
L7s95gIhpj8HzzSkIA+13EqtYC5gXCwgk/2ZiR50F3lTxnPBvE12xtXAPORs
XaHXmcsFJgrTzwOdi5DdTi37q1ou0Ix8GRJypgRZhzZOXWnnAnrqhCMazqXI
XPRjttAYF+ip38sXlyxDV6s7XBa/cYFB1k2fZvsyZHy2V6NwhwtGbzzbVtYq
Q+dmh6ge0HCDb2sIrURKKdJ1m+hRP8gNRX/T7n8gzpc2/WwcmTQ3NMTthr5Q
LEaaKYvWn45yg4MbuTn3SD7aTGi6MHuGG1xnqY5GmWSj3Ji3Wn+vckMCpUpw
FUpDnOEXueU9uaHYhpopJDUMdQYrUJ4K5QZvp6GAQwl3kc9zmvUbSdwwHeoc
Mnz2KT7qOz/lVswNhnN2XeaKr/APL9wR/p4b3EP+DT/qeovTPeKqc/q4gVvK
aFK/NA1fffggo2mOG+rbhrPODmdhZhfDyPFNbohJPTOnrZaHWx1ln25SHoRk
1i9XzD8UYK87VA4MXAfBFSI+u98pwio2M6YSUgdBYb93SYSpGH+3qD+Jjh2E
LemkELvZIpxsFq1sqncQXkt9yTatK8Qmpi6C964dhF0PB3mGinxMb3yW/oXD
QSicBOGEmRzcdF5qJ9XzIIgJ2CummmZid33yhbrQg0A4dG7S83AqVjg91TeQ
dBBIbJ82kR+Jx/PaNXil+CAYXtb2BpMIfEHtbqxg/0EA1dQi7qk7iPqwXsDR
+YMgxPuxyi/lBWpQEr9/4ddBkJqmJZeYiEKu8iQWdlQ8sO1/jfX76yQkIz1u
4MvFA3BnLtsiIQ1Ni1UeS5Digb6UdbNLrZkoSihCouIYD2S6OdRrquQgAz4H
ti49Hug0opEj6ctFZNynSRav8cANylvxM2/yUDWbyMo/Bx7wmz5yv+ZxHnJi
2hvl9uKBq87k/pv+uUiMbuSjUhgPZK/+JH/wLhuNU5WV6SUT8/844nVcKRNF
koUm3yzhgeJXIzzMW6lId9/25ZMmHghH3v9d0U9E+zsnPN7084CtS+bK5fo3
qPyXwO3CeR4wjKCXBoogZLe2c7H1Fw+QrKr3v5a4jYRWBmCaipc4P1tqv+Ax
Hloqkt/h4gWSiI3FMMNwHDL/godVmhem79RGRBvGYu1pmwOyarwQI+DDI9iS
jLfHiVehPi8syZBML15Nx4XDvDNmZrzQw6vBs3c+C9v0b31+4Ejk7z05XhKc
g/m6e2tDvXiBOdtDcetvLu5rz8/KCuOF4uCVoO7XeTjw4/PXjcm8oPLmoXWm
YR7WarJ6NlrCC1J1qMGKkIs332k6rTfxAp9NXuE99WycW8N9jW6AFySaIq49
e5qBLSo2Tot95QWrHW8GZeZUzFnSpaK5xQsW4bIEKYYE3JmfI2xygA+Yr1i0
/yJ5hX2y/RjvcvNBsozeWqiXD/6ZpLaUrMYHI6Vf/VNdA1BmPMdgjT4fOJBu
kc4Yv0Fm0avv+8z4gISN/9DUj0TE+qqj8D9HPrAVuVd2cyoNtYVmxlM85YMB
96IzYfVZqOVfe8XnMD74MWvp2f81FzU6/+yOSuaDo7d/xP4wLkD1M2zfzUv4
wK+yQ+DyViGqMjpKId3EB206XpbM9UWotNlMYL2PqCenWII1sQgVqjw7WjfH
B9VnE24/iitEuRkZRn6bfKAhsK4VX5GPMjnbHc5S8oODntrs9k4OSn3+I4CT
kx9GvoS/oHLPRG+3WVO+SPAD4dLT4MGTqSjmzpG67CP84Jy09OLQXhx6PXZt
8J4uP3D/+HmA1i8chet7/1S7wg/TN7sSpuIfoJD6dBoKO37w7gyp2lF1x76J
K5pRwfxA4vF1w6wmAXsxsZqaJ/CDLr/KP/WsNOzhfdhFqoDon5z1S8wrGz9c
uxqy9o4f8rXHpCMb8rGL1dPM2i5+8JtlCR0RK8ZO/WmNvl/4IXR8vbPKpwTf
0WkbM1jlh3YDmqhwp1JsXbG8yUEqAPWk78O3pkuxhQQL0xcWAeiamjCIGyzF
ZtGq0tkiAuCwf37bXL8Um1JfPXHvkAAYRSw+ttcpwcaPvK6r6QhAo1ejy6GQ
Inz+e6ob+SUBkLmVstpVkof1rrVGdNoIwOa2cvRr5ix8qvO/vDcPBWD3arPJ
fy0pWFuT+eON5wJg+HXYTmE6GmsVqkxLxggAc/0B39nJAKwmeOXParYAkAwv
cpgFXkaHwz3Za2sEwFu0+b4QyUukTJqq4NsuAKtl1lWz5+KRvMtHXYNxIr+4
HcWzj2lIau67FceyAPhFn1a0vJ+DxIyZPKd2BSBAzuiO5/NC4vvkUHQWgyBY
6P+OVHUuQXyHTUucBQSBMo7p0TVCGeLOetJxTFEQiszobTXcyxEbd8pXMhCE
RfOK6HWtCsQY9OFfh6EghPIf/9buVYFo/3w7+MZSENiO1tPdVq1AVPaMKjdc
BIGEZPlgy81yRDahfE7SVxB4Hp8XVmMsQ/sGl21XXwnCE+PwJkuNErTz7rFP
TbogUBe6zy6sFaBNheQEnwqiPXHpp1BaNlpNaqnU/ygIm1skzWv5qWjpGcN/
k4uC0PgrRPVykD+aX1eizNom5nv7wLZu6A5eVcpjqqYQAuaTD6iF1CLwf6nd
0s84hMD6aaO6ymwGth2fqfzKLwTOBus8Rt15eIFt84SehBBQ6y37nn5ejK0N
qHoLFYRgPlv7LSsuxbN+3DfYjgiBYQ05z2/vcmzxTuY/NyQEC3OK9T/fV+Cp
XxruE6eFoOX4P0fkUYnNFM5THjcUAr5j6TqBGZV47JZlZIapEFhpXy2Y1K7E
b69XVD+yEALB4hMF5HcqsIUxzZeztkIQ/uPuEWeeciyqf51SxFkIely5E9Ru
lOKF4yWyW25CQGEv6tCmWYxzjlIatT8VAo3PIs+1gvKwg+IV98TnQiCjM0d2
iSQTr/ORfjgVLQRiw06O9wxe4Qq2S//xJAnB6njNj7xP7tidNoflZ6YQkFjf
K946+ASpk+4daS4UAvqrqkN/WV+j/d+GN6IrheDq/uTp9ovJ6P2PdD/7BmI9
cjO3OjUzkd/X7Vz0UQjYX4WabWXkId0Jg162LiEwrVx5LHikGNH1J/9eHBSC
j98PjZpqlaKuT5v89ZNC4OTQWPRzsgxFNurqhH8VgjmWn7cSGCrQpaoEO+sV
IShTOqX9trUCcReuhh/9RezXP07yz9SVaDxdp4p+TwiefGBsTeypQInxMZPT
FMKg8GTWnVe4AllGLpNX0AuDkQ3tYPt+GRILApkgdmEo5438GE18fy0+fW14
nU8YTG41rOc8LUa5D5ceKokJQ1uS2hlzp3zk6KjxllJOGJy7ZupO62YhgnV4
8+ghYTAs/awokpuCNq7OfytQFwYYKvqodTsaVV44yuxzQhhWGQ3cZw4GIA00
bSZzkWhvLJ5lzw3G/1RVfPevEvHl3zpnP8fiJrnAnD4rYdjmrP2dEpyK/UUn
ujPthMH05JlPy9VZWJeHsOXhIgwJ4mzaThfyMR2LH995D2EQEfn3/YBAMe46
MKIt6iMMcj0VldylJThyX/bO7yBh0Knj9Pk3UYov/Xoa1hEhDDduWzmfiy3D
3Mv9FUmxwrC87xssOV+GJ2YlJ+6nCANPtxXt4XdlOGn0MZlujjBEGM6tZUuU
Yauebim+EmK9LieCOcVLsXir6PnVamHYbTpw5QYuxkvv3B60NAoD9zvthzu7
BTivvCM+po2IOZghaSwHO+UJNjn0CIPF0ZySCkIGVkq9vwQjwmB7jbuMmTcZ
b8a0MnJMC0N6b8WriLtvsEfA3WvvfgqDN8uag9jUWaTp2fws4rcwSI07St2i
DEQkrlzZNv+EwWxkPeJfXhRqtrPvOnZABLJZ5xV8LyWjAEu8ycAkAqUk1zaV
Z9PRGVM23llOEUjnzUspnclG9OdvH68UEIFiF8GDwZr5qPtk3e0XEiJA5qTq
GTVXiCI1mEJvKIiA/XXVUombxejSoZvlyodFiPc/k6bXj2LELVM1RqUlApUr
Kh8WWUrQhBAd6fhJEWD/ovHyv8/FKInLXLLoLBH7myU7ixejxvf85nImIsCt
MXD7GVUhmrafiMq5IQL1hgsM3zdzESlnfJfEbRFIDuPkOKmQhUQar1Cl3xUB
94BGn3PdqeiEHbeWsLsIkLy6ty+7Fo+s2YcfJHqLgNDA25Rb8REo09b4a0yE
CHiLWXQZtjjhVlY2fs44EVhlFczRLg/BS/W9xq9SRQBuu4nNnIvBNLfDQ5jz
REBnmnOxtjIZy7Ccb3lZRsw3drW2vCYd69cx7NLWE/l5s+Ta2LKxg03nocAW
EZCzJ6uqKcjFL5mC7Sk/i4DBQl7uoYf5uLDmTJrPoAgYv9CnF7IqwN03qcf/
TYrAC/rCP+MOBXiVoZXVc4Fotzs2ezgmH7NU++v9+SECIc73DS4s52JlKx0f
t98iIINHZS66ZeOL9OS1m/9EoOFQmuMfgwzsWvl+7R61KDB2EhxpA1Lwawtv
6Z/MouDKPPYf89M4XEGLLB0OioLpZYET3w5F4KHyvZhvwqIAs+SUVc2eeOtG
fc8tGVHwvjH4xJrEGnHRPKaeVxYF98B9aqGsQHS07BhYqosCn/TrnMCGN+jK
9W23qROiIEcW8u6ueyLyOFBVdM1AFGaXP/3HKpiG4kseLI4YiwL16KHnBLtM
VH9NRdDkuij0cDdMpVDkoEnKDZN+G1HIZLpq2D+Wi/aLSkINnUSBhJTuAdWX
PCR41fnj54ei0BRsF5hJk4+AQnFf76koDM1UnL1zJQ9ZFq6otj0XBV2qBw+N
+3OQj2m+48lwUWg7W2we4ZOF0sjsM5piRMEYXfkq4J6OWvKlJ1GKKBA0jr42
a09GX02W2N/lEPNZFiovScUiKtIsA7VSIrY7dUNtKAzpXhKrV2km4qJ7eqtu
d/Gdf7MbJR3E/rwc6vj4XzB+kZMiqzggCtux/UztWdE496LFzfwJUUgu352p
N0vGHXsC8dJfRUHsX3Y+tUs6Xs6a7MtcEQXnq9bJ+htZmN4ogVZsSxRiTkr7
uTTnYvndq9op+6LQWFV9WvpTPj6XedBD4IAYTASMV9j/LMB3DUdK4pnEoDH8
gU+CRCEO/xP1jZtbDCwoLgQs2hTgkvRLwlFCYrDg90jjZH4e7jvHfoVNWgxC
L6fwTpLk4I3tvvBwJTHgu2vw8btLBmZPi2hjUBMDvzUZlxsHU7DqWUOSYG0x
0F2JKEkWi8EmvxmPUuuLQbiwftNX6hfYLeXzXf+LYkCiqnR52sIIx+iHZJGZ
iYHtoI9J1aEANJZEw7XnIAa7HDzPXKJTEFDTLn1zFYN0zO252pSJMp1pa4ae
ELGfY8RFpzxEP0r7otlPDALYnEL0HxQhl+N014pDxEC9pU7+7bUSNJJDJ/f2
tRhI3o4SpwgpRVqs9HtBCWJA2zj0yhnKULoHfdfDdDGIDU4csHMuQ3Rz9Ek3
88XgMddHrTLOMuSiz+BsWC4GIeFfkh4olaKRMobjmvVE/V1LIq5NxUiLj5FV
pkUMYuYpZZUSC1C6H+McZ6cYJEjopP1uzEa0K4zl5ANi0FO58ziLKg05X2Ly
Xx0XA0Jz/jMlwVikIcEs2f4fkW+eX9FM6y5ODWXertwQA2cVtf+unHyFqX8z
f0r7KwZSdKdfPrmUgp3MWeLCycUh/APdPtNwNh5oZbH3pBMHsU/YN229CKsR
WDXs2MSB2f7K1Fu1Mpwcw8pwmVccJgRO1dlxVWIqUjbi5yYOKhFcB1oeVWPH
O2xFBFlx4FuZrtE4V4sHetm8+Q+JA7eCCa+TXx1WU2O/QKsuDokf+2IuMdXj
5FR2kd/a4mAaMvq8/msdpqLj2JjTE4cBE69ST7I67HCfo6XHSByi5C2Zeq1r
cN84x5t3V8VB+/jT8UfMVfioDuetXCsif/SG1XeGcpyYz3kk2k4c2n7SUV6y
K8YUHFzUfi7i8IPjS6PG3Wxs58k16uwhDmZN+wOrhER8+Bz3Y70X4hDjoicg
Jx+AEiq5DY5EisPuEK7+djkZkQke5BeLI/KdC6V/yJOHbJ8f/MGcSuS7bMSa
8LEUdf88iPdyxEHqi5P/WkUVOmzKE/69hKhvs8cnSK0eJTTyWA7XiIO7TSf1
Ak8jIpPmVW55Lw5CoerHVj68R7YRvOQln8Shry6EmY61GXXt8A687RWHVJn1
9O7NZqRixZfxYpRYP/uE8hebFhTXzvfQbUYcgr556EqYtyCSQ/ynrb8R9T2t
XqGdbEa34vm5L6yJA3W/wv3IqSbUSS7wTXNHHEYPlj3xs3mPlB0EamVIJeDL
17ZQtpUGFDsgEMxFIwEOl2k7A5RrEYmmoBkFiwRcF0tZTSwuR7cyBOXXuCWg
OjPsvCBlAVJ+KNTdLiUBjQdgwdPRBsVMCSVXESTAcBj3khfH4f1TwvfSj0qA
ikgNBArkY+siYe0IkIB6zS6vfMMK3M4lwualS4z3nZYrPFGPCd4i83aGEhB5
MP/h3I33OGpJpOKyqQQkbvruJui34F1D0QAdCwmgnib5b2rwI75ZI3pZyVYC
tHVjL3uttGGHiTatrbsSMKvyIXfCsx27/nOUqHOTAHVdAf325x3YU4SN0fup
BICeaG4/WScOOFn9S+c5sR7rV2zc3zpwmO31SZowoj6DqhDHIx04JpjsQ1eU
BNwdmX4VtPIJpxRm5b9KlIBzpPWB4oxtOLfX4LVppgTohzoz8CR9wGWba4/5
CyXgbyl1jUdOE67nir45WyEBT2x8D5jeb8Af1DT0s95JwLudGLvWhkrcdX1G
2eGDBGxG2FwIrczHw94BPEqfJcB77Sbjh4E3eDpNlmxrQAK294ZMW2hC0fq3
B71P5yVghVFPGJ+oRH/peWt0liXA1yDI/o0oRhSExmSaTQlQu+hedwE3I4aL
NoFdfyVAM3yS9dSrVsT5kNb5Fbkk2Mamx6dttyPB2KLLpnSSsEiZ//bzxGck
VW+M+NkkQauI790YVw8ifNmRmOWRhMLyBR2y9R50jCyJMUtEEmSupwjGuvUi
bXGdLXsZSaAdCPPrT+9FerrfJgnKkkD295qNPdF+0T70w69jkqBYxKda8KMH
mYUeKqg9LgmzDuGkwXQ9yKZk5PXTM5IgkTcjciHlM3Ia8Hyic0ESen422A/7
tSPiW8Ka5ookfCwN7GDv+oi8edr0uywk4dbJ2xdEXjahIE3HQ69sJeGQ7KBH
el4dirRg5TV1lgS9onud6GkJSs80+z7zVBK8X8tfF+wNxwWfSPsyn0tCoGLF
dbLHhbhyObPGPkwS5iMm6qIZa3EDk0EKIVoSsk2KHierNOFW5bXAX4nEeJjW
p6NtxT2XopxrMyWhft5KPNOxA4+4q5s+LSTWL3r4xivdbjwTP410KiVhjG7i
QOSJXvy9wV+SpkES/MP8rruF9OGNGRmmrg/E/D/E39x178e7FD1bkZ8lYYgh
xjKBbABTSj2YujwoCY2xFz8NSA5gRn2ej3yTkuAymnwuc6Efcznhgpl5Sahz
DTayQP1YKML6TeayJCxfHAzmUenD0uU0nvabkvB7a4Slsa0HKw8XWhN2JYEh
57XUIaourP7nosEvcimgHrqUlDf4Cevw7xyqpZOC1dlGcj62D/gsJPI+ZZOC
74x32VjyMDa5eYJch1cK1u2KCyzvlmPzgKXv1KJSIEDTcPmweQq2zXnZ91lG
Cor7o4JPhL1A9zqVayOVpUAjkKLzT3wh8vg5nHJZTQp4FJJsqv/WIl9WzyA+
bSlQoMy+oULXjEJURe7NnJGC8VPpl34qtqHXpq2mmRekQOUL/4GXPZ3o7WMH
sL8iBVfQsfQ8ux5EYfTk2KilFPiY1ikqqPYhO6kQ5dN2UuA4/VHwZGg/6t2P
l61wkYL8BIrOSKcBdHQwT0z0sRQcX3m1atM7gJLy6vgjfKWAzWZHoqx8AFH5
dHD+C5aCpLWvRzkODiAH03Emx9dS0Hf2yGA7aT/qV/iPejxBCn5pFXjWufYi
Ncq/pGcyiP0Lm366stmFksdp/1YWSMFDhXFdZ412dKCUZ1OsUgqWPQ9n1423
IKdAmZXIBilgMuioNll8hwZvqC2QtErB0ZAD7NUXS5CGqt4Xp24pmDaR007T
ikA0s3d69aalQELorKRocgV2rn7UXr0kBTSZXQp3lxrxUGhQs8SaFEiRbLN4
+33Emjax9a93pMD4HX2D2dMOnK6eU0FGJg06YpC4UdON6VhrCp1ppUHBKocs
9mUvdllqy5pilYYEg9gKyrY+PNIwkmzAKw3lfI2NVf79GL1Ziq0VlYZ3A4nK
3M39ONN+O1JKThpWR8+98Hjaj+m1qUOiVKRBqqZDl+ldH77Pze1PoSkNSxwT
MlPevXjsh6SXy0lpcLDaV32c0Y2PfzjiNn1WGto1ah+EeXTg7PjTzudMpOH1
2Ty7iPiPmNHl8p36G9IQabnwSF/qPX6ge9tK5rY0XGMVZS96UYknBNyuxdyV
hi8Zx6M5HNOx9q8AYyp3aai+8eOgbpYPyumIOuvqLQ2uXQfCrj8qQMypmadm
A4n2pWc++2m1yM29EhlGEPOZRwUKjzahqXMfjzbEEutjNH12r7MV6YgPKcml
SkNjjYq3JW0nyvv7VSYuVxoEb9SXubt1I9a+X6LUZdLAY9v2QutfD3LPpuR/
WCcN2q30jzXbetEXLw7O+WZp8GNqsL3J2odOXRJnMuqUhuUu9Xy3iV5UIKtK
3ThA7PeNwaFLUr2InewkqcKkNLRKNVb2/+pGHiPGf+K/SoOAdn0iqu5EM4XW
GzQ/pIFRioahsqAN6fq7LrttSUPIoVXrmrVmVHjN7+vXfWlgGI36/VjvHXpC
nT78nkkGsrUU1E9XRaO5qbIeRW4ZCM/NlYhOjMF6Fc2f3grJwK5OemYdVSku
Du5vopOWAZ8TtyQtjd5hLqu5ukdKMtAb7X2WfKwZex3dKF88JgNiePukz902
PM9IXnhJWwayBMtkVnQ7sf5X1qxmPRn4yyQs5KHfjUvrRJKVLspASNznyjMl
PfhgpHJs0jUZSL/2gHUP9WJvW+1IBmsZsFdXWVk+24sXtIyCHzvIwJeX4WJ2
Yz34LIeV3zdXGTi7lUZO1dONt3PKOFufyMAzGi+nn4TPOF2LMifdTwY8zc6/
e/T5EzbsN1H3CZEBncXwQrqaD3j3dvZn89cy8KCMsrid7j3O3t0x10yQgSMt
amK9LVXYOEJ/nSddBiSmhj6cd8vB+bU/OIfKZMB2pe2KQGI6Mj0POWV1MmA5
kVn2trgCUcxHqEc0y0DeG0m6q7qNqNh97rNThwwoqwc4oIsfkBmDqoVBvwxc
PU7nzjfyCVGnBqxLj8uASnvhb8baz6j88IjfgTkZ0A2+r3/SuQdZdEhzff0u
A+VqDwY/xfcieovHOU3rMkCb5bm1ebkPVW92qif/kQEZo7tbkUl9yDpIoMuT
TBamJv+d/Ha3DzELOFtco5UFG9ZNsQ/Eeasvfb9+lFUWnIbf1/vl9yDb02z+
nDyycFw07J0BdCH2CWuuTWFZuL1C1Z9s0o4anStzeqVlIT9p5WFh8QfkQEmt
UaQkCzmq/PMPbRsRd9yVrpBjsqBjpjt0Q60CtSjkWdgdl4Uep6E9ks4UxGd6
zl/8giwon2LtCyguxm3LSVzkV2RhoXzvstyJd9j12VrOtIUs9MVZk0wmtWAh
zhMaDbaycNP5in2uXDvuzH3dFe8sC+F6oGQg3o3d0YLFI3dZ0BgkiY+v6MVi
A0c2TLxlYWui56qUSz/usQ3yVwmUBa9CC4vwdwP4yd4YF2u4LCx/SvByDxvE
UpFyuT+jZUHc8pji9swgHpDw0vicJAupZPPdaSWD2Luuuys3SxYY+D85J+8N
YDlDYcvAIlkI7LnfWt7aj0fmXTZsqmSB6fvdZnP2Puz3qMX/BJaFW19fL4wP
dmMCIye3cKssJPriING8djyRejt3v0sWGhN50iebWnDgkRqNiSFZWPl+tjPU
ox6rdNJ210zJAu3+HAcmLcAhvwo2XH/IQrYipdW3ogJ09MU/f6MtWZhhqy9X
c32H5gUucBP2ZaGFnSekvPkDCi9LzWWgkoNLJh51z693Ig3dTY3/GOSAunZA
SIfQi5YmTna3cciB+BeGM7yD/ej1vWjLTH45YF6+f8aJcQgB1bcNX3Fi/EQJ
YbB7GC3HqQVYysuB2JggWDGNohjFEG6kKgc3JQY10z+MIp2WyVw+TTkIqRjt
LFwZRaumipp/dORg/qdlpZD/KEpY8e4eNpCDuBkPdZWQEaTr02dZYSwHu/fh
fD/lMNrkFNuMNJMDIWtyu8LfAyg570GAs7UcnKpzFrpu14f0oZX7nIMc7CU8
u/CjrwsZB/rWD7jKwWS97pKaYyu6QfwkrnnKgfkviptfwhuQi0V1lm2oHPTU
s4ZrzkTiJ9mu+j+j5MDQOXvQsLgSB6wSfj5IkgOGS13kz9lbcPjRlcjdLKIe
Yfr8F0adOM4757BvsRzIfHemVlrpxeltNmM0NXJQIMr0ZkRzEBcyi3iFv5eD
7ew81TmqEVxtOiXM1S4HplguqP3IGH6fHPfhbZ8cON/tJrQ1j+P2JZM7YuNy
wMlvGdKSMoEHCGwMeXNycFjIvlOvcwJPuXcXKy3LwbjTo3cBxyfwUmOwcfWm
HLz2Hvhxlnwcr1PrbmvtyUGowtNQFa5R4r5CkfCBUh7GSL/t5wUMYarYRmTA
KA87gtdNxM37MdPMk7k+TnlgfPT+npt1N+aWPvb8iqA8CN2Ne/BWthWL3Psl
My0pD+03uY7KhNfjw6ROLitH5YHn4W/xI+ypCM7IcLoelwfLDVVS35Y6pBex
UPPnjDy8PMqnwzH2ERmPpl5/ZiQPdiL2d5fkutENYXNS6mvy4Lzo7957oR/Z
3uHNCL0pD5Snbmr8ez6EXEqGdTkc5KFuUYRWQ2IUPdl5tRzvKg9iCsXnaAXG
kf9xw3ART3m4lkEhQ20zgUKD6FVy/OXBLaTy3ufNCRTT2zasGCoP4Sp1Gn3t
Eyj1oP/jyih54HDLCrm5NI7yLY8LaibJg7/OXnqq0RiqzNlras6SBymnH8uR
rCOoca3mll6xPGhYXz4nrTqI2o89pO2tlodvqnMhNzt60cAz5cLL7+WBxJe1
smSgA019+nFh6pM8mCwGl98xaUZLLHm/rPvkYWk8c+1sfjn6myKq6TInD6+d
UhPXLxD3/+9fprf/k4etm/lnRPneY0blBL+nm/Jw6BAKPenzCXN7mEpR7clD
bneIi2lEDxZpYu8MoVSAKLGDQz8W+7Ecbe9dNkYFaF/QnEwqG8KHjV6yxXEq
wMiYgdDu4giGuDNVQoIK8NXbLzTmyRg+M0t5LUtSAYYo6s49cRjHRjJN+/IE
BchMiZqerhjHZi5eqeVHFaDR9P02/9VxfKtW7ZT6cQUo2xaTyrw+hp3Jfn97
f0YBHhVfvEbVNoI99Mpe6hopQAntW/bFtCHsF3lXqfuqAvDZL+RT/+vHoWOy
g5duKgCJkrWaxvceHCOy5D5hT8wnVS4bs96OU+3S+W66KsDHB2zysf7NOL/U
ovHbEwXwXW6/9surCmPt0QO/XyrAaw8RXkSXjBxOqjVdilIAq+m51ekvlYhb
N/5JeaICiLHJ9pDaNKEPeruH2bIU4N6vSfSvrA25nL2+dq9IAWbCRrI2VLuQ
gGFDXk+VAnR71O222PSiDiPBW4qNCpAeRaAOVehH7pe8hULbFKDIs0PCwHEA
iZnOjC33KABn/AxDBv8g6rmq/UZ/lJiv/HJxu9Yg8ryedj53RgH8Hs2bmfQP
IBkLClqa7wrQXLRQLjbTj4asbFpurysA61X2+wr3+pCPzUevj38UIC5//PnN
sB6kaCt5TJxcEbhHSQN3XneiCbvADV86RWj4b6Aw8HYrCnT8VjDLpghdNp31
ce/eIxVnPdvjfIqgspnsOOpbhWZc8kSSxRShx2U4Ysk3E4U+oJ/cl1MEEs3x
78u8TljN3TH6uqoiSOmJhO645+BFj64L9ZqKEDXCzqvTWYVfeyrS855SBL67
pbwvie958A7/+OicImhYuAuPHv+AV3zWvEdMFOF5aN15noE2HOdvpH7EXBFC
819yiQV24FOBZb/e3FaEmLPLie/PfsYbL9iLN+8qwoGAkchm3i6c/PKB3UV3
RWh5rBjx++dnbBA+JFbqrQiyVje46Ls78U7kkS/MQYpAWBAds2lpx5lvYmLv
RihCrfYb3YWZVmwUs3OxK5ZYP+u14reoBe/HXWWUT1WEZjq6uA9bGOe9rWsL
zlWEKYnF8JfOlZgizVPzTJ0iND5irSVZ8MAlGVO/s5oVIc7zC8VEfQq6kY1K
qToV4ZJ2qKMHaxmizUt2sBlQBLPzPcmUsfWoqoBUsmVCEfo3xNt3I5qQdbHV
jMhXIv9D8zi1Ix8Rc1lz/LMVRfjd3eDNI/gJvasQM5n+pQj/hdNgfeUOZFft
z4z2FSG3oKC/wLwThVy///UcOQEeur27FJbQiWan0rS9DhBAy8iRY3K+Ax21
GEgqoCOAySPaVVBvR6EzFHsTTARgEVqckM1pRfNWqlfp2QmwwIXOD2m1ILV5
myp1bgJYHM4NFGZrROE2Uez2fAT4qE1h3hZQiRYXPt6LEyKA6cxtmbmOLKRl
+7vrkxgBvA9b6fVGWqHX3yTldqQIMHHKX+WBbCaG5cCFy0oEiHmY+eoE+Xsc
5Vhz4rkqARzCdn3YDT7i5R/fkiuPEaBZgiv0KHMH1nbm2f+qSQC7xwsTkzLd
OHZN7xqHNgG21e/fJNfqxasuj6t1ThGASym90s+1D5/azONw1SOA/Coh0V2h
Hyc8mHBJO0eA0Yg1idvW/Xh9i76nz4gA38OcLf+w9GP7y1M7NSYEMBI833fs
TB+eryoSTblKgBE7G5cC2l58nfvZ2cAbBHAiMUq/X9GFh9yN3O5aEWCq7KLI
qnc7Pj8qmmJyiwDzNlufPII/4LZjv9o17QjA+t38p98EJp6HHzfFnAgQeWfk
Xl1YGa75Ey1A70KA9ENTkobTsVj52h3djQfE/orLnOBxSEC5dWouY48IxH2K
y350qByJ8tEnvPckgKbUUi6ZynuU8GTyQ/YzAvTdqLwT39CKOCYLf4b5E6BB
mc+W4utnFKrpfdAtiACEV5l/BJt60YHECyduvCSAr0X+c0+tAeS9L+J4MoKo
7/Gg2s8rQ2jnxmaU3BsC/Ogj+fCFegS54A+NbLEEOEWnfX/q+Cj6TzD6+58E
AtwSDXqSvTeKrL1t2WeTCUBFqbGhcGQMTU4f0/qUTgDpaHXS1P9GkclxOtvi
bALoHpmx9+AZRd0pExHR+cT+D2V5hH4YRrpkhXVexQQQyxjWFV0bRO+tnn61
KSeAdSH7HHV6P1JrNmQ6W02Amljn8wWLPahMVOSYSj2x3vIsjVvhHUjOb8OK
t5EA7P/oLixnt6CM+ZYQshZiP1+rePC61yKBk1GV31qJ87FG13e+LQMxUR2j
re4m4j3SdyXkFTjwFq1KUj8BXkkE5S7oN2GS1vHrAcMEGKS7lMxa+wk/kix4
7jhOgNC+hjIw6sHrz71KjL8QIIJ2rpzSlTgvS+fH1eeIelulrNChITyvK0wp
ukgAHd9Nl6u+I/h6zroC7X8EeKqxoalzdQwP0bSYrv0gwB/yxvTrxeP4vN0b
n5F1AoydYz9h4z2B29pv5eMtYr8mLF/caZ3Ax2WPDmX+IUBcLMtSBXGAaoNp
SEL3ifP3+ITW55pxfGh5TPoBmRI0JpmfuGU3hvMN8i+aUSlB9bOt4rsJI1i8
wNPzBK0SqM7/AW7TIZzIcD5LhlEJFAt3Hw1n/f//M6FeFlaiP2v7yfsxPTi8
a+3PNocSdGj102/fa8c+Ya/PtfIrAQN32kU2nSr896eNe6GwEjQZHLrbyJCE
XQ2PpL4RVwKCHu8hy91EZMMy9uumvBJQtFGtmZc0oal7eYL6SkrwZap41cfh
EzLpe3JGWVUJHpwfFy/y6UbdyufuHzymBJIebq+o7PuQ7ivBtySaSqDSPJqM
sgbQ+43Vj/+j6LoDsf6+sESpVLKSzFCKxDts7iWJUiQhlYQoEYkI2Xu+9t4z
JHtz7b2zV9Ky8hUqpPrd35/Hufec53nO87nvvX/5CsVgD995307zUSCt1bTW
pyQGT1T5/BUuGwMlpeHs5SpicNqC3SjBaRwIszxUSlQTgy0SUtHDjeNAq3/5
57iGGNQ7+4edz3EcOPlZv2a+JQa5w0lBN1LHQMbF7Tsat8Wgf07UNqfsKOj+
43Ik8J4YLIred1RZexisV+xrbH8gBt0Zst+b/RkE7NZBz/eaiEFr117vSY8+
oCjMfBqYiUHv06QJR4sOYPYlbtzhKdaH8vuawHwjCEvhDSi3FoNxfzxXJ7nK
QbVejtz6CzFo/PT1ZHZoCphnvrB23lEMduSzF1xzjEQH+8vSHruIwbW19Ghr
h2JE8JO9lekhBhMMy8W639YjvYvN+z/4iEGDn3ObYKQFuf9RreYIFIPVHgeY
giid6HXFgLkuRQz+bUiQ1DPvRQPPdLgjIsRgc6H1c8OzA2hLaHawPwb30/td
UMs+iHi+GHseShSDlEDCeJf3IFJJWRa/nCoGfUU8rtdYDCIrPetF90wxaMTt
90T2Hb4/MW/H178Wg2+Ln0gWOfWjhj6X6ztvxOB1riNy8dY9aMF33x7xYjHo
WJbrVpLWgRguBpU8KxeDrPvNzKjPtyDJP0wmb6rFYI2VBO+2eT3yecbbzd8s
BsUevot+VJGKCoRyXhm0i8EYAwmnnVZXMPpZRDShG8cBKzaZT16Dv8ll82P9
2I8RCRN7c8rBaT3ZSKZhMRggQZXrl4rAdebmy+rjYnBcXWD5akEzeNGnuuM/
LQbVN3v+Cve3gSTfgfy2OTGo8cPQRpujE7Qp6tyn/iwGBd6Jpxp5dYHV3Zlj
8otisLb+cVMHVTdgrTBuefkNz5PGhvg1oAvIP1t+UfZdDPq57qccFOoED4Ws
z37/gfuHtNjfXGwDgZ+3poR3xODmUynN4PFmUJrsEvzorxiMmO/QWWNoANO3
9ylkUBMgx9Nl8OhBBaBhDtp4v48AqTp6tS48zQPCfUxZJw8RYGFLGDdTUgB+
L8bp6hwlQFgpGm6nkIAydrPr+o4TYM+RDWXupzWop1zE6iAHAZYG1Z3ZVWtC
m1Zlp5R5CJCW8QcJ6LYhDiHZETd+Amx56+MiVtGJLn5u8qkTJEDTY2sf7K/1
ILNkVeltYQJ0as+N8KXpQ2G3B1ZIYgQ4fLzUibanD1Uz6SRbkQlQXO/t2SNx
fWi+d+ZGvhQBauVTTr140osO+hrTLMgR4N3gfVW/LnYjguJyOZ8i5qerPKku
0oH0dp89vq9MgNbflx5dl8V+Ld86GX+FAB8PE8+kHEYo18qlb/Q6AVqIywcd
v1OKhs7tc2O8SYC6lscMG/VSEW8y0xe/OzjOuB4+Kl8IzCVlHr66T4BbrCWU
G6s1oHzQ8JOVEQEeVKySrUlsBlRP/I2MTQlwxDRX7fhqB7hCUzyv84QAm1aq
sqZae0FE4sSDq5YEmHFt12GTehC8F9/zQf45AX46d07XrHMInBsQNCDYYb5p
82tJ54aBzWON9wKOBEhzddJ4P75/11Pb659wIUDRrdVYndgRcCAheYbegwBP
st/cFxs3ArTI7XepfAhwCI2FynGNgKS+1akNfwIcjPtrIcU/DBZMWe98DSZA
AWq3DyxvhwBxj/zkZBgBzkf2b9C3DADnuIe3+6KwH94yEyVGe0AHMWi8MY4A
RfSk3wjqtwPG3lKdsiQCZIgsblGVaQT3TKZHc9IIMEe5aorAWQbWY4RGQnIJ
MCWWbk+gehKSJdzU8iggwPHg3QF5mXLk0+3w7kUxAU6+WS2bUm9CQ8Zpmmbl
BLjfCO7jEe9EHH87B+9VEyCh/Gvp6df9yCT6u8aNegL8IHY4obFpCBWJnhhQ
aiLAQ3++HN6rPYJ2O6G6ZBsBTrQJde64jiFlo0d9Ql0EqBJ3nCpCcgJRdkOu
cfcR4JpGyT5am0k0GVnRwzhEgFkCh7t7hacQ/4X3V/eNEuC+U223y/SnkGXH
vu7tCQKM6WDZ7do/haofiFz5NkOAs9KWZy0EJxHN71udcx8I+DyO3KPVPI6u
R7xSGf5MgFGn/21kzIyimPOZ7e2LBHg/+uVVGpdhNN/Wo1zzDc+Pa6glv2gQ
nTfYbC34ToAPFB9r/qTpRfbbJy+l/cB4S45+XtnThprCLrZEbhPgzHtnuX+7
tYhe+MlFvz8E6D3E9iw4JBfptIY1Oe0hwrUEp7tUtN4gTb9awYqWCJMlqH98
rC4GK78+NBgdIMKU5dErk6cagXjoAahzmAjtBby7/Dw6gNs5MXTlGBF/Hy9t
tHT6QU+zrrw8CxEujFOdfV03BFjvudaJnSDCEcffjgcfjwCDn9myApxEmDbF
eGsC/17lhfTXsPESIWMGP/+Y/gT4KfhLml6ACOk+vf5iGjsJYBNX9T9BIpzh
aqOxuzYF/O8oS20IE6H2uhGHwcspMLJpUflFlAjdymqJ45xTgCc4UmKSRIQG
b0IuzchNArMzdeW9kkT49HgYT/7sOCht+ERulCXCu+m6Hyv3j4F/t+nLSiER
frUQ8shvGgZXNoikHCUinNgtX9Q/OQQiAu+UxKsQobxArV8s6AOzAh6EEDUi
PCVbn0TV0A4EUW6RuwYRHnKJ+jYw1QDqvm+/fayL++vx2pcwRYDyT6MVRXeJ
kMpu7RT1TAYqHCtB2wZEqPLMbWRWpQq97qK0KzwkQhLbQJh5aDNKq7Po93tM
hHMFNuIv+ztRQuGVsUELIuT651jpKtGPItPPvD9hjfVVzquGI4MoOIrm64MX
RMi6NqrT4fsO+fp9WH3tQITMl/JVxguGkZtT/c/vzkR4XmX9WPvFEeRgGf9X
ygPz5yRKxFweQTaG9vvcfYhwVZvx9FDdMLK4detIVwARfnKe9L355h0yUSGw
MlKI8Im6zr1zPEPIQOYol14EET6SfeFnzDeAbousCKTFYD2c/tusCepGmryd
55cS8Lx2dkt3pdqQGnMWmZBKhHqMbADZNKBL+z3kHDKJMFRsRPfScCmS37l/
qek1EVovwsOFnKlI8pvstYMFRCiqM3F/4kEgEJs7cUuzmAh3t4xY9qsWgHPv
ft6NKyfCG4m1nS2fqwB/2zvj+WoitKq+MLG3sRFwVhWan0NEaOzOls092QpY
84NsrJvx/NoFn3Cf6gQMyWZO1e1EmOji9U/EsxscCLvsSd1DhCKETr736z2A
2os/8MoAEf5EK8OnHvWCXbs9EWHDREhQEcwkfO4BP8xm4yfHiXD9mmeqvnU3
WL1Xk35qhgi3yGIfe7k6wYJGTJ7ZByKsqqbpFqJqA/MXbUuKPxMh7eDEAXlC
E5gS16zZWSRCeLMPFOTXgOGzF5oVV4kwn8DHLCdQDPo46Lv914lQS3+AoqOU
AtqPLg4N/STCwq5aZ24+V9RA3TbJ/psI1W6qlJBWs1H1j7R5w39EWOpktihq
VIZKFlyWcveSYNbuypOhP3Uof+ru+vp+Epzf43kxqLkJZfVJ7UjTk2D4oZe1
7p9bUXIjK7UHAwkmGhxSN9HoQDGlGwe6mUkw24+iKPKjE4VlDxxjOkGCLvmq
H7m6ulBA3JsTdzhJcJjzhOwsjj2D/HnTeUlwVFyaw3erEzm7mp5dFiDBp/0p
NkW3O5D9cyUx4jkSdNKTOqW304qemfBKOYqQ4JeP/j2dy03I7PZf2EwgQaLI
65oM33pkrDalckiCBEP00u125MrRPVCpcVOGBNmU225dNc9F2oRI3XhAgjlO
n8X6K4KQKpv6IyEVElTU+mik/bsAKB4StnquRoLgoIjxk7hKIPuXzr5GgwS1
nTmZH7s3APL3zy57b5GgiVwiLRG0AJFPTT5Xb5MgTRa50fkR/p7HkkPC72F+
rdPL/V87AW+XU/TUAxLk7L5jGJbXDdjrbifzmWA+r7aPamb3AOZC8ewnZiQ4
F+5tM/GuB9ynMqlOfkqC9xOKrbhJPSBXI7L3nTUJXl2zcjjY1wU2U1rm9tuR
4J3UMbr61x0AfN/YkHHE85nLXZAZbgX+Cnz7rVxIUJ2JNkrqfhMYDtVkz/Ag
QRv71PmpxlrAPe92ftyHBN39P4UGfC0BZoQiSB9Igkoq6V8mxzJAmfvcTUgh
QaoVM6YeGUNA9e6oqU0Ejn+Ezf6uS0NX+IBDTgwJbnb+Ez7DVYIinz8Nmk7A
9c7c+R1uUovmmhNTGFJJsHdwYFLLqQmdY+4tUcokwQbZZrb6a23I1ni3zf41
CTLKO7q/D+5EDaVCk/lvSHBVU+uylFAPOkR759tcEQk2nVbLesPYh7Rv+VOx
lJPgLsMVmRypfpSSWcWkWk2C434TlWKx/Wj5x8LpV/UkeC72Rt8fkX4krswm
XdREgrmDn/gf/elFrlGXr31uI8G2mNR0i0M9qPvLC4MT3SRobLXwKNq4E7FK
ZD2/1k+CZtoxc+/Z2tADnxFvt3ck6G+p891Dtgnlj9HElY2RICXKxMCrvwYp
2Bs1cM6RYMJxbdYs7lQU2BH27sYnEoSqhQLxavZglK3pi9cCxuv69UoiSzbg
ffx9u2oF6+UqwvdZtgyYV/EcXl0jwfR+mpCjevWg4oAGz6kfJPj59kv5qZvN
gFrPhai9jf3mHpF+a7sNqOUWKPv/IcEITbnslf1dIHpn5nb9HjI8xsxF0n/a
A+avHLZYpyXDtbFyrSHuPiAcL+t6+iAZHqVfXlpg6gd2y0/C9Y6QoWu4Q2+9
cj9okonPCmYkQ+Nyt7qpyj5wOLCrqomVDN8+WfI+Y9kLdKe3e36yk2GKntJg
Cz6f0oTPzp3jJkO6t/bV6wMd4JuT7oY+HxmKPq16NhLXCiR7ffaFn8H1I/Q1
JT83AnfOihPtQmSoXXSB6iWlBrDVs8ALJDJkCHjKoHQyHRgduXTTSJIMqVid
Dxz/eR0U6NuYRMuSob0Iv+qrT6loqyD9ZTckwxwjkeMzLUXo4r+hwH9KZGh1
azPrwb8qFKxOnUJUJUM1+R+vu8sb0HiyWInpNYxnr9oLo+/NiG/NoC3+Bhme
SsyRFExsQ08hZaL/FhmCf89/0OR3oEoKWtmrR4YvaPdMkpm70N4Pq/8k9Mlw
uUlm8cpAF7ouxsVkbkiGvHtF19jfd6EYt2unU0zI8KnYOGfuxS70cdBJatiM
DH00z8jtpe1EIqfy1egsMR9+o2lakXZkbz11X/Y5GXqfvU8t1NuCmpsOPrey
w/wYrN5LbDYi0fVJzbuOZDhpZykEP9WhJN48gooLGVKbrhx7q1uB7F2vrnP7
kGHtorGHQUoa+vL25NChADJcUBd2NlV2QzffLxf9CibD6Z8vjnbYhIOGI7Wh
H8PIEOrIx0qLZQMR+cBn/VFkuG3kPqY9XwTiLe7eqIkjQ8tLu8/PRFUAukRh
sewkMvySIRr5J7wWvOjZZQhPI8P+JafiMIMG8PF3z5pzFhnO/jj2V5emCWgI
JQ6Y5ZKh+lGq6vHzzaBez6JQuwDrO1smmorfc0L+chTFYjJ8TqqgU9nbAmKq
DluJlJPhZeLawp23zWDf4ow6ezUZFg6W9ap9aALP2Qou7Ksnw/3tueVXUxrB
3GXno+uN2I8NlvzyK/i9anf9v5lWMtTj+fVoeqYG1GRx9Xd2Yj+pSNnQEiqA
4OhqQVkvGQoq2Ez/pisGe8khT4NGyFDFn832inQ8sDK+f/3lBPYvscPiUJAV
mA2/IPJwBq/35ZscjAxDV5v/Hb7xAevZGy909UIGqlzv/yb7mQzNFXpTlLQL
0OlTKb2Ci2SodM5iawuVoPAbVm+Yv5GhTZ9n3XBVBaJyg0FU38lQnv/crVGq
GvS0kMFiZZMMOy6z/vnnVoem38+pjW+RYYH++UtOFxBSPVok3LJLhl2ng72M
qRpQubwbfSGVOOQrD2TvXEeI/+mNlXgacUh9kvti436EQhN5e3zoxOHW8Z9O
4HId+tvzPe85vTjcoft4+2tdNTLfbQy4zyAOuVyYNwivKtCEUNiTq8zisPy0
kv/x+BKkfMfwqgSbOIzTVJY7Z1SASv0JQnwc4tBY3CPAqDYDBS8OLe3wiUMq
yqcojQBqsMuW3vXljDjseBv7uJsvEjxWeZ47JCQOGc/Z9yXOZIBRu4v+9RfE
If1tyUPS6QVAKZvJLJcoDrsm/ELMB0tA8ehH1SgJcTj2YG+r2mAF4N5XetZd
RhyObIQdmZaoAYFkzwNPgTjU1eJOr/mvDuwYay3evigOw40Hthe+ImAawd95
6TLuvzFosMe/AQw3b+aIXRWH+xdEbsuXNwDFjRZfTnVxuN33KVPHrgG8PRX5
6MBNcVj8bdH2YwICHJoPVX5oi8NxnnQzVec64O9GFvygJw6XUkZ93iVVg1+F
tHS9+uLwu3NuFfXRCmA8N/K10lAcJuXee5j6sRgMHc1qzzARh3N5nJtdZvkA
gBfZFDOsz9CZwi2YBtiTWE0fWeO83ZKX55IjEj+T0J/zQhy6Vp9gU19OQpqF
vJKLDuLQt8h2e5UzDz2Vyk456yIOg59rDrEcK0EBTcIHzDzEocm6kuBV9kqU
c7X4Wa6PODQAqvxFPrWoZVhicilAHIoUjCn6czaguXt1ikIUcdhr4XqpJagR
7X5RzHsSIQ79pxwVlvybEJtVB1N+DJ6PCdcvoyPNiLR9zWklQRz+HVHzesPc
jDTc330STsXzDpdufZzYhCwO3b5mkSkOr8rZ9+jlNSL/iNmyN6+xfsunlzSU
GlAWpzHX6htx+Lby1hW++VrUlLXoLVIsDg9dkjmj7VCJZi9Y/ve0XBzev9CS
88KiBO1Ubuq8rcb+Y0CXCirzEKuiQ8N/9eLQc3LEq68gGalreYVatYvDjPE7
RJXuUGA+c3CnsBvje2AmzHciE/iaUAy/94tDyemJ760GhSDjP5ZusWFxaJol
8OtOZxlosI8nWo+LQ6nqUyqCGdVgeg9vQvG0OGzM9c+lvKsH2/5ZNBtz4lCA
labdm7sRsDILWxA/i8NfSUKSDY+bACGxaOT5ojjUG/klVKXQDK6flpAv/SYO
8S/z38j0ZmD2tjZr87s45OkduKUX3Ay8JRWPkn+KQxXn42hmbzNIb2y3s93B
+qTvbSulawINV67Nlf0Vh3aqH2zoMxrA9LshlZ/UEnA00qXsT30d2LqrWyS+
XwKKRGz1VgVVAeYvMyfsDknAv5+8uMf7S4GopZF7xVEJOPcxbMtC5S24trWw
9ItJAsKCqy8LdTOA98HNGnsOnD/T8TDjzTOUFv6Sv4pHAlaO3N635heH6jn+
BW7zS8Ct1ldcPwey0WSm5w+ps7g/Q13YRHch+iVyUN/hvAQsJTiSdS+UIebK
kLZqMQkY/IaKT26nEokqsFz4TZaAEXrmthVstUitKy5aRloCzp7092d3qkeP
bvJQOclLwAGNRkHHww3IczrzUa2iBGy6OT7pY9+AUh4KDe4qS0CuT9/OJrs0
oNrVQim5q7h+ImUtWqABTdiJp71Sl4A5Dc0lrO/r0U+q2oP1NyWgSqCdu3Jn
LWL0V3j+V0cCZr86L1N3shqJMLVPyd+VgFfSHY+kLpejKwlqSi4GEnCaItta
oFGCTASG8pGxBEzoTHfZ6ihA7gU6LFSPJaC0E0OpgUcWqmkw/OL6TAKu0Wzm
z/N7o3HVheuNthKQ4hW6nUf7AmwOWVTscZCAgWMT3X6qkYDh7ga3orMEZDBU
4BPZTAXCn+193d0l4LhiwXCuZw54ci25zsFbAloy8KsLTbwBuWWt69b+EpD3
UyXrCcEisMi5cuZJsAR0rz//0XqlGAh6M94zCpOAQZ1LaS6kUmC6Khl2J0oC
ht5vf6/9txRkad9vvxknAensxeaEr5aBT/Veu1eTJCCJeoifn7sM8J3JF1NK
w/zOPFE74lYKDEOGTGSzsF/EduhOOZSAlF9b8aRcCWjGeSksm6UYvL/PPShc
IAF3jaFhIv5euDou7RMoloAp+9XJiUP54J6ouQxnOfbHt6v9ua9yQEJMmBVL
Nc53mv738EM6YH/8fpK2CfMNPwqCEiPA7UFahr+t2G/CLB4vb3iDGCnhSz87
JSBVp67nkUgDMJaq6bDai/25Y5fH3PESsR58+fbLoAS0eiDSzWMViG5ZJ3+a
HcF6Fl3PL2WLRBGTrSfGJiRgR3mdEGEzDg0prlzvn5GAGqZRy6+Kk9GxPEbP
9g8S0Cn9r9FEairSYJKqQp8xHvFFKfOBNBTseH+1YhHPj4ly7dfDdNT70Yuv
8JsEVHrwhaPSNB3Rq+Xr5nyXgNUpPX+HZtPQ1dKhoJQfEvDF4QfXP4ylIn+O
7aaYbQmoGWka99QwBXV6cm9R/uB63jZH+ngSEd23S+f99khChhcT31aXYtDl
W+aGbrSSsPZqMU2KWgTyrguLfnlAEo4nNbT+eh+MWgWqep4dloSPBjv/2P/x
RDTB7/eYHZOEKZNDeW88X6CLP2klDFkkoWsL7SJ9pjpy1xc21zshCQ0spYda
bpmBhjbNVE1OSahRHvdw8b4T+CfycvQKryRsoKyTu1I9gXx08qGLAnj9N6tw
gSY/4PSvFcqcxTHLG563z4NAjemKLfG8JIScpDa2zBCw08+YJyQmCakCLh1K
FaQAKUmpOT4yXq95/fpJlxBgn3KfhUMK45MVZ5FWCAIVdN5XmOUkIWWA9xxX
mR/4aZXvQq+A+QvRWu+l9gLkiaFSmksYvzT/o+kCZ2CjsL24q4Jj3e//WMee
gfVjylrfNHD8IPvh7t6HSMzB3O+zFsaj9PJ+8IGXyGo+rH5GF/N5dd5wPdwD
vb1StTFyF8eBZ/edJvqj1eL3gn0GkrDyPO2JXBYKOn9yn36bMd6/5aQanRmG
zD2Ew+sfSULfGmZD0dIIlLes2VFujvH+2ulWF41CSzdf/imwwuv1H0mTDkej
s7XJhGwbvJ4YMtiqGI0e8beZJttjPlF3Gcp7o1BW4EpCtJMkjPk8muj1NhJ9
3mQcCnHFePa45mmthqMX1QGMNp6SkGfpR+qH1FC0z5Xmpq6vJNRtupIunBqE
oi69CpcNxHx/O3vOsfqg04d+vuOhYL2FdkK3Y1xQ+cBTZtoIrPerN176lZbo
ctRXrcVonF8aV04mCYBHvBMjRcnYP71fP1spuIGtLzdYo9IlYYfXbXdPHz/g
m9+l7ZAtCQN1KYsz5RTAZn0xWj8P++NxmQyLcQR4LVE7pvhWEgrjv4VURAPp
PyS2MyWS0PjX9OjP5DjQ1fRG91AFnm/pqtfMkUSg53s69r9qSbhidyplZCsJ
LF1LnnhXLwkT9mwFj55LAQ5MbOyVTZLQfTaaRpKSAg5OUPQS2iRh+eAZp5y8
FBCXdCDetUsSprGu8PW8SgFCxu5Txn243y2H/WV0KaD27O+TqkP4+4DeNUHJ
SUDtv+d3z49KwvzRsEr2twlgunQl4dgk1mto8Tn5ahwwd3g482NGEkrykhuL
XaPBLpjlnPyA55ETMYjuRYBAWh39+s+ScE3g/R2f7xTwhqLy3vubJBzgK/7+
dNsdrGYJfTj+RxLOsW2wlMbaI2fzDN5dKinourH8I7zRAx0hcBrO0UjBNRN7
x6Fpf5T0KzKthU4KMvwKC91uoqALdUc+5tBLQfvqU7fNh8JRg7sPXxCDFBRN
1aZWCo1CGipUxs+YpaCV7/21nc0YNHf4ZcYtNik492h9/TY+r6zeff8kxSEF
c245HC3xSUBUsWYCXDx4/QXWjX2vExFF/+NDan4puPs0uIVdKwnx8N/N+nJG
Cg7EFsp7eiehosXhL11CUjDwnsyPApCEFN9eO/P2ghSkq515M+WaiIZs2kzD
iVJwM0g1h/1aAjKUBjl2Eng9w3CS8us4tP6vYuGOjBTM8LQ+/i0+Brm3ip6F
QAqytXpygfNRiDHg9WP+i1JQZXhj9ZdJOErTOJVLdxnzex24K6VFQUTW+KWV
Kzj/c115nNoftUwxCQ1el4JUuo8dj2+5I63UwCdlmljPPydCtlXtkI2w88or
PZz/GnfXbP8dQLP+U9hQH/M1FTEfzrUFERWWFsqGUrBDMuLW2ePugP/Vwptz
Jng/476+GTo/UKb4YPWIGe7vuei/HhwClOkmRTYspODwmEXaVnsYGO3VtBx7
JgUpqWGbFg6RwCS8+22NrRSM+TmkWDYcDX7qKq0lv8T1b2blCPTFArK9ddX4
Kymo+7c4ocEpHthEp7gfc8f9upeaxXITQGl539Ur3lJwa5Z2ZvVGItgY2WX2
8Mf6x/vcGniWCAg/zs3WBEvBwpMjZscOJgJr5tvZm2HYL19jllQ5E0AR0cfq
fLQUXLijc9ewMA6saZZJmcTj9a5Eu1ddMeCC9Ufq5GQpaGBg9GDSJgo8DT3W
M5aO/bTxuPxNdTh4UwgiGXIwHslQm80cCljpt9BXzZeCKf57K2wT/IHQf/Fn
3Avx/uqaiWYbD2B2pGutuhSvv3pB3XTbDiyqnfYQrsN67y+uOlqkhwTNtdQe
NuL17Qu37g/YokcB7ixJrRjPoS2TczLuKDu3cHa0E/vR0Gkn7rwf+tI5m320
D+dt/T5YpoQggUX6ZypD2P+ftYOra8KQMZ2MtNso9vO1kIfTapEo/czjvdWT
eD7mwV2r9tFoXjm6Z31WCt69HlkvLBGLeE1aI4U+Yv0Mw06MuMYhA68NfeOv
UrCUqnZE9kY8SsngFUxcloL0d+4fH82MR++b1b+P/IfzIt5kMed4xPXxVfWR
TSmodNHm3q+pOKRPne9xeUsKqm262840xaJE3kk1110pqFXmdjJEMgZNQzrW
KippKJldfz1CKQqdNBB//51GGsa8dl64sBaO9FyMc84dkIYpee8vSCmHorik
sGdGh6WhffnJUx8yA9FEXYN0wjEcUxe4J132Rmwzq3tHWKQhFRKeEud0Qbq7
HL2H2aUhD7TKayE8Q6PSL++7nJKGrjVeLqHsJoBFL1uw8rQ0NEjfuRc2bw+0
Xo58XzuHY59jNWEnPEB4zN6asxdwPWGPWgtDPzBUIeZpSMT1FLPP/xINAcfG
7l+Ll8D17hBem4mHAY2fQazDMtLQSuWJjLJrBKCw1L6nh9JwoOhM6rx5FOgn
LeVcUpKGW+EHnrdsRoMjWmzWzip4/T/NL8KMseD6c2WZCjVpSFG6oirYGAuC
wmxo1jSkoW+aoEfEv1jQU5TWK3gL69FTfp27NxYcGhyIenAb76enOQCFYsGV
tb/34+5JQ3jkSLMwZwzwO3r+7LsH0vDTIuVPV3YU6BC5s37IRBoW/vSpSxiM
APuv+9UomUlDjfM8c9lpYUDZosLz1VO8v7nT4B4/BXgHfr5Wbo3nEUVYW2vy
B615TMf/e4H5C3z9WdPtCWi6FebOOErDtc4H/4q3nYDSkuVrAxdp2DCbvd3V
ZgmaBHtkhnywfm484bUxDxH/mfjBpgBpKOrzNNKI0Q55C5iZloTgfhU3a5Ve
uaEFPqk/6eHSkO2USAizsA9SPUUXHhGN+UkEGsS6BqJcnjFBr3hpONwomZtV
QkH03Fn1tsnSUNbl6zGJr2HoKaetlkm6NGQ+xHeF9V0EGjiptKSdjfHU5NtZ
WEUhAjuT6+U8aajl3f7NvSoaRbDNs0i+xfzs5GI6X8egn6xFeYIleF5LwH1J
LhbpsrgqnKjA+TSzE73PY1E1k/rYgRrMVyA1Pe5KLOJg5LLYqcd+SYt1a2mK
Qc4M36iXm6Tho8Pfcqhno9H7I7UxU214fuaSvZrJUQgeDhDp6cLzQ89FNg5G
orRDei21fdKw4xuDie7pcERz8KzemyHsp/ywhNNbFGRCt/Vf4ijW75bQVymG
INSxr90reBLju50ReaDeB52jjTrpMov5RdkkCx92R6t7SJcNvuB45llmVIQp
0qDaO6OxhPcHWpwJpj4Liv8OWius4phO2uVUkxmw/W2ZdOonXm9CLXd93R2M
bsuTmHawP9Kbnr2s9AWSW4e79v6VhgykR3kG/MEg7uf0/c09MlDjwvH0HEoo
2N3M+/GJVgbqpi4LcvaFA/0Nh4CRAzKQwX1CaL0xEjR8V+VtOywDnQjXDcON
o8GpNbaK8mMy0GpqwyHwbQzwWP2qls0iA1cGs/mSE2PBp5Xy+egTMlBl9cHv
wXNxQHnZy96XE8epimc8tOJAzqLWkZe8uJ5fzabdiThwcIEv47GADLzrpK7+
4WUsMP+yLqV3VgbmVLzIN7KLAX2fGvuvnJeB/Nd7YlhZooHoR8pDGTHcr4re
yE0nEoR+uP9biIzrG1n9DlUKB+vvRUI5pGTg9MKL6JCPFKA1++f0YTkZfN9j
pTvsEAjYpuI1V5VkoGvgh1clwa7AYcJsYVZFBs6lRNQvS9uA6TEp5341nH9w
cShh5A5IHh57XaglA2GD26Wry88R1bsskKorA0UneVZkglyR4aDtSOhdGUjR
NtpOWvZGLf1KT9wNZCDPpKGF3K9AdLqPac9zY7y/9Zvfp6uhyLdnPsroEcbz
0GVAZSocLXUVCWuZy8DK+j1tj7ijkFqna5OSFe4/6FP190gMKmhX1yXbyMCU
XNVI6rRYxNDGtSpgLwPtdWBv52Acsm755sHqJAMN/I5znYiNR8NNtSf2u+J+
KdYHlTbjEbkx4O0vD1zPfjFD8kM8Uj7B0Cfri/vn5d3LVY9H2s8iVtwC8bzf
ZTGMycUh0062Q+0UGbjl/Num7G0MsudNPEsfKQN9oy9zuOVFId+XvCo3YjGe
+ylTWVIRKHYw0yQqEfthJVk83zgU5Z495zWVivHQ5W5zWgeiareCdJ4s3J+X
1k7c3wt1TxCaHuZi/+WYLnUbOqFpsYq53AKs/90tmClohv58QJzkCqynhS3r
P3FrcERaSdahRgay6TfuN+51BVxhHXoIYX8Q/XIXxX3BhSW1lzQtWG81BtoN
YgiAioPRqh0ysIMu55zKYBi4EXerPLhHBjI3qZq0F0UCw/WJ4XcDGJ/rj08e
52OA9RX9DbYRGUj//GD4E8k44JE2f0x/AvOb/eju0hEPInZMRNNncD+7OUg1
mgAyNJevL3zA/nvIuep/JxGU5VpanP+C8alUDQtpJ4I26s0A6yWs7zxvj3Vr
AhjTs8+tWJWBC3MZj63z4sFC8W7H7jquz3o2sIY+DmwddPuq8EsGJshmFGqs
RYMDRrT7fH7LQLrhr/sp9yMBe40ff88/XK9IM/GESRg4x3Tk4jEaWYyPxxbw
BQO1ZlbXeHpZyNPP71iu7wzunYxPmmOQhVR8dZ8mCs3B0+fcdQIsOOZ4/8x+
EKAQPsGdt5yy0KDooOr7M24oxTGf7QcvrldCrNo76osK34lKSJ/G8TN/1pf7
KKhRqOyWyzlZyBD7n/ygVjga8pCyaRGRha6PlSG/chT6OFUXdoAoCzXsbZss
e2LQJlGx6LoE7vfLlbcd3x9oAtv6w2VkoSDj1dteZgmI5dOV1XEgC9k4OP48
eZaITsv203MpycLx+d29tcuJSDzippCRiiz0LHEoUR5LRJdXxlRz1GThXeWm
g89IiUhX6e6jbxo4Zi17S9yXgB4nzHkTbslC46TOnaOacchh0zjT7rYsNB+e
ufeHOwb5qy02196ThUqFXU3XHCJRfIbF/B5DrBfT1HcfizCUv/ud6rKJLBTV
Pan2jCEY1Wq94A40w/HOK3rbMm80S+Nyl/U55qvG/SjA5QlavbvX8Y4d5vdH
mm27Qwn8K/WJTXHE+a0D+sIz1oDhMH3lZxec/y0fVnbPDfA8pIye85SFHY+f
pTNt+AKxOuYflr6yMCNNV/8YLQUossQylQXKwpYySkIaDAeaFpyEHQrWY8Mj
ToQzChi1pmqASFlYatenHRcUA9oc7B2sYmWhFa9Z+4hzHBAUVc9ITZSFdEOU
Q0d+xAP/zwJ9Q6l4fnb0n+WXEsBK3O6vvVmyUHft4ecCvURwXeMdLzkXx3ff
ja0rJYJC2tyrJgWy8JE7teHG6wTAWONqG10sCysN1Tc/BeL7upVOckc5xsNU
f0dmIxaMCoh0blfjvPbI+YhP0UByimbjHJLF9wfVq7H///8JlCmOu82ycGBr
V22KEgZ2LxUrB7Vjf4wfW1PuDAb6v32t6ruxPixvRRwWfUBD4f24//ox3mnV
Hqs0V+B58vDqjXGcH5f/yemnDL4MfDzuMS0LoY4n3dKBx0jFu1qhdA7rXckf
6xXkiHJlQp98/oTzsXwennu8EP1300jWRVm4QJw7uTsYgJ5myaPL32RhYW+g
1hp9KBq4w7Jo/10Wxgxoj67MhiPCsRXG3B9Yz8MJg6uaUSiyrUl2ahvrXXDy
YYN+DNpyjDWh/4v9M72z/8ROLNITs6LIUcvBYf3RS+Vc8aj2i3L1031yMKfX
J+RJB74/J3B+Sj4oB50MeBnO/4hHrjc2Dw8ekYNbXe6r9Pi+Pb+vW4KaSQ4q
hYyESk7GIaXa1AfE43Jwxe+r11JMLMp6Zh9gfFIOjq//s9L+Go3ozqiXRXLL
QUocX1tQbyQymxZ438YnB43br2rduxWOekJ36bbOyEGVdcvM0/4UJHL5HeGs
sByc2/38SP+7P6Lsvr6rJ4rxCQdvzt/zROtFrt4BJFzPM9TQ7T8HVMEhMvlN
Vg5SiTaNsTVKAfYhGhpuBTkI7869fF5sCZx8ps5rXJKDrmdd/eyrX4FZ2WId
N1U5OHBu/SuHmxeA675uxdfkoFWdr7teTQBIy76f9/EGjvfxEYorKYDmnvgI
szbGk8v4Ou9SODBhPPzvkp4c1HUuuXcWvx872j8K2unj+vyac3euRYNzr6o1
cwwx/3TuOnJlDAgkhDpNmMhBurpXTs/KYsHqV9Osg0/kIFvQm6hMhTigkSg/
IGMpBzV47528fCcOFGuy7Jg/x3yCSxeyqOMAM90KX5Idjj8+0V6SigUv6pqu
9TtiPdSYc//QxIAJ61g7Klc5KDpvY+L2OArIClqlinnKQcHJ1oslTyNA0oxy
t6Ev5hvTevcmZxigCuf8ER4oB+0zfc/R/QsGhiqbXK0UzDdM75Gagh9o+dOl
8jMC5431yozYPcDpklTrM7G4v1rC47NXXoIlTvU2v1QcH/t9fHpKAlkWt9Va
Z2K9jdJKlv49QZvK8iV3XuP85Mx35osOyH6q7LXSm//z0eU2p/dAfyzPp5wv
wvNbzvZIyvVF7jSZUaxlcnCtdirD72sQ2hfLEfSvUg4mwIJNDt1QFHA+wmOh
FvNzZQ/uexmOGJoOOQw2yMHdnn8fb9+IRJHaHlbVLXKQJrNh8854FGJf3jFJ
75CDLZVu92IPxKAkF+t7gT1ykONw47XDH2IQH/PSTdsBOfgpVu/g2p1YlJPz
4Ir+sBw0z6i/V2Mfi4TlJuDlcTwP6JP7//do0aCGhOg0nleRlolSTAwSN+k4
f2IO65WyChSTolHNDuCn/oTn8dJiOUUN369DKtiXv2I/mDadP5wTgVr4Lhwb
XsbrXx/kuFsehlQrs/bX/ScHF5aulTo5U1CfGtffzA3sr2NJdzsZApHmh8jN
4F9Yz10u5d0qb3T3oNcHg39ysGGo8vUFyRdoLml3THWvPKRi3BHNozJGD4k2
fYT9OI5oVXh14CJ4eteohuaoPDRYEXB58ckBbKxNFn1jxPmCirkwLQ9g76WZ
M8oqD+dOSDcG/OcLdk90JSF2ecjT21KpKBIM3AoUInO45KFVdsd/6c6hYN/F
qoDQU/LQNXhBxjwzHPiPibo7nJaHKdEKt7w9IsFR8xx7o3N4fd54FQ1jNIig
4rFUE8H1pac6mK7GALbI6IdkgjyMkd4M3ncuFiSePXqXS1wetpxNE3+SFwtO
1Xtr7peWh1sGD+8y4fdkluZflTU5eSgrIZHGHRwLhL7aggkFeUgftCfx72oM
KHT8Rm66JA8ffdk/7vQ9GpAYHgrnqcrDiNuVItUxUaAqY/pUxDV5uPtQs+bs
YgSQl9I68eqGPGyoyPjlsxAGmnq7j5rcwv0yh873JVLAZcOL+9Rvy8PK7D1k
uVOBoOdn9a7EPYxXLiLtfrQ3uBFA2OB5IA/X3ind0H/rCka5cxcPPJSHMJDP
IoDKFrxXiR2dMsf1L3D0z6VqIuMZht4WK6zP5r/vLSHP0MIz3+Y3Nli/kFul
N6AzWo+zK3RxwvWoUrWCOAKQ3YX/sh654n5C4WmHVClot9kk8YYnnleT2NxU
exhy1Z0Nl/aVhzlJNLZbVJGI9tstf75Aecgw/LYgbTkK+bv1utJTcH3JQA4p
1xh0hPWS3Y9weaiLJlS0KmNReG6txWw0xvvuqORYcBxiAyTj9ngc2xy7fIQq
Hqmdf/CRJgX3u37rJqKNRy4ngw0VM+Rh4Zi6ZjslDhUfqPngkoP91MR47Q6+
v3/59dWgLl8eUojx/T1yMYj9C/PcTiHmk3Q23ONRFLo+rHBfsgzju85Nt3Y2
Ark3PZ21rcL11sozngeEorLC+HsldfJQo8/gu59oEFpI6phea8R+WempCKz2
RhxBP+6ItGF8iTpHX6a7IM/H6nqv+zC/8fz5DzaKqFLHaeLLEPbrpXp9Xp3H
YPnSa13+MXk4oF/wQNjJEWie2quT/F4e+kY8pVBaAoA3g+jo9Efsj8rfpvwM
oaDq791b7AvycKX6vErN93CwsuI3rLMiDznkZVxNX0YBnqnym5Fr8pBm5bwl
T3wM0Or8ODS0if2Y9ZyuSC0O+FYwaDJsYzxOUQJzXvGgNlNu8NofeViqHp0U
DhPAf+FmGgF7AEx4UXdqyT4BnHKP7u+gBXDgeT1J7XwC0LZqub7vIIA55ukk
G31839H/3nvxCI7veUdZHo0D9Wpc19wYAQxseBwSdSkGrEtf7alnBZCOp0rR
iS4KCJy1v7rLDqCol87E6INwoHs8s0uKG+8v5xo1ukcBgbRDqnZ8ABooiP90
OOYPGjb+dpSeAVDjUEj+jS/uYOODkMq6EIANFj++OJS9AHr1XsoWJBzbjrEV
ER6g4Pzi1lxJAOGUltOWpD1qinuvtCALYIqxz+JouQf66UvfIqCA10+fpd7+
6Y/O2kldNLqE4yXuXfoZCrr70KQpRRVAqydHA6nWwhHlZrjC7DW8n3OQqTsz
CrUoNDSc1MTxHu/3+d/x/eTCN3BbG8A59726HzvikDAXO4rSw3GHp8/wqQR0
n/6y/LA+gJWRLwxFthNQ2M7zumNGAPIohV/YuJyI2hZSZNVNARy/fmFP9OFE
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
5H9V7baI
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"\[Delta]\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Delta]\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6271490562013645`*^9, 3.6271492165895357`*^9, 3.6271493304175963`*^9, {
   3.627149400409367*^9, 3.6271494226530137`*^9}, {3.6271499883259983`*^9, 
   3.6271499919484196`*^9}, {3.6271500513060813`*^9, 3.627150054844446*^9}, {
   3.6271500946780634`*^9, 3.627150106560003*^9}, {3.627150141668462*^9, 
   3.6271501602118545`*^9}, {3.627150199728259*^9, 3.627150235100894*^9}, 
   3.6271503782575536`*^9, 3.6271504406322317`*^9, 3.627150560524344*^9, {
   3.6271507143231134`*^9, 3.627150719522588*^9}, 3.6271508398619986`*^9, {
   3.627150891190296*^9, 3.627150916278062*^9}, {3.627150947520938*^9, 
   3.627150963654719*^9}, {3.627150996003335*^9, 3.6271512160710773`*^9}, {
   3.6271555519616723`*^9, 3.6271555620974455`*^9}, {3.627156394921487*^9, 
   3.6271564086396494`*^9}, {3.6271924982724266`*^9, 3.6271925666721315`*^9}, 
   3.627192880282686*^9, 3.6271929716377306`*^9, {3.6271930077038307`*^9, 
   3.627193015117784*^9}, {3.6271932383499494`*^9, 3.627193272029454*^9}, {
   3.6271933398267574`*^9, 3.627193346542245*^9}, {3.6271934119212866`*^9, 
   3.627193475963077*^9}, {3.6271954315448065`*^9, 3.6271954360988493`*^9}, {
   3.627197307416922*^9, 3.6271973242881975`*^9}, 3.6271973622095366`*^9, 
   3.6271973985718327`*^9, 3.62719749643923*^9, 3.6271975334369497`*^9, {
   3.6271975994800835`*^9, 3.6271976198887177`*^9}, 3.6271976557056503`*^9, 
   3.627197720084672*^9, 3.6271977545597086`*^9, {3.6271978528443794`*^9, 
   3.6271979455203085`*^9}, 3.627198007020403*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJw0V3c41+/3tjMzSuijEBIaJBRxTkah7JGRvUfZe2+iQaQiLSkpRWQU77fs
vfcWskdGyujn+8fv9c9z3df9ej3P9byu+9znPjwWzlrWZCQkJKl0JCT/W588
/t9TDP+/LjqEiPKxlEDC/PXnZBHFIO6/P9WyuAQ4bxQ25ukXw7ck8icyj77C
meOWTu4cxfCqnblEsOAbtPn5CcjUFIHrwz/RBgfLoEZo5IayZRHEqPHFaxQR
QJ37ADnjUiGEz6Vod8yUg12/9e+ywS/geOqIN+fxCvC3cXiVIfcFxMTY/MWj
KoH0qLvu6ecF0On0PuQkbTXk3ct2/vY7H3oyRiep82pgnd0is+5qPvTfO3mm
JbAOagXiJMbTP4Ov+r2GsJsNkLTudTVlNQ8U7xooC4Q2QSBL0H8e1/JgNmeV
QCxqAf/rB0k2snPhEMfShiBtGwSPvpeLPJgLgz7izKvK7fDAvsDhVswneDbl
FF6W2gFeXypPD9J8ArlLQUL3/nWCVfjfhlfiH0HvbX+5rWc3yLIMPLzmlwMm
5O+KVHZ64HJqk+buxAe4z99DLZXSB7o5xwye+HyA90MrzJLyAxCkrmN8X/ID
fE6e9pMjHYIRix6hXt4P0K0Vf/hG2zD4tA3Ez8l+gAQ2fs9yg1EQpOb2LI/9
APkqJqH92mPA4/giv44iB3weRbb91hsHu1q+mJmPOVB2Me4Fm+UP8PYcXva5
/RHOxrP0SvpMAIv9rP9z5U/AVZLKofdwEjgmBHxkJj5BBcPQiHPpFBCefbSZ
fpALzp2eSWELP2GrV9zizPU8OCYo0xRjNwv6fvyarsz5sG+wv9/78xyQVza6
S1IUQNDx78ev71sAke6/pyTJvoA0SZXQeN0S/GLOLd89WATMZ748vpy2DJxt
H2zneYuh5Rc8OKC/Ag5vdm55ny0BIcNzT/TZf0G8PzNdkMxXcOfxvXto6BfI
Xjz3pf/SN7i2VXtHLXMVqB+njty8WArMXa5TpB5rkFfiThAQKgMJTZl9Zy+v
A2N/jTILNQGMOORujnJuQL75dzGjDgK0PfW/v39zA9xfLv7LUSDCZrpAa2nP
b6ALdSTpeUCEWy0rpktfN0GCN+QYUzcR8mnIJDMy/sCpZYN3DrTlYPNrlnQo
4S/o0bka8YjsYcpY9ifhW+ChJUCWfrkcNp+a+gz4boNd+Fx1oGo5OH6Sqnzu
sQNqs9kSyQrl8LfGT3nGfRc4t/NGV4XL4ZvULG2+9z8IF1e2/UleDrQZTtP/
gASFr9Dt7DQS4e7gXLp1NQnanj7MQx1DhKc2Ee606qS4TRHtwyFBBG5yrcKF
PlIsG+WRZc4lQGjSw0s3N8iQ/m/iWSQrA/KbMsoWSeQYwzT07ChZKRwe2vy8
eY4CDzt51mr++QrmYv99FOmlwLvbbRfXFkrgOzdFHm0QJX5c37poPlUMVAyx
HtHHqXChZTCfbaYIqvnth9+0UaF3e3BM2nYhLBkHLDsF78OHqcXuNwQKIbqm
913PGWpUEqfsvOP8BTqZIxemx6mxgqTHjWWgAC5zlhm9eESD/PlunQbOBbDP
rA9INWmRbrL0j7xoAdw9SuZBTU+Hkkx/SSn5C4CNkK/5pY4OD1I6dtOoFcBf
q79ZNLfp8STLf1LDOQUQpjpdQ6LKgM6zjlUHlb/AKwmJoMcs+3Hz3TFV0SOF
YKmwD9v692OF2bjDQ6EiOFfNq/D6NSPatEr+9XIuBm0/N/3YC0yYKNAS2Dhd
ApZ9XLZxL5gw7ezOLe3Eb5Dawfu0h5YZ2YxzIu/alEHEiXaGm57M+Mctrtf+
DBH8E/jKXdVYcAayXWjUvkPFn37usW8sqOOr+qXNtgL4T0X8fXzyAKZQvpiy
DKuERcpxq6dPDyAns57L6qMqED0bWzPPeBAfeixufsyshuXZy99jww+i7EZY
+mBmDWTq/WD02jyIjTvNc1NJteC3j8vm8y1WPJGkfjvQqQ44bXn15KdYUeOj
PUmmYD2w0aWfFjA9hI3CF6Taa+uB5mPduGnfIXyJhsfXLzfA63yqzQUdNvS4
ccXy4YsGyD824t/WxoamUg7fJrobIDY6gZxWgx0//3OmrZlsgGNsrwsetrCj
ga7J/rmmBvjCftXYS4MDU07YPGm71wBct8yj3rRzIJWWhkHPyQaQ5ZJ6fkLv
MGp4dXpeeFMPp6Ku8232H8Y/wy1qrGT1sHywvvSg+X84rJ91y+JSHaiWPLwZ
OP0fnmF9u/XDvhYCp0UyRV05kRCYGkYSWgMSby8biW5xoglNg0difDX8UquN
Yz1wFMvZf9qtP64EC3KTS9vPj2KKSPx63NsK+JMmnnNWhAsvFVK+G638Ds9G
uV1LiFxYOPtchH29HPp6P8aoCHLj1SWdFQooh10rm5kxN2400Wt/Sf2WCCVr
sjW8pdzIN+v3ZOMcEWIDzikzUfOgYu4299Kef/Bz3rv8RpsHNQ56nBtOIkBs
Lbf89DMeVN91aK7aq7/HSv/c2ud5EFxee00cIsLqofoqK6ljGOWUs7wTsecn
/Yx/nsYcw7KLsySvjpWDqn7Wp4CeYzj/j6Hs+GI5SHraPPh3nBf5abLeFk58
h+BTT+35vXlxsdF30YKsEpw/LF9YqOHF85coMnjlqqDPR/Dq/AE+ZCtPrb8S
VQ1pU6ud3mZ8+Jb9YHHOUA0EjAYKim/x4evL+xZ5P9aDGjMbv50yP34qS55m
ONIIan4rk4KP+JF2LcDlZFQT/CeiZWMieRxPnpdZa2dvBY2j1593RB/HS8tN
mifzW4Ei7rbdYO9xTC9fFEq81Aah1s2lvkICeGHe6MrjsjaQvq9k9T5AABOu
fRPjEmyHzyF3ej1aBFBntCRWN7gdeK3PKHUcO4Gcz+msGwntwCdz5X6N1wn8
U9fQ5D/TDod+islpNpxAE+lfSw1b7RDGYZzjzC2IB84Xfk3daIeG17JrPF6C
6GeV+Vqxvx2CtWoO2TYKom+bnujLN+3gNH78gCyvEJJ7ufTuM2uH+kOxm6/9
hDCpv5xJibIdLFPcdp+2C2GB6RZV1uM2aIxuTOEXFkbwvNrZzdUGNK/Ngy9G
COPpmrT0uietkOktUzo+JIxLsusNuQyt8JDpeQb7+ZPIvRA71/i7GdaWDzQM
J55ErT5zvrdtTXA0s/uP+OJJVImU2uz62Ajl2sWHuVROoefn8QLOxw0wHGx0
LDXzFDKxa85RJdWD6xGXP+/IT6PF6vLRisw6cMu9YatufhpVJHSGKXpqYXOQ
4l8M4TSKm+D2lGAt2NVnMukfPYP0Y4XCra9qgGeI98W3wDP4YbvRwFCpBj4Z
EG2/DJ3B7H6R1IuHa2AxWtv+GJcITjfTWp3/rwae3Pgb81ldBOf1baNor9WA
zwulg3dDRPBFXlaZ2fsaWPUrCcnNFcGWLIU7nVK1EGQxIX/khwjK1Zetzq3V
wvm3wyOtB0VRS1G1m7unDk5dHllsuCyK4k7SU78G68Fboezkfl9RXJdbdTlA
2ggu/CsBKdmi+OBHCyFBpgkqgubnbYdF8aTwqYJ/cc0ADRInRhTOovQZ62sf
X7RCfYxwRZTPWTzn96T9hHobvJy2p/N+fxY9fgowfv/dBheWQu59Gj2LIlfW
WfketcPrmtVeMVYx5D15hEzwVAdwXTIxJ1URQ9ZA84L5zx1wSZQ1liNYDNN7
Ir0GBTtBN/34/YB8MfThZ1eviu+EqfCLiUKzYljFe2N3tL8TFM+URvJyn8Ov
Wx9Pj7F0wWiDpKyt3jmcJEl4tSnWBUKvx13X48/h5i4V87hMF4xZlJc3VZxD
iYaWsxMiXaCDzyqW/p7D2w+DZ9oZusCgiYbB6Kw4PvFVWafv7gRSy5OyjA7i
uJhgz+cV1wkVzG/o6F+Ko/V+NpabIp0QkrlJItEnjpfZDCXG6jpA6HRd+Gsm
CSyWutJ30KADAhKfx+mGSGAo5+ejV6336uu3edDDIgm8XfjSc3C6Deone5uO
rEhgppjhNp9zGzj/FuyYE5REaWn2EuOtVlgcMp4ksZRE4byTLx7db4U4Oh0N
4zRJZJ95P54j2gpU1HGqpN2SmLuppGH2vQXsKBl35hnP4/fEPOJruRYIOP3P
glvlPHrydNQ2/GyG+MgbNqkR57FZyVcgNr8ZVJ7pdxgTzuOVrLuHnrxrhqyn
0ma2f88jTQ1dRW59MxgfSsgvFL+AfFYSB10PtgDDrVVXNdcLCF+80yyjWqCq
9IWM8IcLaPPLOJGUsRXq1KfrVGcu4MrZkkdjjq1gEeEyXMAvhVYFRgwpPa0g
5kxpYmkhhTQukw2Re3qx0ahT1nsmhTr8Eg/LW9vgyYW/u/SHpbHkxUbHtfF2
EJaJ0W67Lo2Z5pcGBhw7oMljlnMwWRp5X+1PNl3pANkPaaWnOqXxB9+NdwHO
nXA+qzCxmuUiJr1cid8d7wS957dnMzUv4pTTZ4s5pS7INAjbbr5/EYNOeAmm
pHcBe+L1H7KtF9Gt4fxCwVgXWHB8fLzBKIPXHIetnJi64Wfcxb/r6jKodC+K
xkSwG+w7SCou3pdB+8fclUXC3TBgGJFa3yqDHcrnR2XYukEiLu7IM2bZvftc
Gbgy3wV6Hz1GirVk0WbrR3ZjdheQPZEOPpwkiyKsvII3rnfByCHuD8QuWXzd
Gz/HttIJ6wkXzr1nA9z+82z4uX8n/JQyJxkyAJzUWuij+NsBJuFPuLXTAENj
X4u8d+6ATz7dR6mZEadFWSY+qbdD/v0X69lnERVRKetneRt8dts84q6DuMrk
mjol1QbZkdNNxl6IC4smt5LLWkHOqfCc0yPEH6HD7B81WoF6UtQzvQSx4PS+
hzozLXBcafP52iCi27lrzIpGLVAYolRw6x/i/WKfVxHbzVDv3fSY/tglFE9Z
CjBua4Z7TCo8zQqXsP9hUMXMYDP4RtXQf7a9hL7bUuWr3C3gZ/2C6evtS5j7
bWVx6GkLkLLKD0x+uITeaQFXlQVbIeffEqdY2yWUfSVAIpveCk3He++9XLuE
ovtVL1QLt8EkecA/MXY5nHWt/SnS0gYTdG5qP6Xl8MFwHot4ZDuY93H4fTOV
w6PH+fUoVDrA7cPX1M/hclgaeL7alKMTVATPZlI3ymGOlv1XjqouEGa3Xw1c
lUPjtdupPFndwO9yMI/zP3m8UPD99ImwHjg0e+XGpJw8cnj+LOxX7oV+5mnD
Xoc9HLnxSfhvL0Rdj9xcT5TH7xUj5wPv9AEeLdeT/SqPXMwfW+t3+6DkdIht
7g95bPP4mtmm3A+NVjuzavQKuLs9nSbh2A8251jcD4krYEJ2nnWWWT/M2h5x
2meigK8cAtJIBfuh7yhBiCdaAWeXi4V1K/uAT19yx+KTAmZaH2Hed64P9N60
yjb2KeDEvpQXDX690Fz93eEGuSKycEiUJ6T1QJPWjPCBU4r4sO1Q+Y30bmi6
4WO7rKeIdUKajceiuuCzediltRBFZFYrePHGsBO2vf4c5spWxBnZfCZt3g6w
bzgb69qliFbn2cwo9vzKkePelfl/iniATknxx6dW+Pe2lu++0GWcb0nRMaFv
AeUu9wVj3ctIbtTpfHi0EQ4MdOnqhVzGaRlrg+z5evA8ITDpm30Zj2U8XC/H
OqhMt5uo7b6Myfu3Yt/N1IDS97da8mRXMOhw6tLMr2qwyNIanT51Bbmui08N
W1cDe7fOryKDK/jg0Mt7dsrV0Daa+iEv8gpylBy88uhFNQzzqdF25V5BuYuv
5N2dayAmnW/h6PAVNCyn8Kz6VAuHq94q3KNVQpKEjO80ZvUgTSckwC+phLVn
7EPjPBphXappfsRSCYt3b8c3jjdD68Q7OcJ9JUQuB6tbza1geoZfvKJUCbuu
sHUYKLfD04wckflZJbyn3OOs3NcBVzkXNqXYlXFWRJe5yKMLeg7fQDV3ZZwo
bGBiyOyFCGm7C6wvlPGn6NM7GQL98EptPp+qRRmlJ0u1EuMHQMb/Rz7vjjI+
CDFcdGgYBFGDh4tOwiroNjCe7jMwBCdNAj+MG6gglwpj/nr+MJCY1s1HxKhg
e+FHxcuaI/AwTIBau1AFM74Gc5/OHgGdOyeZr02poGK92WEKwghQVfZ8u8V6
Fbvu3XwwcHsEZvpNYooVruLcse+7r/ePwHpw06CQx1XcrUjsUb42DJmfys6V
v7qKdexMb95dGQLdy80y/h1XUXee3TqCahCKq3D+Ovk13L8Qz3Lifj8cyTfz
0RO7hgbc/a8UF3ohrNdD2svyGvK2EmnyBXrg2+gpiy8PruH9J2Rc4ipd4Dtc
5cZaeQ1pnRNqJMw6IPu2VtX9tWt40F2l9L5nG3gZvFLm41fFLs3QXd+TLXD5
4DJJg64qLkr853ggrQF6jlQxhkSpYvZ/ei8SNGohJd34NRSqolObVgC9aRUk
tr0S3jetigZkuqyJ/d/hqbfWn0RWNXQ7OjTO94sIonXFbLzyavj270Z+CwUB
nPZpu39xUUN6Yh650olSiLzzsO9quhpS6d8ZGDX8BtxOwktjDWrIbjYUu/Xy
G2Q7FJ73/qOGpaca5ftJymAKmUVoBdTR+vqcrLgkES7d8zV7rKOOboJ9a4+W
ymHkrHAkb5g6hj12kpbnroQkV/bXbz6qIy230T/x0mqgCwgR4B9Sx7+Utnzi
RXUQeXtrSZVSA2v8XjzjIW0CX7tAaipODQxs1OQ6Kd8KFfYFZ7+e1UCpk+9q
Yw+3w1r+f1NHzTTw81l7Ne3RLki7m1Xf7KWB4TUE6+GSHtAxYTAKuqOBUxm9
V+vD+kCG6Y3y6QwNjPt2zLfo9ADs0/lPZKREA51OvlPvKRiE92ujYQltGij5
uaeTgWkY1PiKohWnNXCQpOb4cYkREGdpVt/a1cBn2kJUW0yjcE34vy95rJoo
bFSiK2c7CooDBhaOJzWRDoWEWNNGYd+Tq6188pr47prAB92cUVC5XWM4bKCJ
WqQC6ZlPR8FatV05xUUTT6/42rs5jMI3pdfjatGayBeUe3KRdRRKmMx8KNI1
0ZtPM+GMwgjQHPnoX5i/hw+SUqryDgProxvRtg2a+Ok016fOlkHwH/a0Ozi+
t//hpLNWmgPwl+cjT9mmJj4yem5n86kP/gxGCtAc18Kdb/RLinv9nPkAu3X2
RS1kJVkNkdrzw4Q7p69c09bCi0wSuTfj28G3Kj0/PkQLY9WzqNKxGSj4jsSc
StHCB8FzPjkCDVAyI+XV8kELNaw2NjeMauHUqWPdbpVauD5Cc7l6rgqYE/Xb
2Aa08HN+a5XLjwqoucNnXraihal1TCwMqt/hyvSuug21Nt5rNDSXEikH4bSf
soxc2kjafJBtJYEIUsaCOUXi2hjkG00w9iBC2KMZaotr2ui199Pquonwn8WD
PFpLbeSaZ71wv6AcMhrpWfN8tdGA9b9EIdoKoDhmmHP9vjZWJuY5Xm2oBGV1
Jc6tTG2MqWVkll+ohv7+UL60Um187Lrb4GlRB5c1HhRJdWqjHRmN19f/9vz8
UO1696w2nj44+byMugXyVOR4XEl1kNygtuE0fRswMNY+p2HXwS2FaP3ItHbw
saZceX5aB+Nb+LyTT3aCyariE0lFHRxck9sq+twFCgnJfM1GOkg5XaT5VLAH
PrBcpbd200G67cHKm1G9wM+xWrgdo4MWZPrGW9/74MPbay7Jz3TQ95TZ7nhv
PxhObbUdKNLB11IiLkc6B6CPPufxg9Y9PufZafKHe/qlN00+OKOD2R+VDqUe
HgL3N6L2D0l1kSTrB0Oq6RAYRqY+YT+si+bBj9/7Wg1Btmdi+pOzulghn3jK
U2iPl74y899VXXSJ8X94N38QrNjLdlItdZHYtPPFe98gdF0M9T8coIuy1/N3
bAUHgEwt/ERK0h4eWOhr5umHp26kG8wfdFHjC7Fw/59eKM6/QhJXpYv9rIoK
0kU9sK+4OpZsWBffaLv4dtt1g2Glwi+fDV10LWUuunOwCzjrjglbCejh+ITu
uevh7UDqSTu61/Ux5+tlUUP9Nhg9F8Onoa+H9bslbyavtoLtRrhEjYseBk2l
9pfWNcMyRZooxOqhLs8Tvk3NJpiqes1Q9EIPzxbq3ZO+0AhX66RfiJbo4QRX
xq5VZAMI606+yW7XQx1nD0bFCw2w1PFfA/+cHooF3DGP02mAKEO+D8/Ir+PJ
ShSr6WgAK+WwNXbO6/j8Bd+boE+NYCv8SS/h3HXUCc5fNBtrghuBpc+pVa/j
mOEK7UfDFlikevItyPo61oirXzGJboXhf0/yVgOv41v+Xylnvdsg7kxTV3/O
deQIuMhf4t0Bd1LPx6jWXMcrRzlPlHvvzV/j3QzEketofNPpVaFTF1wrj8w9
u3kdJYLIk5fVuoGnNvvTayZ9HEzI8rJn64HmD/TnOAT1kaIt78kOoQfqQezq
nUv6GPzwIFeyfC+YKK7MkhrqY0W23XW19F4wpVNe8nLTR7qJmd9pTb2QwerI
PX9bH4vp7q2atPaClfEBKfNX+tj671XMz71+Hlhqv9b1VR8zCv4b+qfVC8Ey
agwqnfpYt49aYLCnB4BxTKN0Xh//DQWV71zogV8pVM/PUBrgxDQN37+gbnhM
xrT2/IgBqstfLzD70AX62qdMmSUM8GaxW552YyfsLnyjCVUzQOKVw59Df3RA
wrm+k8s2Bhgwf4yr/W87nCBtoTUNNsDjD3MaTu/5/xS7+1RTigF6C5X0KSm3
Aeum7t+LnwyQdGe73eReK/xXPObyvtYA0+NAmHaqBZ5Q2ptwjhngk4UHl3+s
NkM/SW1p/B8DLAtJaHyk2QzOFMIuO8yGqDXsdI+Gqhm0dOjwlpAh7nIdKTZi
bQaBC8o/h+UM8e33By2NIc2wuPSATd3IEGeGC2JSLrfAoAl/RJm7IW4VkR7e
FGkFTr7UuZPxhningqiZNNkKleJe3E8yDDEvmy6P/FsbRD1mZ6QqNcR1+YSH
TDntEH3avHK30xDrWHXOf/zYAb6+JQ4b84Z4LGbGKau0EyxUNaUXKIzQ/RSH
GH9rF4gQlYN/cBrh5+rTFrQj3bCbYR/dd84IQ58P3bkw3gOqlzNftlwzQn8F
B8WKtl4wkHp8sNrKCIsuNgwdzewDx4s/6EsDjLCwe27LVH8vj4PX8/wkI0w+
HLZjP94PZFbJVe/fG6Eo+QMFbhiA15xHtF9XGqEyJb9GosMAFJ/QJ08fNMKj
jhKLxywGQN5X3u/hmhG+uE1/7S3fANSpDqjdpb+BSW+JhSF5/dBNaXsoku8G
Wthukj1l6AfjhUQXv4s3sCDya6PvhT6wVf7IckvnBkYdD3XalOqFV+aRraZO
N5BdlE9SjL0HWDKHXqhH3MCxQ3eptXq7YILsRIZM2g0kGzvWYhDeCRsz/OxC
+TewNOwX8yZPB1wRLDNibbyBFQuc5VdL2+Bgzxb37NYNZHD7A6NHm2HfPFVi
5wFj9DOdE7TKbYB41d8pBGFj3Hg7MywSVQc8GfJ+2fLGGPw76sD5DzVQ+7nB
8JGRMf6XHnT61blqmCp3Eoly3+PZBXccTlTBqEd9lUecMQpMib/aSKgEj+tp
3yxfGWPT1nX6Cu9K+HksIVnrqzE6DLV6cAxVwvpdiW/YYYxPXQUdBsqr4G9R
RfKpOWNkIIm/bXmsBgpXLRLYyU0wrMAQwn7XQuvLXUnS/0xwlGHmRLVEA9gx
S1z4edYEP+7OyC+1N4FPpIhHvYoJ5t7LIxM0aYX0rYIDsX4mqNtHuSqb0gGs
FD6nrBNN8JSnvF3vlS6ILUjqh3cmGJwzs730uxuGHFWJHN9N8Nrd90zrab2g
zGsZvdpnglLPtqlDTvbDnVtPGppWTLDz2P27d9MG4NOrk/RZNKZomMrUXPZj
EPRcktIjeUyRevWbXOyfIaB0+5dhecEUrbNN7H26h8HgsSWNvKYpxparvzf2
GAEPrp5AXntTrO7ffzq8eQRa7OPCKEJNMTRBzLd7bAQ6tdlcJx+Z4pugnWma
D3v5nfJgfNUnU9R/9qHmvcgIVPwlMmfUmmL+L2uX887DsNs0px4yaooq+xuO
7b85BFeFP38x2DTFm26POJREBiH2dvYqG7UZ8pjer3Ij9sM/ki4T0oNmeEn7
4LTW8T5YTpoKahE2Q/6jSRWbT7rgeoHry3xJM3RsXhuSIXQANYXn3CN5M9Sr
Hego/NEGtRnHvc2MzHA3cXONOr8RsrbHRrxtzPA4q42lcGEdHBeVr7znaoal
BcvUGeQ18OJigcbbADMUP6UkRPa2EoTE9dPKo81w4XG/I3fud2gV/JE5kGiG
N04pBvcJlgPXnL3+xlMznL58+ETFYSL0ZgiEM2eZ4fli6q/TBwiQeUzg58l8
M3Q1e+L9br0M7K9ESSoRzPBpCZn+2gABGHJ/c1vWm6Ev4X4i/RgRLL//0wjs
MsOQ7UKhCrXvwBCnE/hw1Aw1xF7KL5+uhCKP+w45c2ZY8m2apsOrGhasNFcq
N8zQMvOefyxHHUTHmJH2k5ojafcUnz11I7wgK3m5QG+OHxNpZ66LtQB7bOza
PzZz9JDJn3qg0AZiYSDEzGuOTx67E/5stcO2GJe+6AVz/NbzJbXUsRuiv1ks
ooI57ttSNKdi6QV7leoUDXVz5DEbXfzzvA9y/tA/NjM0R91Jdj1/pgG4cO36
CVdrczz1lkP5kMEg3GYYswtzMcdCWf9r/B5DcDZL3i7J3xy3ZnJSN4yGITvt
9pE3UebYwtapMk83An27wg4lCeYYw6BTmhIyAg1Qz9mcZo4H5G2gtXBPX/ax
62Nv9vizRo8qP43AQMXb7PU8cyxd8JKnchqBw+cXV6nLzDF5gTX6ztww1FNa
RP9XZ46UystmBWeHgViTK3iq0xwPHor4duLyEIQXxeXIjJhj6Le70x+E9+pD
4NzOtVlzPLYTF/Brph/YKyRZjNbN8VClrr5pTB88HBX6Z0tigQHhmz/m9veC
oH02WfAhCzxttlKwud4Ji2O/42J5LHCs8p1Vim0H8BR61T44aYGJTx7qSu3p
kftMzNZTSQtc0Hx0h8S1FZwLb1m8lbPAF1FXP/OKNsOlEuszn1Ut8NvXhe7l
8gZQfV8QWaZvgVP59WObz+tgh4vFu97SAovl7h4k76uBL8v3yXpuWeCjA6OV
HW7VUD4qxTrhu4eN1j9seVQBzVm++JUIC9yfri6e+6MSPhD6JP/ds8CBPy5P
PhMrwSFueJQ+1QIZ1xItpOiqoDi759rhTIu9+on+7xehCkqObsoL5FrgB/XD
YtR91WB+7sRDsW8WaKxwbVFJrRYURa24oMYCz08L0Luw1oPX/rJ65XYLvMJc
LXrvWCPErzc90B6yQJ7uz3cs7JqBhyu71GrVAr9/IA0Xy2uD3Q8tpk67FigR
YN0outsOr56+S3WnsUSVSFbJbKVOcHCSywrlssSeTS+2oK/d0AQKlN7Clmim
4+qUMt8DzCNUBCdJS/TRzIvh2+qF79/Df1nIW6K203iy914y7YutfWugbolS
KuJR7Cn98MywqEfDyBL1aEjSpg8PwJjzgKWSrSU2b9F0yNgPAIneH150t8RM
9q876yEDcGDxyJRksCXamoZFhez1z+6rgZ5n4iyx5ZD70BDjAGh5P3h+PMUS
ucTbqh7E9wN/eqvskVeWKL3d7pI41AdykQfED3y0xFLqmvq/1H3ANaTrQ/3V
EkOE7K+OsPbCiWSD/TvVlkjpfNuJlr4HGs6rJE0MW+Lw0NG2xK5OqFwQbu2Z
tcTHlHbNFCUdYCTsuFC/YYkmFfQULlntcDPpJlsZmRVyTKXOfM1uA66tErfc
/VY4ejyBUbi2FfxZKDheH7ZC3kw7JkHKVpD97XHo8XEr9L2bQXGhtRmqlx7b
3Tlrha7C1374zzbBU0baf6GyVsjMZ5K1YtIEpPc/lXqpWGEohd7UO5EmcI+3
CXHUs0K/HqXgHtMm6H/mxWVmYYXOaYHjhJkmkHYJ99C5ZYX3shLkOmqb4dOC
rKmSnxX2MfwLb11rgYdOGnXSUVYY7v0kIiG3FcQ0Bt+eTrTCVaq7Y2/C20Al
yYWUJ90KrzVvyefYt4Mus8oPlndWmOJcpnj0Rge47Ryxp/hihUPXvhZwa3dC
ZvaH/PVyK3xD82Oy+nIXfCh7ODvVZIUy+3Ka5M90w4HDY6d6+6ww2MqTjo+y
B+SSO1PrJvfOm2v+EV7eA9HuWUpfV/ZwbespOZNe4KlPkfmwY4VsesZmZ7p7
YbS22ucZjTXOcvtvSfL3gf6LoqUEVmtk9B3Tj1XqA8Um2uQIHmusem0wmy3b
B78/TFp4n7LGs5U+CQ/29UEhZ46TwwVr3JV61Ps6oxde6k5vGytaY6GJZ1Y+
+948afemRkvTGudXBSd/2PaAqLKQjIrx3vuHP/N4p3RDuNcDyiv21lgjo5f0
bC+P7+q+fqDqaY08aw8nlXI7gfYnC1nSHWtcTBlSd3rWDrMzPUUTj63x97lZ
1kNP2iBkIHzOONMai8e2QyNetsLp+4o9FJ+t0dtgSXkjrAWU660aBgnW+Fjs
22Xxf03w+Rrh489Ga2QgPpTaX98IXnekoo73W6O2Qo3i4V97eUbqZNXjn9aY
Ym5NkxLeAHNsPPcurVujeeoAV3V0A9QE0XYdIbdBzUO3qiwoGuGfa4rTaWYb
tFL9Jnh2qxHszWy43bls0FnnzolP9s0Qe0KjdO6UDZbfIHcO5GuFHrnPM2nS
Nri5skardLYNNDZJj/kr2yAMHblz06YdbgxPdJRZ2+CitbUSM28XSMheiOPz
sMGXAy3H9B93w9HFicrCMBsclJ5MXWDuBSeFrwSfBBt8Xq1jVhnaB49ZJb/Z
PrfB/8RIFH2G+uG6zeu1iI82KDEY+SuZYxBWK9SSW8ts8KLoy4qfe/N2y1fv
ApVmGyxkvUlTQzUMIVf3a60O2eDj6qmXLq+G4fhkk0r9gg2KzLXaGG0Owxqt
q0XLjg22+N9Wv7s7DOsVSnJk+20xVNRrbPXTMFzwvhxqcdQWMzoXS9/SD0Mu
5fGcpdO2+CWsUxSZh6CQTs4oC2zR+ll//gRxAFSZ+4XvadhivkLGtSvc/cCp
yjTy3NwWr+QEXbsr0Qt4YkV/2M0W84SEuC8wdMOO0vibKxG2yO6o3LWxN5+k
kb/sTH9ji9zcTF0MfE2w3Gjx8E6xLbZK5h878KMG3lXujGY12KJ0qKJQWfF3
0A1hUV8bssV3Or8Enz/5CiPvcm7dXLZFt4T+Wzei80CZJukjK7kdYu66Pznt
a6AQ/KK1wGqHbx/yslBN3AVe6U831k7YYYdR7jqxz41wZfZvvNBFO2yf7XJU
uZlAyLSxMrqnbodXZeKfeg8lE77mke7wWNqhj/hyVLlxAiHfZ95lzMsOA5ap
Lh5rdCQsG24mN962w32lMU9xXxLQTI7Kj6fb4ebabfUbd94BTU2pI89nO5Rz
aV5wGyqEM9I052Jr7NBWw6gkS/M78NMcZeEYtMP9knHvqT/XwR+upsHWZTvk
fsp3R/JPK2T1und/orRHayGyUTOPLmgSfeQ6f8YeX3kllstwj8D7FMEwFUV7
rBxrmJbYPw6TXkouXYZ7vMIN+q3ICeAz/j1418UeDTTyOlWnp0DLYUjTJ8oe
TYp535fzz4C7cTn7gzR7VBwoW5w6PQdyMoMHR/PsccCRWvnF2jywakW9MK2z
x+cWl0gi7RZh8UWnL/OoPX5PaZC9GLgE++nfvV/bsEcLR41e3wPL4C9/8vm+
/Q5oJzl6berUMoxslx5X4nfA+LKa1ydol0HN+WLm54sOuMFarvvz6hL4VN/Q
uKLjgO/faD8+S7oI94otbEicHJBJQZ9GUGIeSPuKgwbDHZDzWVTT/NIMpNI3
f+9LdcCONXXqdxI/YUiukPv3Zwc8ospWbck6AU9uNjmea3TA4XoHroLHozAW
oN7IsuOAJS8umL7NagMLToWH0qyOqGjC+e4kRwV0iUg23D7liJcLqNVyyZMh
dOdvOfllRwxLyeQSiv5KUCn2/JVl4ogvRhgd1r81EbwY1T6GeDviX3exDA6/
bsIE77uh2/cdsUVN2HA8ZojQUVP2sT7LEbvlOc9OLY0RDjna2F6qcMRR0qGY
/HcThCofieNLg46Y8Hjm7c2xKULdzdut7RuOeMLAzsMzbJpQL9tIPcvkhFcq
j5x9FDRDqJk+fUVU2AlX0397Z9XNEFzMopkyFJ2w8qWX/nGjGQLVN81rMmZO
qMv1Wqf99DSBwq2o4LefE+5aMbsKK04RhKzmDZqTndDP2l8BX/0gPJTRYij9
5ISOwkLhulqjBGeGV43EBid80Kmvz03oJbyK/UbWO+WE6d3GHJdvtRDeWOl9
JCO7iUS92T6d1i+E+j6um3JHbqKBv+zFh575MLaZpv/k/E1sGR8lXopvhUKf
d0avnW/ix4BEBxOJCRhI1R23jLuJgd0F77IlZoHLTuaNxpubOKp7WuzTnh7k
uqOfuVbcxNzZuw43+n+B9HnlfY0jN7Gevkky0n8d5vwzVyy3b6IpZ79V2shv
2EGdKWmOW8h+i/Vw+uYf8L+glqQjcQvJrfnLTYq3IPeA2Mv32rcwQav4/ATr
DpCNq2Sg6y0MGI9OryPfhaVsCaC7dwubDnxRyPbbhQeuY/6UH27hn84oz4ce
u2DPJK0q0HALx0qzb/ss7sDVHkN5u5lb+OJryz3/6W1gt6HUJ+5zxhuda6Xb
1ltAKOHLOXHcGUdTO2fP3vwDQ9sBwmkKzihh+TJvnOo3GG+oTLBZOmOUPdcW
newa3F2t0k4NdUbCgweuSVwrcO8Dq0xFmTP2Co78a7wwAY8OzqjzHnHBPJ8K
5H3dSXAJ3uBqPOmCHEyTcizvxgjJ6yGtDy664Ldms40jT6YJXCKLdwOvuaCK
w4Wqkd1FAoHJKiruhgsqbi2dnDX8RWCSnskqc3JBrpAMJ5mWNUJQQFLCoUAX
3NpJyEto2iAUfdh0Trjjgs8deFfmlTYJi/fM+U6mu2DX9rT3Z4k/BM2kKqfx
HBcUSmzIP3PvD0H0Q+L5jwQXvGNdy8Km9odwv0eC406rC37mD+7bdNsk/Gg5
Xu015oIehxWu2pD+JsRoeqTb/nJBH/bq+FiSdQLJRjXzDXJXlFA78+eT3y8C
WdSpGc2DrujY9+zDtz+LBG6eoptK/K54UHxjNvPkNMFK0689V9IVpU6VeXlQ
jRJkYyMnuVRcsSztc4owZRNB+4vk6yPOrjj+OptG6ks3lAf/ySsOdcXzb4mi
Y7UTwEn7hNstyRWv5gfsilEsgk6B12XVN64onrp0ot9xFabH++M1SlzxhVbQ
+cTo38AbM7IY3OSK3o3Gb4UvbkGz31Ly0Kgryj1z6eRz24UMKfJH9muumJFj
fvq/2yToIGg+zkPthjEdP/dTx5CiXdK4PhmnGz71iLydJEyGCRM/TlOKuKGW
h6FpvTMZsvDE+vIquKHzj54KYy0yzHp/e1FX3w05uzePbXSQYniVeUmykxua
EHv+nt8kwS+R6YpDIW64a5xr1nP7H0BTb9WJZDcULsv+ezhmT4+dGfe9stzw
eKmn4NT2JnDS2IjUlLohrNzsqCVZh/RJuUtH2t1Q702OQfiHZeCrCnWf/+uG
Cmdud42VDcGyUGeGK6M7DheXf3H6VQUJC0fkD/C5I2PIz+u290sJnAVKTj3n
3dFN59is089ewohT5sUKVXccXT3tYZ8wQVAa2afdb+GOhYVLzbw9c4TnHEnu
R33c0U+WxO4e7QohFgq1791xx8lkLd1n91cJ0mM9KUKv3JE1zEJH22md4BLH
QDNf5I6K5zkSPt3fINz5PkvR3OyO8W8k5RbXNwhpNi+O1k+4o/lulQvNkw2C
olvfSN9fd7xsWygmELpO2M9Mdf83kwc2is2dvFGwSnjT9GXgqIAHOkakqA8p
rhDChn3lVWU8UPiAxLZZ/DxB/e1p1TBtD5zani4pejJJcFqX9iPYeyAVSWqG
X+cAIX7QjZY6xAOlXL98iKyrJuyrKIxvfu+B5nV3NUM6usHuusHz6xUeePNp
e1RT9w9IDrcVJe33wPZAuVdsI3PQPGFKaFn2QE+b8jNLGStwdz+fc/U+T4zk
lBf+sbwGUyyUuVNHPfElw5wX39ffEHzjHrOIhCdaHwizfrX4B4J+1so8V/XE
oJa7Jwz8tuA9cySIWXuimG/b0WNa2+BRyfrrR4Anjv6lvhPqvA1fMrRev0/y
xMq7RmsC7Vtg/2SxN/q9JxIaAzSOh/wFNX77FZdKTywUxx7nyE0A2/pKq0FP
hGiUPri6Durt2Uvma57oLKrb6D78C5QC6Jbs6L0wUelR8CBxrx+fUyIL4PPC
0ZRFl1OCP+G4He9Q+kUvHGen72wwH4ZQn9lz3TpeWMRloCSu1whC5kIzDyO9
8MPg68mPXG0E2oTQ2+FpXhhRLyS9rjdM0CdYySV89sJD8lTODgcnCc8jbezL
673QTb3bfOLoLGHEcWfxwLgX0h3ncGvkXSQE5VBfi/7jhdGdL/eThC4Tvnx+
lcbO7I3NB4CjX32F8J+t5o+KE96YOZorO+W5QnAc3ecegd4obWVocndpmTBc
6eCjq++NV8nKn4kELhEaosbiz7p44/5y0tTpjjmC5PSx8+wx3rh7XlAu/O8U
Ib0/VIPiuTcu83FR3WYaIzAuDpzdKPRG9ssWSoq+nQTB4p6WxRZvPCfX1/7d
sIBwPW6Z7d8/b/SjtbmS1jQAxYFCP4+y++Cgg/BLf/8puP8qblFHxAe/3P0T
d+n3IvTRAEumkg8SJ1nOmt9fhZHb394fMvdB08nsokTT3zDiy83+ztcH9ds2
GB83/QWjdD0li0QfFNHtMVEk7sCo5akQyPZB3bsMdhWMJBjxyEAYK32Qbn7L
mW2OBHc4T06ZDfkgi9PvHxb2pMhPrlCctuGDMlaZlmIRpKg//Pv2AqMvCtFr
OTZIkuLTB5fKrwn64mCKQp5fOAlmRXGR5sv5YoDQPRbVjl34zTY5deSGL37l
zKcQGtmCM8/z06I8ffGogcjLy1KbUBbjfmn+ri+mfe6pHt1chaKiFQ71t74o
anhlldZmEcLVLOJzy32xee7Q27J9E1ByQJMlZs0XlXaaMp2Hcwl/hWIWqPf7
4eVsDccvOECgaR7tfyHghyOyR3QFeqcJpTfyaQwv+aGZ+1xqfMsKga1xtV3S
yA+zk8TIcns3COd/L3Ggpx+et9vyVrfZImyJ5RI97/lhYZt4TrL+P0LFkXcX
+7L8UF5Fh31eiZR4ktLBwK7SD++q3Ksu9ScjuhcVSBwd8cMLWyocQRfIiXLK
WndW//ghwzOn2UhfciJlzgiOHPRHQUbyNQMJcuK5rdiLPWf8UcXRTujkLTIi
+UpGRJuKP2YtaIvvHiMlToqLKFdZ++PMf/Or1fm7hBrhmsbsEH/8W0ThriD1
l/BNrYEmNNUftTkz30UsrBG232XTK3zxx7sFjWWGnQuE7NEN8t+t/hhJlmkv
9GyUYD4bWClPFYCTaqOOCqG9UFrRn7vIHYBhkkwvffXmQK0+PvqddAB66WbM
FF1YB4bEDN0wvQBUehAfRZGxDaPrZTkhrgEonXesiXGMFGmDK5py4gPwbW4s
J7cEJUqcCag58DYAA+Tul3+UocZ6CbeuzxUB6H0k1nV9ghZtULfu3kgAclc/
8tE8zICjIq+IZLsB+IM1tJdufj8eKQtf/cgZiMU6EWR0tEz4UfA3223pQFSd
+kT9XY4JXebNvEIMA5FuL5UbczLhTq4fMcQ3EDf5Q/ttTjLiRouGtu+jQLxk
zF6abM2AN769NzAqDMSlNerLtEu0+KfC1ZGzOxDbusryDHv34QLdWmzhWiAO
hZWaU4hT4N8uDe9TB4Lws3ZoQNR/JChwz8k3QjQI7X8H6Z5S/g1HexwyatSD
sDNA8t5U1hywvYuvp7wVhJ9krwRSKbSCBbPxKY34IPymrHO3UqiHcGjhPo1W
XRB6XmhRcZ3aJLw9NtcoNB2EZ4pM/zzqJyGaSB2+qb4vGA0r6balhiiIB/2u
KdQcD0aZo2Wxj82oiVo9R/88uByMByocj+xcpSP62c38/WQTjO/f16aZxDIQ
3+YfTTwQHYyLEX8jvagYifcqkzKy3+ztl+nLMlPASPQ81y1jXRuM5v8Ytn3u
MxJ/lh1qE5oJxnM99YFkD/cTSTjFVlcpQpCCKSnlThM9kf/MXLUiawiSvDvg
Y6xAS0y2IGeJ5A9B6v4BlV76fcQcGrnjH8VDMEJGkdxBhpz409sruVIxBM2k
eVfWhncIR6SfbNXqhuBwemoYS+AawdbsbOx36xAkPsvJHDwySZCJUTQr9gxB
kXMOj3J3HhD6+fg6v0SGIF2beyvzXj33+Jk+rkwOwWCS2naGM2tw0clpZe51
CEYprvJ6b+yAIGvj4LkvIUjq8p+X4T1ylDigZfq6OgQv3FQM1i3chxdrl39g
Twh+KkohiOjT4cOejy37pkMwtOKflbLBfnzCWavzezMEn6k0f32txYSNybeT
aWhDUU/0i0omKzOKVLlxS/wXitLsvZnbzsy4zFZY6XYyFHu+2G2omTJjrZlz
Zr5MKJ6yXememmDCg0dULFbUQtHqOn3CI0om1GxlpeI2C0VO3W1/60QGTCqb
aLrgGooMB+ik37rTYhTnbp5UWCi21B9+61JNhd5+O194HoTiOSrSNYEMMuQb
ZqlZfhWKLw7/EbFU24am+af4Pj8UdzukH6d2/gKteS1Fw6pQ7LC+r73EPQ4f
M5goybpDkc1D72MJdxZB8il71o3fe3zwta+E+VXC5Wwu+SPUYfjDWfHwTvs2
YUqqdXaFPQx3ObglBsPJiAnJrFNDgmE4yzIv++0MFZF48K79uFQYRlvUi8Qa
0BCf1xT77V4Nw/pXm5Mey3TEVAIn5RnjMFyp2kcU/MlA5MirFHC+FYYany1I
/c4xEuNIH5YUBYfhcarwqpEORmLs1yiK/PtheOcVc2RyDSMx8VLE4+wXYYiL
PdWKHIzE0JcHNx/nheFJ3nKaxHYG4tQz5zm/ijC0vCWR1U5CTxQabhy82hmG
L8mp1DTzaYjyHBLLdJNh+GWqUfDOPypiXbL46tf1MLxQ+4H5/gY50fbMm+Mm
VOEYzbr/vEEOCTE8bmFh/VA4WkKdzVefv4QeSaWb0QLhyKKbtyzhtEqouCjE
zXY+HHHMtXni+zThr1K8c5bSHn+TZtCCspvwa8JEXc4gHB+FMj9g7/wEJlQr
MxP24ZgRF7156/Eg8N3PN33gF47rhlL6wtozEGTD8UItLhyXveSP0fivQAvZ
W5tDaeF4rLIu92TEOmhUtqjMvA/H61gRlJ6/l6/jiBRVpeEYH8jz8zHZFjD+
sC3KbA7Hl/0MGWcct4Ew+14jbiQcOeJnkq/92oaV+N99zsvhGJFw4WXcy224
pHeuQ5M0Ail6xEjr4rdA1S7K8QxLBJIwjCTK1/yBrdeiGft4I5CeqCoU5PQb
3lVa6vaL7SWaRjM5oSdr8Dn4NsdbhQhs1X4YzeWyAr6GX/ncdCOwKDONrfro
PJwteLFfyiYCVWioP/ienYSt0JfJpN4ROKqYRWZaPAghpFPm9dF7+9f/mzrr
3AJm4k+bkx9FoJBm+G2mxzkwcUCLYJUVgVO192soxUsIyw48UZIlEcjy4Cz1
OH8zYerj1WGGhggsXe4pJvp1EUZoL29PDURg1fVQL8pHfYTUaum88vkIjPCQ
W2W6PkAoTb2TkbYTgekktDmUZf0EEUPTcK/9kXiF+1DTmfkewjW/u7JqXJFo
nzz6k5y9g0An/U6YVyQSJ23Keg6y1xEmYqk51jESEy0Ofx64k0ew46ZQrdSM
xF7nraD0yU9wInTJLcEiEgVWy+gDRBug7PtlX2P3SORqiz5VTtYDRTQD1oIR
kTj7WELh1M4IFF525d9I2vtekdHQbM+/jIlZNypfR+JhI+9dM/OfECzEiklf
IhG5GO+od89ATiWvr3VNJL6MduruFp+DyJ8rnJK9kfi6+cFY2PU5cOB+V7Rv
JhJLTK9H53DOAu+xbo+uP5EY3RB4TsTtJyS/v3AtnTYKq1X3U+tq/oAVSFcz
+y8Kr8a9MP4eMgBSEwI/OU5GYXZQ27NilQaY9gnjrL8YhZk5DttkAa8JMeaN
ZS6qUSj26qXN9vEuwuSRlwH7TaLQQ/bKFe3sCUL2i+ahjFtR+JIs5uaK+RLh
dVMjn0RwFNIqD1l1XVgnYFja4ap7e+dXdT+lb/xLGPt06sz0pyiMzbk6f72E
jCh3QULOkhiFB138kgm/KYi5YydsJluikHE06cHcbypi5fMnLs4jURg8rmMj
8J6aKMrGqk26FIWOBZ7aJVS0RLHgBbInu1E4bXG58NoWLTFj/JCX5P5oLG7d
pLoeTEesoD1e3H0kGo8JyGWm3KYjJkqw8XicikaSty1DsWx0xP354o/oZKJR
rd25rZyXlqjfz7jz6Fo0Lp3INdj9SE0cCA+LZL8RjV3Rn0rYiVTEv6IP/4t2
jMYPV/J5xwwpiKsBW1njftH4jpbfbCCWlOhPT6EudDsaPxXU8XzL3SZcSfdw
N3kcjZOvOB7pZ68TKL4KVoe8jcYB/dpuFdl5gomXLldSYTSaHL6edbOol/Bu
PFY9rToaRTef5l05QYRwt8bvTyei0eluIM/A819gW+FN/WI1Grl/HVrwIfwF
Tq6U0PdkMWinF55nc5kUdW6tOlUyx2BcnjfbzxUKjL2fzjfPHYO2x1WT2DWo
0S1JppNfJAaVctSJgep0+Kb1Pxk3iMHTotI9j0cYUDze7G6rWgz+bqKgMl5h
xKERA31ZkxjMOLTvZdtXJpzgd39ReDMGzya+Gx8VY0ZVrXkeycAYtOQSKWMw
ZsZXsxRvv8TH4OtPz2f0xZnxgIvLizNpMajK9468+RsT4iutktTsGJzXiTOg
nGPERDUdt/WSGCSIP9Eur2ZASoX6hPP1MahlqixSw0aHR5dfelv0xeAZglT8
y7l9qKaVIus2HYNlmgHfJzQpMI9Q9s3udwxa8R0aeW5EgnFnWKhYWWMx5OuB
dNK4RbhR/Ox+B28sRh84/CxBtBfkR7hyY8/G4nFq2m+mHvWEo9sRDOvqsZi9
nK12v3mdoGweKfzFJBYVVjbP1mbuEkwunJiLvBmLSY+awrrDyYlXtdiM7QJi
0X0ouTHMZh8x/XqngllcLHofIiPnn6UlbhefHr31JBYPCAhcytxlIGpazVQ+
yIpFzdU7+7+rMBE7fNv7G4ti8Qy1vSKfJjOR/nWx96HaWOSRbT4fxcBCdCAx
eO7YE4u3241/BgWwEMc+F96qnopF8/rh33ZpLMSlHquH3BuxeK51hzvmJgtR
5s74b3fK20hH5+dz6BczsfNlyemvB2/jFiOZENv/UWDn8VB9UQDAIxQhS0TS
QgvKkiJRzZUikiJRFCqFZAmppKJN2bcZkpQKlX3fnRk72UNRkl2yr9l/5/fn
9/PefffOfeede87I8NLbPW4yjYt7kn636cucO3nohzcc+CSw15OEVEwnG5Vx
0Z9xZY1tO+JJGGfYjx36xkFXluFX2KLrSd7kjt6+5LuK7hBppcxu5kk0k0SP
6SytpEcKc15Pvu9JChL8HPsi/4HqTP5slo8nCf1HUWFlGQXHQ4c/F7z2JCne
WwXY09pAOvruk/J4T+KkKKdaUplAWfHcYvlHvicx1zWZm5rqoJj+KKEuVnsS
H89AonlnlGKwgtle7pcnufNia3TR8RnKgMFWSedhT/Jx4OS/Ua1FSsPYYHrN
kidJuHJsUWoPE3HbuuOm0lovkpy2+cPhgyuJ/pYrZ5M2exGPJ/GTvQUs5EGQ
/3l5OS9ybvUtTc50VrL2+kR3NvEidrHD0Xc2sZGZN/t1juh6kcGIuczeJVby
xOvhubJLXqTFKMPj70VW4m987M0xBy/S/vKjm686CwmM9GzPeeRF4otC1CNK
mUnk8yvrdwR5EedzKfXswyuIk7T2Q4/3XuR3p/2YR/gi5eq9sSu/U73IWSlh
HauJfxT2gJB++WIvIvomrtmebZLyszEgx73RiwQnGxgkTw9R6n8yFdR2e5GG
jkEr9uEuyjYP99zNU16kX5/aW+vQSJGKGxZwYvUm+9V/hF6MjqQw19T51gh4
k9e3R/jjaqvg59DIJrkd3iS+UXtOZ/EnvL5ysC9U0ZvoSv2byg/vhnD5aZXV
Gt7kmQ5Tq6v9H2D2FfziauhNOhx7pan9g8DDVd08aeFN1m/mFri2YgT8C43v
2N7xJmdmPmS3wgisYGh39j33Jm1TbRrdyiNQT4t7afrSm4yMce196j8EPrvW
vmn85E3Wvfu4ev+fAch0WPdIPcebMFUfTP7n1Ad/x6ZM0iu9yaZU/zwzqy44
sJGrYusPvH/1w3uOy22wMaY92vuvNzn34fUx495G8NDbwzoz701m0v2b/s2X
gTTLQu8lTh9C2Zs4e6oqHpzL1YRqNvqQ31Z2ewobYykNmXbsB6V9yKo7QwWZ
dwopqknSWbGHfEg3406nmF0lhcO48NNGHR/idXjXZLleDUWy+cI/HxMfsnK1
coRmWTWlLkjKecnWhzx24jmi8aaccoKbreXGQx8yp+v6zJaeTxl7Wjz9zc+H
1B3uiE48fYfio/Zp+vBbHzKUoHzvly4DYj/U3o5M8iFiXyPXWV39Ci8VtD8s
033Ivz82x0TvtsOB+FBZo3ofIht/YkbmUC/sshBQTenwIc3ifpU75wbhY1rS
SfZxH6J7s4pKax0D8eCjPWbMvqRdNCanW3AKDNx23s3h8yUPz99oes77D6aG
eMXWi/sSqRq3A8mf50BDv8T69l5f8tT+HotQ8QLwk6XdP9R8SYbA5k//VJeA
r2qVg6q+L+Htdz2yjnMZvjk6Pvxo7ksoDR7qDO5lcPf7Msp1C6+z/1FaUFkC
76rPE7ZPfYnhktRJNe8FoLhRQsupvuTiR+2i8aVZkOX3O8sc5UsaoktDUlqn
wX1Tks+eNF/ysnr9BzPWCRhLuSt1tsiXRIrsyuzbOASKq9y7bjT4EvGwtqO+
/F0gMrXl1N0OXzJsaNPzW6UOnpgl/7o36ks+5CxoNDrmUU40l367we1HXr5o
zxfB+jJTKfXYJVE/cshzX9pq1UmKi6XVdcPdfmQ9331FxdNzFN+T7A/1VPyI
hnDLazuuFUTh6KL+WS0/ckbcMyYLmAnjjyfv5fN+hKV6YOqpDCtJUu0evWvp
Rw7bmV/i0VpFOpdYBF/f9iP8ZfUutJXs5Ew1l03lMz9yN1Wau+wkB1HvWYha
pvoR093FDUqia4iP5aD2gSg/8pjpfutfyzUksPHcSsc0PyKsInOwRmoN6W+r
bo0p8iO6a8xG9plxkMWwHRUNDX7kCuuQLgsHO8kwuSo+0uFHeKr2tPrvXkVW
RDtxz476ESX+nzHmtSzk5wWL70PLfkSl4idH2wIT2dUnKnxtlT+pfDm77sbj
RYp2sPa2Sm5/MmAyziV5fpqSMxNb6CTqT5SXnxTmJLZQLBw/9vko+5OTG/Mt
vv+eh3sWkf+aVf2JzUDdg3ouZvrYByOtHZr+ZN8VxcWaCVZ66V3h5vun/cmp
9N/ty37s9CvHu+Z/GfqTMu2R0nd1nPQXbOWXtEz9STZ7Y+TQh7X0i3oibXDN
n/SGXFvMWeKhbzwlZXXY1p9EDnd5GfTy0t21e2WKb/mTtjddM+mP+ejDcOCt
zn1/IpmyIaWogY+ueGb7x9Yn/uRKD9/KPfV89PnT54fNvf1JfF5eU8YDPrrp
3BOJgSB/EqanKCnRxkvn86q2snjlTwo1B5JURnnoscWml1vf+ZM1bKG2L1zW
0jNUTniqfvYnq01LZ2upnPSrz4YVw5Px+beGxyNV2eludrTwgSx/Qm7E7G3x
ZaUL3bYDabo/MdKYHzvvx0RfE2wW97LGn8h/7Dnl+mcM3thvtCpr8icXvkcO
iy51AK2z0W7ipz+po852Xf13EyRNLH7q/sX9+lzwS0RljPJoTuzOi3EcH9ZU
Ha83S+ltyXaumPUn/c/Lt121XUFGH4jt52cKIB+1HP4G/FxJuGLNr1qsDiDH
FipXrOhhIwtyi4MlawOIo3mz5D0XdiL7sPWf9PoAQk05VtQVsIYctc5jjtgU
QJhqDRQjxbhI5QvXCf4dAcT95Rt21p3chNXKSFtaJoCsPf9vYPgNN9n8o/O0
hmIAqTs4bvrcgZvQ1+wtNzkcQGzWJJQMf+AiSxKto/bqAaQ0Io49SpWTMFbS
Cu/pBJBdJq/3lBlwEKd7D/gfGASQcLvXfJSpVcReIibytkkAibs5/I9FjpWk
1YuzWl0LIHOVr3mcRJiJtXyG3xnbACLEWadk83KRUmqTufmAcwBZfT2AGpgy
TRkw3q659DSAaEPV4tLVDspxxVV3O30CSMTv3ONcZQWUoH2tDpXUAFI8dsxQ
lrkBWPpi8jJfB5C9BukdKzu74dxBP+3YqADCMDmREOU1AuLHVt+Nig8gLv+Y
4/3NJ2Ehe+RfVHoA8bx6buii0j+4eUBvOjY/gHA2f82gyc9DH6VeNqME96vM
R0PuxCJ83b9fvKg6gBR1Z24fcFuCX2vlDtY34XXep1tPtizBSb1VzO1tAcTE
iiPUyWwJcq87Uf72BJAK+p1bfhKLcMn/6OapoQCSbbZJtPv4PGyQnz+wMBVA
pi/v7v/48x/4u/kEr1gKIFfzThz4yzQNPy54BDKzBZIjvz69ffp9HNp6Mn8x
cweSQe3IppPMI7Dxe/NJZsFAwm9l31Kr1A/aHa8LmDYFkoaQmvrmoA5QSvCd
Y9oRSBYeeSlwRjSDA5UStlImkGjbRWskPiqFgCd6I2yKgeRq5uWv00wh8OHy
hqk1hwOJn8vXwbdbcyhzrTQNPnWcj9fBd/FXOcXAJHCzsE4gmb0VLOwtXkcR
kuA8u9kgkCg5fFx+8qqe8j7P3VbcJJDQlMy9rXvrKHLD4RXi1wLJ8bcrRz/r
VVEy/Vf/2mQbSN5IdGs+3V9ECZndep/fOZB07g7hbBKKo4jFTg2teBBIzI6J
W4R5JkDCvE5379NAUuQ1PDwuWA6fl3SulfgEEiq9cj9vfSOcS81PDKcGkqP1
Cq21JW2wruS2kM3rQDL/002Vrt4FgYPUJcWoQJKiHJPKZdEHWq2r0ubiAskd
wlU0LvQXepzq7LLSAknXUFJU7b5hUP1mrWafF0iKS2Snk06MAtPfQwJixYGk
deLP2lu8Y2BUUfC2+ksgeXb4l4CE2RgYZJW5OnwNJOfMVtZslBuDnJT6nTw/
Ask+Tdv7i/dHoXGhWSi6M5AcWFeTzU8bhnu7LzbsHQgkZduXSoSU/0KZ0u7J
rLFAkljF2DYz3wsno92OK8wGEhHxvyGN0x1gw2T15eOKIMLn+2hDfMh3eHJo
LJZ/dRCh82cr+jwuh9LVDzWc1waRf2mCX822P6e8V+ys3bYpiOi3vJMWsflB
2Rb6YfHU9iCypHTxhQh/N4U6+9v+1u4gcu/7RV6b9QOUibfm76l7g8jy6/jG
7rARCtXsz0CSchCxDwwvSVcZpxytqbEtU8XnxXI17Tk2SfFUbNzacjyICHEx
5L62TlHknjbQe04FkfsjK7zURqcp3wp3fRs0CCKmtO6K664zlJOBuyuGLgaR
B4EZQ/13Zyib/yx19ZkHESbNVKlHfdOUJkrnzVbrIDIdrqRoWD5FmWCyri12
CCJ960j/G/FJikNE1v3ou0FErzs6VZ4F+9nL92UfuuF6XD97LYwMU64bra7T
8Qgiytmte2c3/aHIDao+EfANIrPhYWMnczopt9oEo78GBxGayelT9K/fKCln
D+W+eBVE6p99q1QyKaLwrdC//PtjEHHi3PbsRXUD1L2XufgoMYgM34szWzz4
G8a2py1syggi3sdDfERie0HNZ744Iy+INLTtWDv7YhAeuFRzaRUFkagtJb2J
raMwT786+70iiFx7qBDkwDYBTxnJdlfq8PmpRhUWOZOwt7h305/mIHI39Pyw
298p2No17W7VFkRO3DSXGwuYBs1HA4NdXUHEz3Z558tP09DL8SzCcCCIbGiL
Om0uPw0xf1OaikaDyA6+0QuX5KbA/lhr786ZIMLpU3zuauwEWEk6n3y8GEQO
dZ7d+jxhDFJduLOaVgYT73CFwAN+wyCksJd7M0cwYRkyenWa6w+4dYTZm/IE
43nt8yp7rhNuJfPuCxEMJvucNbKd5r7Dfuk930s3BhO95icnzo2WQmx4iBaP
ZDCpm+V2ppfUUrJ0xm/tkg0mQhQd/iTRNkrIxmFRVYVgYnK+LkP3azdFX863
TFclmBRXMgT1Xw1QnBdv1V1UDSa5797r7iwdoeyO8Ll2VSOYVL94ZqwjMk4p
Tv3w2PJkMBla3jbR82eCMvEkc+jamWCyS5pJo//oFEXSXfmg2flgEjW4To9s
n6ZctZTpPGMaTLbENb7m8JimeDzJO6h6NZhECz149NVqmpL76/OHndbBpC9C
TPh93RSl8pSEG9vNYKLBXUirZkxSVjAL67U5BxOl1cTpgfoEJeLcipJY12AS
75G2cOj6GCX/03jSzUf4vJm7xqNOw5TY0ISNss+Dye1bX9m4vf9QLhVfVu72
CSaZvgnMHge6KSxiA2YBQcFk3PDtdteDbZTEIZXIpohgcm5UNk07OIsS9U69
2OZDMGHdJh3M2Z0Gs+tO/13+FEyOal0vDdpeB8xuT594JwYTi+oz4cIWrcBm
UtDFnx5MMv6ISER1d0C+z0Lh/hy8f2z1691VPeCQpnXaEILJ2apfJxkyf+BM
D+8Dh2Jcn5SVYNPyX1gUbdj+oiKYiCg+PHNZcRg6S/M4X9UEE55b/Dzi1SOg
84B/IOYr7u/RNUTn0ijYGF+0TfweTKSunr7n6T0KDybLtJLbgsm328Mjytaj
kCPBqxTfGUwCFXed52QehXGLKwvv+oLJFVindzVhGF5M2NkFDgaTop1NF492
DwJn2wPXe2N4f6j30dCMAdC69kTMZBr3i09nfe7+fvgu5eKgPI/7oaa2nule
D9ypoYf9ZqGSDwX2Jytl2kGEpaTmMzuVtNRFMs3KtoDA7qdGdtxUkm3/JzFF
9yu4xuXdkOGnEqsp/foc2y/gExWyu389lWxRVFP9ysyAZLpLRvhGKtm6g1dn
69UEmLEYFdbeSsW6Rih1NsyRctq959z0diopaLo7kv87nvJs6ojlKykcXxTa
LpWVTVE8/XOPiiyV3PY3vGabSafc7QkLadpLJStubXTpZCmiODjq3b6uRCWi
J8S3hVYWUYo9UxJmD1JJHI1bIFa4iNL2emzTY1Uqibrr9eoKF4NStVyUyKZO
Jf/CWII4gnMpwjX2uk+0qOQ67f7nh9MpFMuwrMV5HSpR5k8dfqEVSWEd+5Rp
c4ZKrpVYGLZEeMCi3X3PFkMqOVB/Yt9gaQIcDv7kQblAJaNLE6x3FfLAPOJG
8RszKtn2oCSQ5V4x1PvyGM6ZU0m8V9XUtrBK8B2S1j9lRSUnPX22HtlaB98/
yVdF2FDJrf20WL3IBniy2aKi/yaVtEFZlGxmI7BMf9KRdqYS7ZDz/StON8Po
4qLBDRcqKU1MSk668A02LjA3Rz2gEvauHW6XGr5Bt6dOdssjKtE4b99T8/kb
2GkED6zyoJJLTX7bXnU3wwcBIz05LyrhPyoyefNxE+gP/27V86MSyWMqJnS/
r9AVUe1gF0QlNoYZ+RTBeij5s3vtsxAqebey80yHThV0Z6bE0V5RSXtG0tu1
CSXAvWHD6cg3VLJ07NNHjaE8uPzoM2v0eyoxEVYZDTePBZOuyfYPMVTykTVy
saXnAUVNfmTqdSyV7D+VnGzrlUwpdXum9DCVSvpe1iT89iyjiIFwkEUmlbhY
x+b8EKmhHHK64qaVSyXftMIOsYzVU9g7xNklgErsD40mvj/fSBHY7yu9ooiK
54PvKgeFZgo7T213QymVyI8NUbVufaPULzuIvq2kktbrd0TSuL5TbvmnFljU
UMnmbCE2zZlvlNEXIZ8lG6hkytqewSn7jSImu39JoZlKygW2OG30a6JkxJzR
UWmlEqHLZ+46SXyl0HMO3j3wC+Nnw4o5WfY6isF2TQu5Tiop9H3So/yinHI3
h8q1pZdK1m4OrVpZCRRK2ym71QNUopMkYKPk8IniTb+aXjSG+6286sFSUx6s
9opto03heql2Hqk7KiDrR/SRK7NUkkOjHfPoqIfgjev5JBepRLOVqcV/qRmk
qOnO/StohP8fw1qk8geMOy0FRbLQyNfd8rO1fL9B3c7/kf5qGrEckhH3m+uA
lNi7J5k4aeTscuP9Hr8uyHLPGY1ZSyNy0i8uGZd3A3OO/Pnj/DSSo7RlZ8ar
Hngky3+tU5BG7NokRyksvfDiTvnfWxtopJfv8C7W5R449/lwFvMmGuF9/iN8
tXcPvApZFfp8K41cSey5eD6hG1gO9xqv2k4jS9Hq17usu0A69nPbAwka7ucM
Y211B6wNals5sotGRnkFJ2qy2mFd5kyRoSyNnOPg2XxN+wfY3V0rni1PI4P1
Li9l7ZvB+qzXhmsHaCRrpc5GxfwysOguXUw+SCMqpjEhS2HZMOGbyT1DoZHJ
P0Vi24X8IP3T1vs26jQiTJGnxIYXUjzXRO95o0kjfZ1tpzXbv1Dc2hNyKrVp
RLMkMvSlUANl5SF2qdFTNDJsNpgSmNpEIVmfHq89g3Y+PH064Tsl1fFOvoQB
jaTXrvOzmGul1CddoaucpxGu1knWSJ+fFN3OkOvHL9DIvSy+BYPLbZQG9Y5A
HVMaObZbSODd7TaKTVk+p85lfB9+RuaX639Sgopy49Sv0kjpbiNVyTs/KMMB
n7WVLGmk2X2PRdudFgqXD3+tmDWNBEZfDp/paqZkLL/YymZLI9su76moqvpK
sX6Ud6jTnkaezR9M6z5eR+lmPieZ6Ugjgs5xkh+xP2A59mPyiTONFOf1Fx1M
olN22wdkn7hLI4wPSxFPbZMoFP0x2hpXGvl9utKKf+4aOPGE7rjtjr/Pf9xq
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

     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6271490562013645`*^9, 3.6271492165895357`*^9, 3.6271493304175963`*^9, {
   3.627149400409367*^9, 3.6271494226530137`*^9}, {3.6271499883259983`*^9, 
   3.6271499919484196`*^9}, {3.6271500513060813`*^9, 3.627150054844446*^9}, {
   3.6271500946780634`*^9, 3.627150106560003*^9}, {3.627150141668462*^9, 
   3.6271501602118545`*^9}, {3.627150199728259*^9, 3.627150235100894*^9}, 
   3.6271503782575536`*^9, 3.6271504406322317`*^9, 3.627150560524344*^9, {
   3.6271507143231134`*^9, 3.627150719522588*^9}, 3.6271508398619986`*^9, {
   3.627150891190296*^9, 3.627150916278062*^9}, {3.627150947520938*^9, 
   3.627150963654719*^9}, {3.627150996003335*^9, 3.6271512160710773`*^9}, {
   3.6271555519616723`*^9, 3.6271555620974455`*^9}, {3.627156394921487*^9, 
   3.6271564086396494`*^9}, {3.6271924982724266`*^9, 3.6271925666721315`*^9}, 
   3.627192880282686*^9, 3.6271929716377306`*^9, {3.6271930077038307`*^9, 
   3.627193015117784*^9}, {3.6271932383499494`*^9, 3.627193272029454*^9}, {
   3.6271933398267574`*^9, 3.627193346542245*^9}, {3.6271934119212866`*^9, 
   3.627193475963077*^9}, {3.6271954315448065`*^9, 3.6271954360988493`*^9}, {
   3.627197307416922*^9, 3.6271973242881975`*^9}, 3.6271973622095366`*^9, 
   3.6271973985718327`*^9, 3.62719749643923*^9, 3.6271975334369497`*^9, {
   3.6271975994800835`*^9, 3.6271976198887177`*^9}, 3.6271976557056503`*^9, 
   3.627197720084672*^9, 3.6271977545597086`*^9, {3.6271978528443794`*^9, 
   3.6271979455203085`*^9}, 3.62719800715149*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{"x_", ",", "y_", ",", "\[Gamma]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Gamma]", " ", 
    SuperscriptBox["x", "2"]}], "+", "y"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"x", ",", "\[Gamma]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "1", ",", "3", ",", ".5"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", "Plot"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6257320810492706`*^9, 3.625732148671138*^9}, {
  3.6257322023582087`*^9, 3.6257322040313044`*^9}, {3.62575705807491*^9, 
  3.6257570593027306`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
edk=
     "]], LineBox[CompressedData["
1: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
ZIaGpA==
     "]], LineBox[CompressedData["
1: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
jseBAw==
     "]], LineBox[CompressedData["
1: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
bWE=
     "]], LineBox[CompressedData["
1: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
FZLJ
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-3, 3}, {0., 26.999997795918418`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6257320979882393`*^9, 3.625732130020071*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       SuperscriptBox["t", 
        RowBox[{"1", "/", "2"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        SuperscriptBox["t", 
         RowBox[{"1", "/", "2"}]], "+", ".5"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.626677714660096*^9, 3.626677835113986*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
gHk=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
i9g=
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{0., 1.}, {0., 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6266777648229656`*^9, {3.6266777982718782`*^9, 3.626677836047039*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Eq1", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"m", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], " ", "\[Equal]", " ", 
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"y", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}], 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], " ", "+", " ", 
     SubscriptBox["F", "x1"], " ", "+", 
     SubscriptBox["F", "x2"], " ", "+", 
     SubscriptBox["F", "x3"], " ", "+", 
     SubscriptBox["F", "x4"]}]}], "/.", "rules"}]}]], "Input",
 CellChangeTimes->{{3.6271051504494157`*^9, 3.6271051509184427`*^9}}],

Cell[BoxData[
 RowBox[{"Eq2", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"m", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"y", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], " ", "\[Equal]", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "m"}], " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}], " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], " ", "+", " ", 
     SubscriptBox["F", "y1"], "+", " ", 
     SubscriptBox["F", "y2"], "+", " ", 
     SubscriptBox["F", "y3"], "+", " ", 
     SubscriptBox["F", "y4"]}]}], "/.", "rules"}]}]], "Input",
 CellChangeTimes->{{3.6271051504494157`*^9, 3.6271051554887037`*^9}}],

Cell[BoxData[
 RowBox[{"Eq3", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["J", "z"], 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], " ", "\[Equal]", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["l", "f"], 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["F", "y1"], " ", "+", " ", 
        SubscriptBox["F", "y2"]}], ")"}]}], " ", "-", " ", 
     RowBox[{
      SubscriptBox["l", "r"], "*", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["F", "y3"], " ", "+", " ", 
        SubscriptBox["F", "y4"]}], ")"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Omega]", "t"], "/", "2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["F", "x1"]}], " ", "+", " ", 
        SubscriptBox["F", "x2"], " ", "-", " ", 
        SubscriptBox["F", "x3"], " ", "+", " ", 
        SubscriptBox["F", "x4"]}], ")"}]}]}]}], "/.", "rules"}]}]], "Input",
 CellChangeTimes->{{3.6271051504494157`*^9, 3.627105159629941*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eq4", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["e", "\[Psi]"], "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], "\[Equal]", 
     RowBox[{
      RowBox[{"m", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], "-", 
      RowBox[{"m", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Psi]", "d"], "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}]}]}], "/.", "vRule2"}], "/.",
    "rules"}]}]], "Input",
 CellChangeTimes->{{3.6271051504494157`*^9, 3.627105164059194*^9}, 
   3.6271053691309233`*^9, {3.627106269751436*^9, 3.627106319231266*^9}, {
   3.6271074499999423`*^9, 3.6271074755444036`*^9}, {3.6271927544536104`*^9, 
   3.627192758595374*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2050.`", " ", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["e", "\[Psi]"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"2050.`", " ", 
    RowBox[{
     SuperscriptBox["\[Psi]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   FractionBox[
    RowBox[{"2050.`", " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"2.`", " ", 
         RowBox[{
          SuperscriptBox["x", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["x", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["y", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}]]], "-", 
       FractionBox[
        RowBox[{"1.`", " ", 
         RowBox[{"x", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{
             SuperscriptBox["x", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["x", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{
             SuperscriptBox["y", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], " ", 
            RowBox[{
             SuperscriptBox["y", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["x", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["y", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}], ")"}], 
         RowBox[{"3", "/", "2"}]]]}], ")"}]}], 
    SqrtBox[
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"4.`", " ", 
        SuperscriptBox[
         RowBox[{"x", "[", "t", "]"}], "2"]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["x", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["y", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], 
         "2"]}]]}]]]}]}]], "Output",
 CellChangeTimes->{
  3.627192761004982*^9, {3.6271928710705347`*^9, 3.6271928732349763`*^9}, 
   3.627193210864582*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Eq5", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["e", "y"], "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], "\[Equal]", 
     RowBox[{
      RowBox[{"m", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"y", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "1"}], "}"}]}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["e", "\[Psi]"], "[", "t", "]"}], "]"}]}], " ", "+", " ", 
      RowBox[{"m", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "1"}], "}"}]}], "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["e", "\[Psi]"], "[", "t", "]"}], "]"}]}]}]}], "/.", 
    "rules"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.6271051504494157`*^9, 3.6271051674393873`*^9}, {
  3.6271074623196473`*^9, 3.6271074649487977`*^9}}]
},
WindowSize->{1350, 685},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
Magnification:>1.4 Inherited,
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (September 9, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 49434, 1237, 2311, "Input"],
Cell[50017, 1261, 1620, 24, 41, "Output"],
Cell[51640, 1287, 1694, 26, 58, "Output"],
Cell[53337, 1315, 1593, 23, 41, "Output"],
Cell[54933, 1340, 63622, 1200, 297, "Output"],
Cell[118558, 2542, 80747, 1371, 342, "Output"],
Cell[199308, 3915, 116086, 1952, 344, "Output"],
Cell[315397, 5869, 138825, 2325, 340, "Output"],
Cell[454225, 8196, 69027, 1161, 349, "Output"],
Cell[523255, 9359, 69800, 1174, 344, "Output"],
Cell[593058, 10535, 61066, 1008, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[654161, 11548, 759, 21, 70, "Input"],
Cell[654923, 11571, 30083, 509, 337, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[685043, 12085, 517, 16, 45, "Input"],
Cell[685563, 12103, 5287, 99, 626, "Output"]
}, Open  ]],
Cell[690865, 12205, 899, 26, 42, "Input"],
Cell[691767, 12233, 926, 27, 42, "Input"],
Cell[692696, 12262, 1148, 35, 42, "Input"],
Cell[CellGroupData[{
Cell[693869, 12301, 1052, 30, 42, "Input"],
Cell[694924, 12333, 2738, 80, 127, "Output"]
}, Open  ]],
Cell[697677, 12416, 1116, 33, 42, "Input"]
}
]
*)
,
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"2050.`", " ", 
       RowBox[{
        SuperscriptBox["y", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"2050.`", " ", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"3344.`", " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0.`"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "\[Psi]"}], "}"}], ",", "t"}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.6256842612436047`*^9, 3.6256843546740375`*^9, 3.6256844425637636`*^9, 
   3.625684541578928*^9, 3.62568476655726*^9, 3.6256848393619084`*^9, 
   3.625684987031582*^9, {3.6256871258567557`*^9, 3.6256871363967967`*^9}, 
   3.6257214857782536`*^9, 3.625729540639967*^9, 3.6257299095350666`*^9, {
   3.6257310984170666`*^9, 3.6257311222054276`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVjHsw2wcAx1P1aOuO0ocwKZtWpepVsXgmXxXvRyKCaGgrs+p0Xdxsum5l
zlA7VhxVKuyQdQtaU6Oj6rGRIiE/2pu1wjqqLZmuZ2ShxeyPz33u88/nbaGI
+74OiUTy3uJ/i3PbDapEXYxsW7a5Cz2A+SohPoG2b42paFL3DDjmYNSrQ6Lv
aIjlfnb8mLIMSS5ygcJ5L3ze5K4XVNfAvy9CLpJaoFdT1OqrK4FFudVZxoQ1
uu1MtjnrSmHBVUSOUg7Ce/yse1PZTdR+4aRf2nAY2QarPhFuLThhU73Yb2uP
3XUX36vNa4U4kulNSnbEUR11vW99G1o18iM/a5zxrbH6h6w/7kB12VS9XHUM
2piVqGsvOmDFn2a9cKfh2FcvyQcm7+LQKT1djdYNSo8JQ++FexBJZek7quig
tDBFNkM9yDgyG+F22gONqlWY/tkLyUJOL5nihQvXrc3Gxvpg/LJ3jtTlDUrT
wveaxl/AsOOnbs9kILFQdVlc8it+H2fF6pkA7Cuuk+cT+/HPUUNq+TKwNigL
/9JrANdtywJ1HvriTR5RkbRLhqe+Cz2pkuOQlvaYrvbLUKRdTPkwzw8TTosJ
zPz7UBHdopQ4FgKvFn+yRh9EexC3z8/OH8w0uXjv9CCWBKX+DTsC4PRTFyW+
YAhEca3NnscBUM1P/ltiO4zdiQm0nfcCkVxZNt12f3jrN1nyuCoIw6qlJ90n
5QgRHg6+dS4YOa9OPXefk8OiyNrVODwELvPN/XtSFSicepb+sVUo0vCw7aBa
gQK5yKBlMRT6QdQZScII/uLdGL40Ega2pXWuzoMR/L0pfR5SEw4WVbfDyHMU
vAAB/UZWBKplXq876kYhuPXoyXYeG5KJ5b5H66PQnvjmXI0JB8YbjUbrHCXS
mnSztmVzgMUVP0+JEj1XhH1zCxzcntW4nlErcZdhJi6Oj0TnmTHzdjKBTIYD
haqIxPrUkCyDTsBUSZUfp3HRuab4fINDINYhw9TmOy6sVx38D31A4Lzlnbwc
oyhEsTaGki8RCBZwax98GoXi051CWiGB35JZ0fNzUVDmmBnOVRKg6VHezYrg
YWl/M+mjegJ+qWE/TvXw0GspKPBqIEC2nyLsnKKRGVrBjLlJoDudd2ClPBoB
iSLhrq3eV/yOXr5BDGZU+m3eUgI+nhNkcWoMmlPpsyl1BPbfnhlIn4lB8k62
0YVrBNouss2Z3FjwqbFub31NwHa8rjK/MxYn6c/cMj4jEKgNa62w50OWFKRe
ERLwaJ5apV7lY8SAHFcUSoBh/lS7ucnH6ypOXJ0zgf8APJbEDg==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {0., 
                    17077.347631524775`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVjHsw2wcAx1P1aOuO0ocwKZtWpepVsXgmXxXvRyKCaGgrs+p0Xdxsum5l
zlA7VhxVKuyQdQtaU6Oj6rGRIiE/2pu1wjqqLZmuZ2ShxeyPz33u88/nbaGI
+74OiUTy3uJ/i3PbDapEXYxsW7a5Cz2A+SohPoG2b42paFL3DDjmYNSrQ6Lv
aIjlfnb8mLIMSS5ygcJ5L3ze5K4XVNfAvy9CLpJaoFdT1OqrK4FFudVZxoQ1
uu1MtjnrSmHBVUSOUg7Ce/yse1PZTdR+4aRf2nAY2QarPhFuLThhU73Yb2uP
3XUX36vNa4U4kulNSnbEUR11vW99G1o18iM/a5zxrbH6h6w/7kB12VS9XHUM
2piVqGsvOmDFn2a9cKfh2FcvyQcm7+LQKT1djdYNSo8JQ++FexBJZek7quig
tDBFNkM9yDgyG+F22gONqlWY/tkLyUJOL5nihQvXrc3Gxvpg/LJ3jtTlDUrT
wveaxl/AsOOnbs9kILFQdVlc8it+H2fF6pkA7Cuuk+cT+/HPUUNq+TKwNigL
/9JrANdtywJ1HvriTR5RkbRLhqe+Cz2pkuOQlvaYrvbLUKRdTPkwzw8TTosJ
zPz7UBHdopQ4FgKvFn+yRh9EexC3z8/OH8w0uXjv9CCWBKX+DTsC4PRTFyW+
YAhEca3NnscBUM1P/ltiO4zdiQm0nfcCkVxZNt12f3jrN1nyuCoIw6qlJ90n
5QgRHg6+dS4YOa9OPXefk8OiyNrVODwELvPN/XtSFSicepb+sVUo0vCw7aBa
gQK5yKBlMRT6QdQZScII/uLdGL40Ega2pXWuzoMR/L0pfR5SEw4WVbfDyHMU
vAAB/UZWBKplXq876kYhuPXoyXYeG5KJ5b5H66PQnvjmXI0JB8YbjUbrHCXS
mnSztmVzgMUVP0+JEj1XhH1zCxzcntW4nlErcZdhJi6Oj0TnmTHzdjKBTIYD
haqIxPrUkCyDTsBUSZUfp3HRuab4fINDINYhw9TmOy6sVx38D31A4Lzlnbwc
oyhEsTaGki8RCBZwax98GoXi051CWiGB35JZ0fNzUVDmmBnOVRKg6VHezYrg
YWl/M+mjegJ+qWE/TvXw0GspKPBqIEC2nyLsnKKRGVrBjLlJoDudd2ClPBoB
iSLhrq3eV/yOXr5BDGZU+m3eUgI+nhNkcWoMmlPpsyl1BPbfnhlIn4lB8k62
0YVrBNouss2Z3FjwqbFub31NwHa8rjK/MxYn6c/cMj4jEKgNa62w50OWFKRe
ERLwaJ5apV7lY8SAHFcUSoBh/lS7ucnH6ypOXJ0zgf8APJbEDg==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {0., 
                    17077.347631524775`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"y", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQPad1G/vs/D12DFDwITYm1kT0lz2Mf8565xI2PW4H
GD/F8HT0GQMRON/1oN/p/JVScL7UNPkMu+sKCH7QmcBzsipw/sJqfbbJq9Th
/CjluW+PqGnD+XMC7W0Y0vXg/M3fTmvt+GYA599pF3r9ZbYRnC8fcc/lhYUJ
nK8az8ry7YcpnJ+/8lgZx2xzOL9W67GfaYIlnL/kVcsBCVlrOJ//3YGnDHts
4Hw7jYgC5jo7OP/GJZdwVkEHOP+zDrfmtC8I/iy1Ke5MVxzh/CeOr/YXLHGC
8/t/vM3KaXNG+OfCvvysSBc4f5tH0EFnDVc4/1P0ZNdVHG5w/oUJC5WFbyH4
AomxJpx73ZHMuz3x1mwPON8rSd1zXbYnnC/Vr2DM7+sF5/fcfVZWJO8N53ef
zmff+BbBfxOy7FTNWR84//3/lc+95vnC+SFu0ebLGvzg/Oh1Nx8wh/jD+T+i
erPnCQbA+cVrWBoYmxD8/X1JB5++QvB324nPmRATCOfX2enKap5B8IXOa552
MgmC88N1a4WUlyL4uTLb21r4guF8z+ighZdLEfxr6S6hL58i+CassmYNfiFw
vnOBz4a7+xF8Ce27FzT0Q+H8fWUhcl+nIfiiE5RYO9jD4Hxbq+sScwoQfLFN
j46WPULwt1b6S9oHhcP5apcWzezYheC7//DZPEM7As63XH/3p+ZUBN9O8smP
//8RfADeZs10
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {-1., 1.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQPad1G/vs/D12DFDwITYm1kT0lz2Mf8565xI2PW4H
GD/F8HT0GQMRON/1oN/p/JVScL7UNPkMu+sKCH7QmcBzsipw/sJqfbbJq9Th
/CjluW+PqGnD+XMC7W0Y0vXg/M3fTmvt+GYA599pF3r9ZbYRnC8fcc/lhYUJ
nK8az8ry7YcpnJ+/8lgZx2xzOL9W67GfaYIlnL/kVcsBCVlrOJ//3YGnDHts
4Hw7jYgC5jo7OP/GJZdwVkEHOP+zDrfmtC8I/iy1Ke5MVxzh/CeOr/YXLHGC
8/t/vM3KaXNG+OfCvvysSBc4f5tH0EFnDVc4/1P0ZNdVHG5w/oUJC5WFbyH4
AomxJpx73ZHMuz3x1mwPON8rSd1zXbYnnC/Vr2DM7+sF5/fcfVZWJO8N53ef
zmff+BbBfxOy7FTNWR84//3/lc+95vnC+SFu0ebLGvzg/Oh1Nx8wh/jD+T+i
erPnCQbA+cVrWBoYmxD8/X1JB5++QvB324nPmRATCOfX2enKap5B8IXOa552
MgmC88N1a4WUlyL4uTLb21r4guF8z+ighZdLEfxr6S6hL58i+CassmYNfiFw
vnOBz4a7+xF8Ce27FzT0Q+H8fWUhcl+nIfiiE5RYO9jD4Hxbq+sScwoQfLFN
j46WPULwt1b6S9oHhcP5apcWzezYheC7//DZPEM7As63XH/3p+ZUBN9O8smP
//8RfADeZs10
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {-1., 1.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"\[Psi]", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQPad1G/vs/D12DFDwITYm1kT0lz2Mf8565xI2PW4H
GD/F8HT0GQMRON/1oN/p/JVScL7UNPkMu+sKCH7QmcBzsipw/sJqfbbJq9Th
/CjluW+PqGnD+XMC7W0Y0vXg/M3fTmvt+GYA599pF3r9ZbYRnC8fcc/lhYUJ
nK8az8ry7YcpnJ+/8lgZx2xzOL9W67GfaYIlnL/kVcsBCVlrOJ//3YGnDHts
4Hw7jYgC5jo7OP/GJZdwVkEHOP+zDrfmtC8I/iy1Ke5MVxzh/CeOr/YXLHGC
8/t/vM3KaXNG+OfCvvysSBc4f5tH0EFnDVc4/1P0ZNdVHG5w/oUJC5WFbyH4
AomxJpx73ZHMuz3x1mwPON8rSd1zXbYnnC/Vr2DM7+sF5/fcfVZWJO8N53ef
zmff+BbBfxOy7FTNWR84//3/lc+95vnC+SFu0ebLGvzg/Oh1Nx8wh/jD+T+i
erPnCQbA+cVrWBoYmxD8/X1JB5++QvB324nPmRATCOfX2enKap5B8IXOa552
MgmC88N1a4WUlyL4uTLb21r4guF8z+ighZdLEfxr6S6hL58i+CassmYNfiFw
vnOBz4a7+xF8Ce27FzT0Q+H8fWUhcl+nIfiiE5RYO9jD4Hxbq+sScwoQfLFN
j46WPULwt1b6S9oHhcP5apcWzezYheC7//DZPEM7As63XH/3p+ZUBN9O8smP
//8RfADeZs10
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {-1., 1.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQPad1G/vs/D12DFDwITYm1kT0lz2Mf8565xI2PW4H
GD/F8HT0GQMRON/1oN/p/JVScL7UNPkMu+sKCH7QmcBzsipw/sJqfbbJq9Th
/CjluW+PqGnD+XMC7W0Y0vXg/M3fTmvt+GYA599pF3r9ZbYRnC8fcc/lhYUJ
nK8az8ry7YcpnJ+/8lgZx2xzOL9W67GfaYIlnL/kVcsBCVlrOJ//3YGnDHts
4Hw7jYgC5jo7OP/GJZdwVkEHOP+zDrfmtC8I/iy1Ke5MVxzh/CeOr/YXLHGC
8/t/vM3KaXNG+OfCvvysSBc4f5tH0EFnDVc4/1P0ZNdVHG5w/oUJC5WFbyH4
AomxJpx73ZHMuz3x1mwPON8rSd1zXbYnnC/Vr2DM7+sF5/fcfVZWJO8N53ef
zmff+BbBfxOy7FTNWR84//3/lc+95vnC+SFu0ebLGvzg/Oh1Nx8wh/jD+T+i
erPnCQbA+cVrWBoYmxD8/X1JB5++QvB324nPmRATCOfX2enKap5B8IXOa552
MgmC88N1a4WUlyL4uTLb21r4guF8z+ighZdLEfxr6S6hL58i+CassmYNfiFw
vnOBz4a7+xF8Ce27FzT0Q+H8fWUhcl+nIfiiE5RYO9jD4Hxbq+sScwoQfLFN
j46WPULwt1b6S9oHhcP5apcWzezYheC7//DZPEM7As63XH/3p+ZUBN9O8smP
//8RfADeZs10
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {-1., 1.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6256842612436047`*^9, 3.6256843546740375`*^9, 3.6256844425637636`*^9, 
   3.625684541578928*^9, 3.62568476655726*^9, 3.6256848393619084`*^9, 
   3.625684987031582*^9, {3.6256871258567557`*^9, 3.6256871363967967`*^9}, 
   3.6257214857782536`*^9, 3.625729540639967*^9, 3.6257299095350666`*^9, {
   3.6257310984170666`*^9, 3.625731122347436*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
OSQRGg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF0GtIEwAQAOD5wNKclOUjI9Fp6I9BaiYj002bj9LpXD5mZS1fm23mbJaG
YmLig6iNoCCWW7bZyqgZpiSa5so0MiZDKkV8EFMr0/mYU3Ougrw7OI6P4w7u
vDMLWDnWBAKB8Tf/VZLYrJB59oQT/kdMoco+nyenbjlpkiz256nBqffmk+x4
3WC2kXnIyNWC0xVWylnuOPjUevqZGe48eORANWWKawE3llpt2mTspG2Z2CJX
qxLdwfejN6wDiV5gWWblN9cYX3BYw3T2B4o/uP/WI6ntNTJ4JPf87UZ2AFju
ds5PzQjCvtzezSwIBme1+6QF8kLA9aUCGj+dAma4ZFZ9LzoCjqP1uScIjoK7
I4e3mW6GgxdXHAd1LBqY7JJDr4+PAHvLd0/VnY4Ev15YU+exj4H3NIeo+Bfo
4LcaB5GwOArsIXPl8i5F4359SW1lZQxYv+ysE1fEglfYdIP86nGwxn8gVFdz
Any454badD0O/9HbwKTeiQf/2J/4vq6BAXanBmf3SRPAVgMFB/2eJoL7JYW7
wpKZ4E79FSN3EH1L6GfwSUsCt4wvlQ8Poduq+L5eGSww0cmSwRlFSyLGrEjp
J8GGJl5n0QRaueq0o+dsMt5XxhHKptFLT8xUc34K2LazTZHyE71ks8+TKkrF
+QApmbSIVthxG6svpoHnnceCy4xosU0hmy9ig+nWv5rqL6NXCXlmbTGas8l5
GFyGDlpjzpqr0J/nAiokd9GeIwZVazta91WwPt2BrvkyE+/RhTYMTSyUa9Aa
7WBo7Ed0bm+zdmQU7fGOTCKOo7Wax0XUSTTlzYO9Sj3aoUOSlT+H7mp3bJMb
0KJXtdt1i+jR1opnISa05OWGhbeGjmopYUl/o9dfLCs/mdHPm4UmiwX9B0zK
IxE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"x,y\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100}, {0., 17078.35214373996}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"x(t)\"", "\"y(t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6256842612436047`*^9, 3.6256843546740375`*^9, 3.6256844425637636`*^9, 
   3.625684541578928*^9, 3.62568476655726*^9, 3.6256848393619084`*^9, 
   3.625684987031582*^9, {3.6256871258567557`*^9, 3.6256871363967967`*^9}, 
   3.6257214857782536`*^9, 3.625729540639967*^9, 3.6257299095350666`*^9, {
   3.6257310984170666`*^9, 3.625731122461442*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVjHk4lAkAhx2tTq1ahbGJSfG0tig062h+otgY85liPjmSMFOomVyzSJIc
2zHz7Fa7JSbrirbomZrNlc9sVJvrkWpZUW2iXWVyNjJm7R/v8/7zPq9F+GFO
pI6WlhZrjv9NF6uLCswat/Z0qCY0GhE8hWULY/lS5rWy9cdlahH8XtqIrfmV
zNS0oCW8TyIEXBzx0+M3ML+0qae3TYpAThCbJ3jtzIjsdPbldyIEFmkXD/P6
me9c55cz/hJhz3Rg8BBvhDlTYRgslIvQszaL8YanYa4+uVHxKkaEkhTtWd0Q
A8TGmsgiW5OgL5NWlrGNkb7YjkhmJOHyjhkdO31z0OyLGpNLE1EQnvH3Sk9L
NEgeck0XJMK1cDDiIcMaVkWrLrHiE/DgbGnevGM2+OntWm3zrnj0RO37oYS0
hbgmx6XPMR5So71WlaxN2OlmYrmhOA490oVG6hh7GMyE2Jp9Fof91Wu4dnxH
XI7pGJIKjiA/JQbRgQz8ystP0O8XgrUiPPNtvBMeXDCzMnUTwhv3jX1jXFCa
0ppZc12Ahm3d86fObMWZc7bzp/UFGJ1c0tHJAaYO99bufHUINisiPfJ93MCl
yxrv1cfCQvrFm9ygbeh0GTU4lh6D+g+qygOkO7oVp+8Ek9EwrHIsiz7ogckq
cXmy0UH8rlgUJ0jaDpNbnu6CXj5oBSt5/CM7QNGDHHLlPNgMiHIyMjyRoXoq
eJUUhYHx5Z3idC+0ON+Yt9c3EpOkh1L63bew+NHJTbY+AgrrFufO7J04zdl4
3/N9OBwaT1VOnfBGytFjJZrmfdjfVEgwz/sg04DROpUVhn9WsZtzC1mwE3o7
iy+GwphpH3E/zxdRPz8/ncAOhnbL4Y1W19hoFkPY+zgQDyTCZa67CTiG7tH7
PoOLuoHECV4HgbqAvuE3Lv44K7BSruH64dDqzVH3mjiQ9Y+ldXf5YUPDVsmQ
iIA8M9rSPIQDp1DHS7QJb+gv1YSE9XLw1XBwwgcfT0jc+rTpgbvg1cYdW1e3
DcoKfl38i104Xjj0da3EGcUfly5uDN2NKzrqLe6cTXBIDRMUDO6Gwquclpdn
jrFyNVMd6w+l0c3k62kfG+bVyYv8//XH+JOCMYMDa6kxXVMzZlwAbp2o6lhT
Zk852ObZ0EcDEAh5RLHSlSrS45VkHeKCqMjtlp10p0aW99mnTnBBO7cyyDDR
ixLrCsnoOBKt7Q4pg8tYlIfOu4r8BBLMkRUlKetY1EetA+r2JBJlSyfbPndm
UWGzYb/Yp5IQseR0RgSL2qQihtWZJGweOf6RI2dRT9/bpksukDjXvMVkfZAv
ZdajLLtdTSKi/pvfYorZVOefMdODtSRaek1ealWzqexnQz60uyRcZ1SLzrey
KWXXiw9pChLGzjWh9ZNsStHe4ez1iERU8CrdbEuCimqqau/pJUHrya94lkhQ
tHs2dP1+Em1vzzRYHCeodsXVeOZLElmqo13RpwiKQV0xKR4gMW4cOquREtSi
Wsn+2PdzPdeMY/2QoO5WL5FLlSQyeEt5Rx4TVNydnAWdoySckmZT6p4TVO/t
9OuOUySuXugrIUYJSnJrRsNXkQgubau5NENQ22UiTt4nEobyu+2v9fyo6Zvj
xa3quX/TjdcblvlRN6oEUxrN3P9JgUpk6kf9B8zeTW4=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF0GtIEwAQAOD5wNKclOUjI9Fp6I9BaiYj002bj9LpXD5mZS1fm23mbJaG
YmLig6iNoCCWW7bZyqgZpiSa5so0MiZDKkV8EFMr0/mYU3Ougrw7OI6P4w7u
vDMLWDnWBAKB8Tf/VZLYrJB59oQT/kdMoco+nyenbjlpkiz256nBqffmk+x4
3WC2kXnIyNWC0xVWylnuOPjUevqZGe48eORANWWKawE3llpt2mTspG2Z2CJX
qxLdwfejN6wDiV5gWWblN9cYX3BYw3T2B4o/uP/WI6ntNTJ4JPf87UZ2AFju
ds5PzQjCvtzezSwIBme1+6QF8kLA9aUCGj+dAma4ZFZ9LzoCjqP1uScIjoK7
I4e3mW6GgxdXHAd1LBqY7JJDr4+PAHvLd0/VnY4Ev15YU+exj4H3NIeo+Bfo
4LcaB5GwOArsIXPl8i5F4359SW1lZQxYv+ysE1fEglfYdIP86nGwxn8gVFdz
Any454badD0O/9HbwKTeiQf/2J/4vq6BAXanBmf3SRPAVgMFB/2eJoL7JYW7
wpKZ4E79FSN3EH1L6GfwSUsCt4wvlQ8Poduq+L5eGSww0cmSwRlFSyLGrEjp
J8GGJl5n0QRaueq0o+dsMt5XxhHKptFLT8xUc34K2LazTZHyE71ks8+TKkrF
+QApmbSIVthxG6svpoHnnceCy4xosU0hmy9ig+nWv5rqL6NXCXlmbTGas8l5
GFyGDlpjzpqr0J/nAiokd9GeIwZVazta91WwPt2BrvkyE+/RhTYMTSyUa9Aa
7WBo7Ed0bm+zdmQU7fGOTCKOo7Wax0XUSTTlzYO9Sj3aoUOSlT+H7mp3bJMb
0KJXtdt1i+jR1opnISa05OWGhbeGjmopYUl/o9dfLCs/mdHPm4UmiwX9B0zK
IxE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"vx,vy\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100}, {-68.4292587329019, 399.999990440219}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ax(t)\"", "\"ay(t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6256842612436047`*^9, 3.6256843546740375`*^9, 3.6256844425637636`*^9, 
   3.625684541578928*^9, 3.62568476655726*^9, 3.6256848393619084`*^9, 
   3.625684987031582*^9, {3.6256871258567557`*^9, 3.6256871363967967`*^9}, 
   3.6257214857782536`*^9, 3.625729540639967*^9, 3.6257299095350666`*^9, {
   3.6257310984170666`*^9, 3.625731122548447*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF03tMU2cYBnDKbeiEMcDSAENsERiigGu5TOC85VrupXdAtKvVcim3ocLm
ZYwhGwGFqEQ2EEYQKmKAYCZjYiYaBSdDJGYZjUGMQ9gNOy4yDJVt2Xs+/jg5
+eWc7+R9zvd8W1X5ogOmJiYmqn+v/+7sGmNrk+tgWAnUB/UN2N1Me5W6Z1bz
gpqM+N/6bRVBzzVr1DTaxYJTbQywgnx8v+0o47VZhi1ko1PPj/0klTmADG19
tblbl8wCCs12G9Gb81wgEN0YvWrqb+0G0egLEmqB480GG3STquwZM8YdGOg5
Bs/dQHkADx3aMqO+F+QFH6NNWTEmM+ne0IEePt3eYP6JD1Sgw7q4U571O8k8
+oMfnGlT+EEwOoSa2uMt9gcButlxn2d34i7Yix5I526RZbxH8uubNzgatVzI
oue9wgw8n82DEPT+fo7cPzMAXNClTsPxo8pAcKTzHtVCTmoQeKAPCzQqb00w
RKITN6vKfz30PmjQI5fPjTYU7IZydDwMsZK0IVCHPskX1rKPh8JZ9PfhE28s
nwqDPLSofkU8+iVF1s+/3DQ2LgJoR79lGbzx2wcAF9E+mw9EXkjgQxXaIy2k
zv4RH1Torc32zyvTwyEAnT9seX9lIhwc0Df+WunOUkSAOXpWWN+Z/TQC7NAO
PQG6nOxISEJr+92s5wyRQPfx9q2NRQXFUXASnddjm/vHYhScQDs1MTWZH0aT
fK2DQ8WHX0WDlJ5/uuSLsrIYCEVb/Rm1o5IhgB3o6UW78ZpSAbxL96t9+1NH
o4D066Ui0tD8USzI0Y/BitlvEge56FteI7vHP4+DQvTqYufSLxbxZB7eYFX3
8mfxsB+dcJtZ2rApASR0P+60CKm6BNL/9sKSKrVzIpn3t3eS71a2JJI+fdrF
r7vkmgQxaBbFVQ81JJH5qi3GY4s5ycSMkXxfz85kch7V189JZh2ExMO1hW+H
StY9MH1kSTO27m3bH8zfsU8h3ztd4GngyNftdulU3+u6dV99snBi4lEKJKO5
vd0PV1kiCEdfK89xd8sQkfOniuXxbzaKSH5rm7UM5WMRCNGjujnfQScxpKNr
+ZMMdqoYDqLhCGff/UYx2Q/D5cyBQ1Ni0KJ/eHj92VdbJKBEX/zb5s3BvRI4
Tvftu74bvq0SaKX365iyoGlGAl/T/bT3/flHbymUoRc6jJQxV0r+z+oufWHH
FSnsRJsPXGuV/i4FW/r5k1llnK8MNtDrzZxdqSIZeNHfd0pv6+mVkXw8vwYf
9ryM9EXrzMiS+MlBTffbUtNWkScnee5Vs3MZvXJIQ7+wm+QeW5JDCpqq0t0t
4iogAV1jVqjIKVKQ/rjqDbpv+hUQh+7qKVheW1OQfP8A2l69Mw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF0GtIEwAQAOD5wNKclOUjI9Fp6I9BaiYj002bj9LpXD5mZS1fm23mbJaG
YmLig6iNoCCWW7bZyqgZpiSa5so0MiZDKkV8EFMr0/mYU3Ougrw7OI6P4w7u
vDMLWDnWBAKB8Tf/VZLYrJB59oQT/kdMoco+nyenbjlpkiz256nBqffmk+x4
3WC2kXnIyNWC0xVWylnuOPjUevqZGe48eORANWWKawE3llpt2mTspG2Z2CJX
qxLdwfejN6wDiV5gWWblN9cYX3BYw3T2B4o/uP/WI6ntNTJ4JPf87UZ2AFju
ds5PzQjCvtzezSwIBme1+6QF8kLA9aUCGj+dAma4ZFZ9LzoCjqP1uScIjoK7
I4e3mW6GgxdXHAd1LBqY7JJDr4+PAHvLd0/VnY4Ev15YU+exj4H3NIeo+Bfo
4LcaB5GwOArsIXPl8i5F4359SW1lZQxYv+ysE1fEglfYdIP86nGwxn8gVFdz
Any454badD0O/9HbwKTeiQf/2J/4vq6BAXanBmf3SRPAVgMFB/2eJoL7JYW7
wpKZ4E79FSN3EH1L6GfwSUsCt4wvlQ8Poduq+L5eGSww0cmSwRlFSyLGrEjp
J8GGJl5n0QRaueq0o+dsMt5XxhHKptFLT8xUc34K2LazTZHyE71ks8+TKkrF
+QApmbSIVthxG6svpoHnnceCy4xosU0hmy9ig+nWv5rqL6NXCXlmbTGas8l5
GFyGDlpjzpqr0J/nAiokd9GeIwZVazta91WwPt2BrvkyE+/RhTYMTSyUa9Aa
7WBo7Ed0bm+zdmQU7fGOTCKOo7Wax0XUSTTlzYO9Sj3aoUOSlT+H7mp3bJMb
0KJXtdt1i+jR1opnISa05OWGhbeGjmopYUl/o9dfLCs/mdHPm4UmiwX9B0zK
IxE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"ax,ay\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100}, {-4.684292682927638, 0.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ax(t)\"", "\"ay(t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6256842612436047`*^9, 3.6256843546740375`*^9, 3.6256844425637636`*^9, 
   3.625684541578928*^9, 3.62568476655726*^9, 3.6256848393619084`*^9, 
   3.625684987031582*^9, {3.6256871258567557`*^9, 3.6256871363967967`*^9}, 
   3.6257214857782536`*^9, 3.625729540639967*^9, 3.6257299095350666`*^9, {
   3.6257310984170666`*^9, 3.6257311226544533`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF0GtIEwAQAOD5wNKclOUjI9Fp6I9BaiYj002bj9LpXD5mZS1fm23mbJaG
YmLig6iNoCCWW7bZyqgZpiSa5so0MiZDKkV8EFMr0/mYU3Ougrw7OI6P4w7u
vDMLWDnWBAKB8Tf/VZLYrJB59oQT/kdMoco+nyenbjlpkiz256nBqffmk+x4
3WC2kXnIyNWC0xVWylnuOPjUevqZGe48eORANWWKawE3llpt2mTspG2Z2CJX
qxLdwfejN6wDiV5gWWblN9cYX3BYw3T2B4o/uP/WI6ntNTJ4JPf87UZ2AFju
ds5PzQjCvtzezSwIBme1+6QF8kLA9aUCGj+dAma4ZFZ9LzoCjqP1uScIjoK7
I4e3mW6GgxdXHAd1LBqY7JJDr4+PAHvLd0/VnY4Ev15YU+exj4H3NIeo+Bfo
4LcaB5GwOArsIXPl8i5F4359SW1lZQxYv+ysE1fEglfYdIP86nGwxn8gVFdz
Any454badD0O/9HbwKTeiQf/2J/4vq6BAXanBmf3SRPAVgMFB/2eJoL7JYW7
wpKZ4E79FSN3EH1L6GfwSUsCt4wvlQ8Poduq+L5eGSww0cmSwRlFSyLGrEjp
J8GGJl5n0QRaueq0o+dsMt5XxhHKptFLT8xUc34K2LazTZHyE71ks8+TKkrF
+QApmbSIVthxG6svpoHnnceCy4xosU0hmy9ig+nWv5rqL6NXCXlmbTGas8l5
GFyGDlpjzpqr0J/nAiokd9GeIwZVazta91WwPt2BrvkyE+/RhTYMTSyUa9Aa
7WBo7Ed0bm+zdmQU7fGOTCKOo7Wax0XUSTTlzYO9Sj3aoUOSlT+H7mp3bJMb
0KJXtdt1i+jR1opnISa05OWGhbeGjmopYUl/o9dfLCs/mdHPm4UmiwX9B0zK
IxE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"\[Psi]\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100}, {-1., 1.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Psi](t)\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6256842612436047`*^9, 3.6256843546740375`*^9, 3.6256844425637636`*^9, 
   3.625684541578928*^9, 3.62568476655726*^9, 3.6256848393619084`*^9, 
   3.625684987031582*^9, {3.6256871258567557`*^9, 3.6256871363967967`*^9}, 
   3.6257214857782536`*^9, 3.625729540639967*^9, 3.6257299095350666`*^9, {
   3.6257310984170666`*^9, 3.6257311227474585`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF1HlMU3ccAPCWS+bAKUVowGFtUQziANcCcr1vsdxX7xaQySqsyFkEBCc6
hsdGQCFOIhOEkA6KYoBgJmPgJjgOJ0MkZhmNUYxD2KbYcQqhMhe/7/nHy8sn
75eX7+97bVNli1NMaDTawTfP/292hVFb59QbWAjVPp09NhC/Erd/Wv2SuOX7
1vrtZ3yeqdeIGOKtt5hzyo1elpCN5xuP0V+bJm6ENHTcxdHfZXJbkKOtr9e3
6WKZQKDZrGG9GW8LeKNrQ1ZNPK1ZEIK+LCXmOK5syEDXqUqe2oU6QyZ6hs5z
NhA7IAEd0DCVfMdnJwjQJsxQ2lSCK/X/oXNNNWZfuEEwOrCVO+FS/RH8gtZ/
9un5RqUHTKD9iYn9rhJPKEfX2x9waYveA0x0TwJ3qzzxY+jHfOjr37M3ZnBh
Hl13zc77YhoPwvH8wS6OwjPVC3zQxQ5DkSNJ3uBF3vdYBqTH+QCg88PUKlf1
XhChozerTv2V5wvJ6OGrF0ZqNH6Qh46EQWZMhj8cR5/mCyvZxwPgc/TPQePr
ls4GQgpaXL0sGfmWgHT07KLV6JgYoAj9gcXe9T/ce2e3zSmCy1F8yEHviPev
YjzgQxJ6Wz3jWWlCEESjs4cs7i6PB0EA+ua/y22HlPuAh54WVrekPdkHfmjb
di9depoApOiMLpb1jEEAh9G3+9bnagqC4QQ6q31j5vP5YOp+DnV26tTDIZCF
1vYOFuSvhEA8Gf9k4dclJaEQirZ8Eby7lB4GvujJeZuxiuIwKr6Zpl1P7I1h
EIheVAoM9UfDQYF+CJZ2XbQI8Ef37Rz2G/sqgqrn6nzLwp/mkdR3Xm9Z29LJ
SIhAR922K66xioJEsj/6G4REVRRo0E05hWXJjtFU/v/+MHagtOGdv2zlVzU7
xVDzwCS4yYM1MVQ+y83Hwgs4sfAK+5E+nO3u0hILz9HJ3Rek07ZCWEfOR2XO
pgCpkIo/yC/vpPi8kMpnz+SRBfWoEBrQ23fdm+1niKj5OadxMXAUIuhDs5rP
dr6uEsE36OuP506MPxCBJ5rb0XZ/lSmm5uXGqXRnVqIYXqBV4Tz+rVoxWJH7
Y8NaYtJDMVWPEd2Me6+DBPLRlfxHdHacBHRoOMI5cLdWAgNow9XUnrwJCfyE
/vV+99NLW6VwGv3dqw3v934iBSey/37svOmulcIkxsMrStLUTUlhGm3LcP/j
N1cZMPD83BUjYcyUgZis/x59zpVrMmp/mPXc0Mr+kUEX+f3xdFKEu5yKb87U
0YnIfbMtyXlwSGhs75DDUbJ/PGrc2LNy6Cbjc6QfknooqPxrLdSNZ7IU0Iy+
U87OpHcoqPq9tHnELVpQwG40UaYbyOUqYQXvU2Gao0zPVcIE2klv0H3fpYRF
dGu7ZmltTUnt8/8Ay2idOQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF0GtIEwAQAOD5wNKclOUjI9Fp6I9BaiYj002bj9LpXD5mZS1fm23mbJaG
YmLig6iNoCCWW7bZyqgZpiSa5so0MiZDKkV8EFMr0/mYU3Ougrw7OI6P4w7u
vDMLWDnWBAKB8Tf/VZLYrJB59oQT/kdMoco+nyenbjlpkiz256nBqffmk+x4
3WC2kXnIyNWC0xVWylnuOPjUevqZGe48eORANWWKawE3llpt2mTspG2Z2CJX
qxLdwfejN6wDiV5gWWblN9cYX3BYw3T2B4o/uP/WI6ntNTJ4JPf87UZ2AFju
ds5PzQjCvtzezSwIBme1+6QF8kLA9aUCGj+dAma4ZFZ9LzoCjqP1uScIjoK7
I4e3mW6GgxdXHAd1LBqY7JJDr4+PAHvLd0/VnY4Ev15YU+exj4H3NIeo+Bfo
4LcaB5GwOArsIXPl8i5F4359SW1lZQxYv+ysE1fEglfYdIP86nGwxn8gVFdz
Any454badD0O/9HbwKTeiQf/2J/4vq6BAXanBmf3SRPAVgMFB/2eJoL7JYW7
wpKZ4E79FSN3EH1L6GfwSUsCt4wvlQ8Poduq+L5eGSww0cmSwRlFSyLGrEjp
J8GGJl5n0QRaueq0o+dsMt5XxhHKptFLT8xUc34K2LazTZHyE71ks8+TKkrF
+QApmbSIVthxG6svpoHnnceCy4xosU0hmy9ig+nWv5rqL6NXCXlmbTGas8l5
GFyGDlpjzpqr0J/nAiokd9GeIwZVazta91WwPt2BrvkyE+/RhTYMTSyUa9Aa
7WBo7Ed0bm+zdmQU7fGOTCKOo7Wax0XUSTTlzYO9Sj3aoUOSlT+H7mp3bJMb
0KJXtdt1i+jR1opnISa05OWGhbeGjmopYUl/o9dfLCs/mdHPm4UmiwX9B0zK
IxE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"ax,ay\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100}, {0., 4.684292682926952}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ax(t)\"", "\"ay(t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.6256842612436047`*^9, 3.6256843546740375`*^9, 3.6256844425637636`*^9, 
   3.625684541578928*^9, 3.62568476655726*^9, 3.6256848393619084`*^9, {
   3.6256849873868217`*^9, 3.625685030029318*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF0GtIEwAQAOD5wNKclOUjI9Fp6I9BaiYj002bj9LpXD5mZS1fm23mbJaG
YmLig6iNoCCWW7bZyqgZpiSa5so0MiZDKkV8EFMr0/mYU3Ougrw7OI6P4w7u
vDMLWDnWBAKB8Tf/VZLYrJB59oQT/kdMoco+nyenbjlpkiz256nBqffmk+x4
3WC2kXnIyNWC0xVWylnuOPjUevqZGe48eORANWWKawE3llpt2mTspG2Z2CJX
qxLdwfejN6wDiV5gWWblN9cYX3BYw3T2B4o/uP/WI6ntNTJ4JPf87UZ2AFju
ds5PzQjCvtzezSwIBme1+6QF8kLA9aUCGj+dAma4ZFZ9LzoCjqP1uScIjoK7
I4e3mW6GgxdXHAd1LBqY7JJDr4+PAHvLd0/VnY4Ev15YU+exj4H3NIeo+Bfo
4LcaB5GwOArsIXPl8i5F4359SW1lZQxYv+ysE1fEglfYdIP86nGwxn8gVFdz
Any454badD0O/9HbwKTeiQf/2J/4vq6BAXanBmf3SRPAVgMFB/2eJoL7JYW7
wpKZ4E79FSN3EH1L6GfwSUsCt4wvlQ8Poduq+L5eGSww0cmSwRlFSyLGrEjp
J8GGJl5n0QRaueq0o+dsMt5XxhHKptFLT8xUc34K2LazTZHyE71ks8+TKkrF
+QApmbSIVthxG6svpoHnnceCy4xosU0hmy9ig+nWv5rqL6NXCXlmbTGas8l5
GFyGDlpjzpqr0J/nAiokd9GeIwZVazta91WwPt2BrvkyE+/RhTYMTSyUa9Aa
7WBo7Ed0bm+zdmQU7fGOTCKOo7Wax0XUSTTlzYO9Sj3aoUOSlT+H7mp3bJMb
0KJXtdt1i+jR1opnISa05OWGhbeGjmopYUl/o9dfLCs/mdHPm4UmiwX9B0zK
IxE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"\[Psi]\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100}, {-1., 1.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Psi](t)\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6256842612436047`*^9, 3.6256843546740375`*^9, 
  3.6256844425637636`*^9, 3.625684541578928*^9, 3.62568476655726*^9, 
  3.6256848393619084`*^9, 3.6256849874648714`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1: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
Ns2u8f6qKvI/Zx35Ww==
        "]]}, {
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJxF0GtIEwAQAOD5wNKclOUjI9Fp6I9BaiYj002bj9LpXD5mZS1fm23mbJaG
YmLig6iNoCCWW7bZyqgZpiSa5so0MiZDKkV8EFMr0/mYU3Ougrw7OI6P4w7u
vDMLWDnWBAKB8Tf/VZLYrJB59oQT/kdMoco+nyenbjlpkiz256nBqffmk+x4
3WC2kXnIyNWC0xVWylnuOPjUevqZGe48eORANWWKawE3llpt2mTspG2Z2CJX
qxLdwfejN6wDiV5gWWblN9cYX3BYw3T2B4o/uP/WI6ntNTJ4JPf87UZ2AFju
ds5PzQjCvtzezSwIBme1+6QF8kLA9aUCGj+dAma4ZFZ9LzoCjqP1uScIjoK7
I4e3mW6GgxdXHAd1LBqY7JJDr4+PAHvLd0/VnY4Ev15YU+exj4H3NIeo+Bfo
4LcaB5GwOArsIXPl8i5F4359SW1lZQxYv+ysE1fEglfYdIP86nGwxn8gVFdz
Any454badD0O/9HbwKTeiQf/2J/4vq6BAXanBmf3SRPAVgMFB/2eJoL7JYW7
wpKZ4E79FSN3EH1L6GfwSUsCt4wvlQ8Poduq+L5eGSww0cmSwRlFSyLGrEjp
J8GGJl5n0QRaueq0o+dsMt5XxhHKptFLT8xUc34K2LazTZHyE71ks8+TKkrF
+QApmbSIVthxG6svpoHnnceCy4xosU0hmy9ig+nWv5rqL6NXCXlmbTGas8l5
GFyGDlpjzpqr0J/nAiokd9GeIwZVazta91WwPt2BrvkyE+/RhTYMTSyUa9Aa
7WBo7Ed0bm+zdmQU7fGOTCKOo7Wax0XUSTTlzYO9Sj3aoUOSlT+H7mp3bJMb
0KJXtdt1i+jR1opnISa05OWGhbeGjmopYUl/o9dfLCs/mdHPm4UmiwX9B0zK
IxE=
        "]]}}, 
     PointBox[{79.18037281656132, 3911.113648538354}], {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1:eJx12Hk01fn/B3CkSIsSSRhLlLIkKkbhlSVrXNeStAxSqEilRKWbpEL2LKNs
SSSRfc2HFm1ESVFkshWmMIlo+fqd0+v9Pmfm/P7qPM77ds917/vzWp4yzvvZ
u3i4uLjaubm4/u9fR7NEvrH5SqCaudAKxi4x3d73QwczVhLvK+HimjaiSs/b
do/Pv7uWuGMzb37SOw3itubUvYrcvxM/s9KVL5XSIlaTCA4a5V1HvPvUSo0Y
H+rY3uY+tX7q+2Z+8U3b1hPv+PFkSDqWOmznwdRqfm3i2w9E2TuOUdsd23M9
p5BaNtq5INFRh7jcsGjWQAJ1/3WHyvOzdYkDtucItxpSmx6+Klk3TK3tId+n
pgbES3xTB5afo+Y7Izkk3UGdrOFl7CW6gfi0/qC5qwe15Bedq8UZ1Nw8FVk5
36gTCufwfF+jR/xQrCA/MZNa5NCbHfr3qI1enRJ8p6FP/Da42XXVAeo7sax9
CnXUW02u3PXhMiDeYCv10NOOWt4psX7XDeqqBR/li3qobe+DP6+UIfG6Z5UB
k97UZxV7Va5EUkt1aJ4deURdEhHydgPvRmJL/Q6NSG3qvlHViM4j1OqWDuvP
RVPXc+fEvHxCvavw5+DSGUbEt+YsT2iQpTZhjg1LbqP+62CDicdFauUnY6PC
+dQLXh2amMVvTJwdfJ+9dQO1vrZY9nU/6mUmF3NTG6mrJ/v4hmeaEG+5qeUI
+tTa5cUuGgnUL/bNrAp6Rl129EzNCQVTYivFV2L1TtQaGja/3S2hfvoh48iC
YeqCUdljAkZmxHHcySe5L1OvKhx+yWqhFmE83hgpmRN/ffyhUyeAuv3lrp41
r6gFtWfFNptuIv7H+Oyfj1OoX9pMS679Ql3lePJKmbkFceq+yWt5adRnjvrc
uDZO7R74T16ShSW9HxH7iy6mU/fp1c7paafevUxq5kcxFnE+x7jo4loWdLoq
FZ+ZeYlJDwrSiHSijg29WxYaSv2u5+9dq7NYELFMT/yxeCKjoisq9OYetbSh
bczLoan379vMmafyJyNsFr3wubgVsWN6Za2fJvWN7z2esrZW0Jnh0WMLCUzS
NLlhSQ61QZ5m3YEwK+DsPm2ayI5nImY6HxLLnvr/SxNyO13imDfOIVI1ddQK
lYWP3bqpvUU6fOZxs6Gz56bwUp9YhvHkkyuVpHaQcTjOt5kNqrvaOvISY5gM
v9MKuYeoR57faLaLYAOne3rWOiaK0VFu4fy4MXWeLj731LNIJjjop1LGQ2rZ
39lnRnmsgcsoLE/0YzjzoGf3VpP51sC6X+aXJhTGlA+ktxust4YUwx4DZY1Q
ZoZhw/lB+6nX35snWLo1mGEnja2JOTz1eoP1rXqcc8y46ezZ709bw5BetIf9
w0AmaUz63boo6kGWaVjXTWuA2tsaXX8HMFHfd7hoVE29/4Z+bk+hU0zgtMu9
au+tgcMJUOIr8WNW5N2qDPpiDcwJVVs1k0NM47b7UW28NsS1zrwiLSttAL5U
TpYXuzJugmIDy3VsgPPPHrleY0dmbqVyzQlzG+Dq9txW93wp4yCy2UPefcps
pSAnHmPI8OSI1Z+Z8uKV8/TeuMBIXdY977Sp95c41bfQdB901/cZedVPnUcK
mXVGHQa1ZfM/i/ZPnUe7yBZxnQB/jlZK9Qxb4DyaUfd0Kwcete40d11iC52P
c9XKhQJhofqF8blgC1Bvn5T+8CxUvk1tcLaYOt+k3Cx29Tzc7HnL2uE7dW7Z
osu77QLx0NPrh301wsEm6vPS/LP/NSuz2tbnfASkDEg+35JuC+MKMSGDLlGw
MV4tKyd/6tzdf+k1djQMGhid5K6xhcwstxoniCFmrdAeaxGPhajhrba2T//r
zD3LoiJnxhFzZc9XNh+LA80kL8WsdluwH5ism9ETDx2mZ7i/D0yd72v8foz5
EwLHEl6yJqbOb5THr72ZSJw3mK4+nHgJVqTfzEnntwN+5fCG7POXifNydvLK
7Eom5h3LeOqxPAUaWXdOjy+0A1VRCUmzFGp7jcg9CqKpxIGbZ5ROD6N+EzfE
Zo6lEfOX7kq5PEK9bdxynX3nFeJzi+6dW7M5nbhQU6tFqIGa31fuQH3FVfL5
HMvmzj6XlUFc+HU8Qy/uGvl7O8U8P0vNzSTWdLAPb5ukdvGrf1NyMIt8n6F/
6q24+CGLfN/dbUr3LF9eJ543mSqkbJFNfj+XdaE5fetukN8/Yiv35N38GzCh
M/P79Nip11c6dm0TvUnuy/o3L1S1wm6S++X2zdRfdHouOIcWpxdvswVm/Rqx
ZyO55H56q9gWvFydR+5visUjrqLsPPAKOipbscoWijsCry3pyyP3/YmnrkWU
7C2QU7Y8skCE+tVz+Ud7x23gS1hh4v4E6tlS+/U6mm9BqN83ybuvbWCtbnd4
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
5/8BlTgXUw==
       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1: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
5/8AQH3exQ==
       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGBwBmIQ3XDDle2eyw17hp/n3238tPqAw6Tz4q5lr+wjflVE
zVm5Hs7P0c1RlGrfAOfP8H2Y9/0vgn8kN2zPlZKNcP6NvwLJzhsQfAO733//
zt0E57uc27ok5yaCHxFX4H1bZDOcX/BO65NnwOYDCz4JCUpc+ADnO8jYTeNN
/QLnH3DNlGb+9R0hnz9lwY++3wj5GftV3yn/h/MVEkuvFsYwOsDsg/Fh7oHx
JdY5hPcnbTrw4CvXjDdqzA4fek9zbnq9Ec6H+W9D14Ko9I8sGPw1d2eLplki
+LDwgvFb9qqd6DiE4MPCD5d5MPthfJj7YHxY+ML4MP/B+DD/w+2vezpjR/fm
AwXyZrKPdrPB+QZbTt+PaeOA8z94JC66HsAF52+4+y0lSJoHob+oR/3sU164
+TA+zH4YHxa+MD48PbArvXLfwO/AIte2QUF90wGGc9FhiXsF4P6F8WHhAePD
wgvGh4U3jA8L74QZy7bPWyQID28YH5aeYfyIuRurVnsj+A683y/bCCDJQ/MD
jG9wi5l3vxGCz7Crb//D3evg/BszJYtYXBH8FZVLVNTPrYXzGyL1r3uGI/gR
lrs6cx6sgfM1JF1t+jMRfFj+hPEv3IhaeKUawV+x42nwdxYEv2FGAZtU3yo4
P6Di9w4bcQRfI6ItO37BSjj/h7mgXJPmygMHkj5K3GkXcrggPufCkk0rMPgA
oyUsKw==
       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAGIw3TCphWW6lMMF8TkXlmxacQDGb5hRwCbVtwrOv3Aj
auGV6tVwvoakq01/5ho4/8ZMySIW13VwPsOuvv0PdyP4BreYefcbrT8wwevu
U8caaYeIXxVRc1Yi+A683y/bCGyA83N0cxSl2hH8lr1qJzoOIfgzfB/mff+L
4K+5O1s0zXIjnH8kN2zPlRIE/8ZfgWTnDQj+h97TnJteI/gscm0bFNQ3wfkS
6xzC+5MQfAO733//zkXwXc5tXZJzE8GPiCvwvi2yGc4veKf1yTNgM055dP0w
8z+IaLjXJ8rA7YfxYe6D8WHuh/Fh/gu4X7Rij5ss3P8bVu7l/KUtB+dLlHBk
mwvKw8Orwi74TMk3BD+H5bzYzVwFOH9OZsnx8gcI/plzkhViwYpw82B8mP0w
Psx9MD7M/X+M92tsPYrJh/k/4R9n16dVShh8WHjB+PDwTF5vNVFWGYMPC/8D
J0Je60/AzQcA+J14xg==
       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGCwA2IQPWcbq2uNu5bDDN+Hed//bjjA0S5qvOC9Bpx/Q7Gg
ibEWwV+x59TFJC5M/pq7s0XTLDfC+Udyw/ZcKUHwb/wVSHbegOB/6D3Nuek1
gs8i17ZBQX0T3D4YH+YeiXUO4f1Jmw7kBCZMuXtFE86Hud/A7vffv3M3HTgj
vfqr1C4tuDyMD7MPxoe5B8aHuRfGh/nnT0PAsp062nC+zrOvYRHzteH6YXyY
+Qnes9m/C+rA+RM2OOyY2qID988B0WcZJt8R/A9V3ZKXM3Xh7lV4YHCq8A6C
H+B6rUrAXw/Ob1lVrb3+oB7cfhgf5n4YH+beLfyKd3xN9OHxBeO37FU70XEI
wY+Yu7FqtTeC78D7/bKNAIJvcIuZd7/RejifYVff/oe718H5N2ZKFrG4IvgR
lrs6cx6sQaj/ef7dxk+r4fwLN6IWXqlG8BtmFLBJ9a2C8wMqfu+wEUfwNSLa
suMXrITzf5gLyjVpIvgXxOdcWLJpBZy/4rta83HrFTjVo5uP7r6GSP3rnuFr
cfoPPTxg4fWk5FjPm2WI8IXxYeEP48PiB8aHxSeMD0s/MD4s/mF8WHqH8V3O
bV2ScxOTDwCW1uoJ
       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[{{14.035087812144127`, -3636.7797566979607`}, {
       14.93055564734101, -3636.7797566979607`}, {
       15.15442260614023, -3636.7797566979607`}, {
       15.378289564939458`, -3696.2119882769584`}, {
       15.602156523738678`, -3696.2119882769584`}, {
       15.826023482537899`, -3755.6442198559525`}, {
       16.04989044133712, -3755.6442198559525`}, {
       16.27375740013634, -3755.6442198559525`}, {
       16.49762435893556, -3755.6442198559525`}, {
       16.721491317734788`, -3755.6442198559525`}, {
       16.94535827653401, -3755.6442198559525`}, {
       17.16922523533323, -3755.6442198559525`}, {
       17.39309219413245, -3755.6442198559525`}, {
       17.39309219413245, -3755.6442198559525`}}]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1:eJx1011IU2EcBvDjB4GSMsEvSkRRmnqjCG4JZgcMP7BoCrYpOGmiNy4dlGIF
ErGkD51X4sCUCRoep+ucqaBTcamgIqjgwI9IMsobY8puVOxABT3vHzx0cTj8
eOE97/95zptsaiqvC+Y4rvjP8/e9rw9193/T8juyqrZAlLyx/FVB1JDbOqd1
D2UN8/e9+rOoJfLdtGjHwlvyRPOnosdlGn7p0YNZ3xOlExYbj1PiyVZVQo9v
P4f5Z/Vq/qshcrmz5TDHrDS+B590roW5j8ihie1iktrNHO/i9V0mclb+hSz3
ke+sTw6ad8kGo6X0c/Q4s8WfESjRka1tP+xT78jvIx231cvj7PyXLfZXHXYH
T7B5YeQBIy8Y+cLoA/vDOA+M86LPy8Z8MOaHkY8rYAziLEojTxj5w+gHRn+w
/d5B46kseguHpMr7gpa3zt1Yeb1A5iNOt/JUZM5jmz+YcTEPPx1MVa+PMRty
PW/MX0eZN3eqBnzPncwv7JYr12wjzLrWi6m8OHKaob2hxiEwn2mjEl+mC17c
D7glXB/uv35TYewH43swd77hlwJOWq/M3C7Rj9H6v/ngrL2QiPnsj8zIAzb0
Sc+cpWTkByNfePRLb0x9rsSMPmD0BaNPGPcJRv+Rc4LpVoXS+F8+NP3ydNj+
798Gqisu
       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQbSTT1faVxdrBgff7ZRuBDQeyWCbVskdawflW89+c
yXhmicGPmLuxarU3gt+yV+1ExyEEf4bvw7zvfzccWPRmZonkWkuHNXdni6ZZ
boTzj+SG7blSguDf+CuQ7LwBwf/Qe5pz02sEn0WubYOC+iY4X2KdQ3h/0ia4
fTD+pUB71R3yVg4Gdr///p27Ce4fGJ9p+5OrYZOsHFzObV2Sc3PTgVmZ5nrL
TiP4sPCA8U+du3PPxQ7BT2vUN59SjsmHmQ/jw9zzz7ip//EGa7j7YXyY/2B8
mP9hfFj4wPiw8IPxYeEL48PCH8bP0c1RlGpH8GHxBfMPLD7R4x8WHhG/KqLm
rFyPwQcALAYkeg==
       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1:eJx10l1IU3EYx/G1EolaDGpYwkqT3hAhRiFJzZPLiFKrxVSMJNY7belFkXYT
2JslUeFFDScWaGRlzpMTScVcb1IQmEEpJAVB4LpQkCzzQAV9/09w6GKMDwfO
eZ7f70n1l3kPWC0Wi+/378+/93vi/qxBt3a2Z3l/dSzyWI95n53szFbeeqLJ
+WJcPD5/OqvGoSlvCC774nKJa54X1A4XiN8tqciuOmp2ICOQmnxBXFzfdure
NrFmmxxcb//n+VRFSbi5Vb1/9fBMW6+rVX0fMx9mfsx+ONluCa48La7a07Jg
KFc8erek++JcMXnhR7nROfGQW82HmV89/7vf0lr/w7q9kje+kf/p2KQhvv+h
znFwXZvy02Bh99vj4veGfZ8nIh67/Gq2HhfPWnw+krJCV174QCu64tfVPFjt
4/5pGPW62nfT62hjYEhXeWDywuSJyRvTB6YvTJ+YvnFa5a34qmpx2ZuX1wca
zWb+rvQJT2Wf2eybeM45ljJiNnntGtkc7p/SVJ6YvDH9NGSWbylP2qj6w/SL
uff41dBE0hqzuY/M0djN3h1mc09nPF/zDgXFA2HHj3mXxM5v7qaO2+LonWtG
wkfxDGtXc8u02Xwvf/dnn29RjsnMi9kv1G6zGmtz1P6YfDD3i8kTkzemD0xf
mH6Zh3tgH8z++Mj2wztLn4jJC5MnJm9MH//zLyZFo8k=
       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[{{40.675255909251526`, -3874.5086830139444`}, {
       40.899122868050746`, -4290.534304066914}, {
       40.899122868050746`, -4409.398767224902}, {
       40.899122868050746`, -4587.695461961892}, {
       41.12298982684997, -4825.424388277872}, {
       41.12298982684997, -4884.856619856866}, {
       41.34685678564919, -4884.856619856866}, {
       41.34685678564919, -4944.288851435864}, {
       41.57072374444841, -4944.288851435864}, {
       41.79459070324763, -4944.288851435864}, {
       41.79459070324763, -4944.288851435864}}]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[{{42.690058538444525`, -3339.618598802983}, {
       43.137792456042966`, -3874.5086830139444`}, {
       43.36165941484219, -3993.3731461719362`}, {
       43.36165941484219, -4112.237609329924}, {
       43.58552637364141, -4409.398767224902}, {
       43.58552637364141, -4528.263230382894}, {
       43.58552637364141, -4587.695461961892}, {
       43.58552637364141, -4647.127693540886}, {
       43.80939333244063, -4706.55992511988}, {
       44.03326029123985, -4765.992156698878}, {
       44.03326029123985, -4825.424388277872}, {
       44.25712725003907, -4884.856619856866}, {
       44.48099420883829, -4884.856619856866}, {
       44.70486116763751, -4884.856619856866}, {
       44.70486116763751, -4884.856619856866}}]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[{{42.913925497243746`, -4052.8053777509303`}, {
       44.25712725003907, -3993.3731461719362`}, {
       44.70486116763751, -3993.3731461719362`}, {
       44.70486116763751, -3993.3731461719362`}}]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGBwAWIQvbrrWFC0o4fDisolKurn1h6A8R14v1+2EdgA50fM
3Vi12hvBn+H7MO/7X9z8I7lhe66UbITzb/wVSHbegOCzyLVtUFDfhFN+zd3Z
ommWG3HaH/GrImrOyvVwvsEtZt79Rgj+jZmSRSyu6w58f/z+H1Och0NDpP51
z/C1cH6E5a7OnAdrDjjbSq5eVeXhoCHpatOfueZA/zSn8KDpHg4XbkQtvFK9
Gs5fseNp8HeW1Qduv89m/rUZaN6MAjapvlUH1D2nrl94AcEvXrQv2vMtgs8b
KrhlhponnB+5zirBwdkTbt5S9hSeF/GecPs+JvTu6K/B5MPcB+PD3G+7a1uK
+UxPuP9gfFh8wviw8IDxYeEF48PCE86HhjeMn6OboyjVjuC37FU70XEIwYfF
Py55WHrC5T6Y/2B8hp/n3238tBrOh4VHp/ADgftbEeEH48PCF8YPqPi9w0Z8
1YGrOZx72y4h+IrHjDL13iP4ufIxote4veD8nRWtB2s1MPkw81kvrctVdfWC
2x+ofUPybKIX3H0wPsw/MD4svmB8WHzB+LDwgPFh8QXjM+zq2/9wN4IPi7/5
LYzHSuq84OEL48PiD8aHxR+MD4sfGB8WfzA+LP+9vqtVJDMbNx8A2g8Sog==

       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQnT7n57kkLW+Hhkj9657haw88jTqhvXKnt8OKyiUq
6ufWHjDc8vF6wDVMPkw9jB9huasz58EaOJ/h5/l3Gz+thvMv3IhaeKUawV+x
42nwdxYEv2FGAZtU3yq4/TD+dMb59YxzEXzvFaWXIxsw+QEVv3fYiK868N/P
R31TMoK/+atSNZc7gg/zL4wv7XxBaTcvwjwYH+Y+GB/mfhhfQ9LVpj9zDZwP
8z/cPGj4wM2Dhh+Mf2OmZBGL6zo4n2FX3/6HuxF8g1vMvPuN1sPdG/GrImrO
SgTfgff7ZRuBDXD/wfgw/+fo5ihKtW+Ahw+MDwtPGB8W3jA+LD5g/Fpe6ZYf
nzD5LXvVTnQc2nDgZJqLwQJ+Hzhf9EDuHXcdTP4M34d53/9i8gH88DRw
       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1:eJxl0l1IU2EcBvCDG5TEKBldKEWI9oVa2gcx2OggbFSe7YW0XIaQgcRsNKgL
LaK6mE3LNC8SKzMzYYtNPV4IOhk7LYIoKPyAmTRoxAqJFmh0yhFUcJ7/C9vF
OPx4z3nf5//sLT7rOd6cJwgC+/f7/zw8LNsuReyi0xTudH8MKRstG/oWjnG/
+JRcLt/D3XprytJewL27qqc38UMiJ+LNqYOLknjj1N740fpRpfea2dQ9I4mB
yyOlO9+OKtbtxjufByVx8X7hRb11jCyEu6PJGe7KJZ0hum+cvneutTUMPBun
/bMtGtR58yaZrz+auBKskXm+LLsr3MVFPpnm6bcnL6h/ZJoXRh/w6b4D1VfP
cfu/N6ZLvLn2Rna86ojJyuoR34M3Q3Y6D0ZeGPPA6ANGXzD6xf+HdRj93c68
Xyla4vuTtT7idbrHsZ88H4z8JWPlNS1GR44xr2fdSbWgkjty5vrTaYk7Pxxg
TS7uE8a5zPqbucb5MPKRtfww5oPRF4w+YNy/by9L65xRB/UH4/7Cuwqt5h5X
SHnizvjl4VzjfRj7w8gDIy99r80D4z7QujY/5dPehzGfaZtDED7wPLDw+116
YiVIDkylalV9UGlvaw35f3HPzg452WZG3lr2Wq9Wcbu8q/Kgg3sysaXRdp5R
HzDOh9GH7pAtP+1jlJfd9UzeG2HUD4x+YMwLo5+Hy/1NlueM+vlSHTOkEozu
z/6Br9Nda4zua7b/AootiEA=
       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAGIQ/eH++scWdQEOK3Y8Df7OsvoAjP/DXFCuSXMlnH9B
fM6FJZtWwPkrvqs1H7dG8CuubzR9dWQ5Qn9ZkG9QwjKE/rC7/0teLj0wrefI
zp4eBN/G8mb/g1kBDgvMMjZNL1p64NHTt6kmK4HmiX1O2fV7yQE9e3GhO0cD
HAK+1YrfbVlyQME1dMr1Dwj+sY+ZWdr/AxwUrnGc+s+75EDevDqHet5AOF/E
e7LYZWkEf9f35W/UtBD8hCV7DlVZIPhsgRdnnHND8INW/XIpS8bkw+z/EcYv
faoQkw9z/zxmlY+yDYFw/8L4GtOPz9K/vuyAywaL44V9gfDwg/Fh4Q3jw+ID
xteIaMuOX4DgB1T83mEjvgrOb5hRwCbVh+DD4hdu/o2ohVeqEXyGn+ffbfyE
4GtIutr0Z66Bu7chUv+6Z/hauP9WVC5RUT+3Fh4eN2ZKFrG4rjuw5u/TPKXQ
QAeDW8y8+43Ww8MTxoeFN4wPiw90fsSviqg5K9fD4w/Gh8WvA+/3yzYCG+Dx
n6OboyjVvgGePlr2qp3oOITgz/B9mPf9L4J/JDdsz5WSjXD+jb8Cyc4bEPwP
vac5N71G8Fnk2jYoqG+C8yXWOYT3JyH4Bna///6di+C7nNu6JOcmgh8RV+B9
W2QzBh8AEUDKJA==
       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[{{66.86769008876047, -5300.882240909836}, {
       67.53929096515813, -5360.314472488833}, {
       67.76315792395735, -5360.314472488833}, {
       67.76315792395735, -5360.314472488833}}]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[{{39.55592111525541, -3339.618598802983}, {
       40.227521991653084`, -3280.186367223989}, {
       40.451388950452305`, -3280.186367223989}, {
       40.451388950452305`, -3339.618598802983}, {
       40.451388950452305`, -3339.618598802983}}]}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction -> 
    Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
       FormBox["\"x,y\"", TraditionalForm], None}, {
       FormBox["\"t\"", TraditionalForm], None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], 
    ImagePadding -> {{47.333333, 2.462585}, {31.333333, 0.5}}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
    PlotRange -> {{-2.0833333333333335`, 
     102.08333333333333`}, {-7697.4869310405265`, 9393.73701699681}}, 
    PlotRangeClipping -> True, PlotRangePadding -> Automatic, 
    Ticks -> {Automatic, Automatic}],FormBox[
    FormBox[
     TemplateBox[{"\"x(t)\"", "\"y(t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.6256846244463005`*^9, 3.6256846390020466`*^9}, {
  3.625684682370006*^9, 3.625684723492484*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVjn8403kcwG1cXS5SJHWlTKW6PU/y65TyfSeNC2E1+yodTbPFZNps8yN9
H7lQYd2Vkh/z85SuyK/ak/IxpJ7c2emHLA/6IdIPCxti7dwfr+f11+t5Xjas
GDqbbGBg4DfH/6Zk60oLrZvd64rHP+j1EvCKrVgQzZVhTH8GmTMjgcBX1OwN
3CpsarbB6h+tBIJyRwPncZuwbXjC7vxPEsA1AY4aTifWakqSub6UQHApqewj
px/rTjSlxzZI4MDX4JBhziimYWy885onAdW6067vOHpsu3FoaluPGMoTSd8M
D5nBS5VDxOMrIjCplVVV+FuB3pJVNMGPg3zaLHmLyRrYzKWd0vgKoZCV8sbS
ay2IbP6ocjETwI7ioSOPXDeAJ83NKW84Fh5m/ZlndJIKm574kOEqH1QRh38v
x+3BcYQyJnl5DGTLQu2q/Bxg9Xds6R0pD1SyBct0PCdwU4ubJRaREC63ZW7h
ukB4zc7SkwoOFCTyICrYFUoL4547J7HBbykr9b1wGyw+mJDPMwoHH2i32svb
Dumfnc1HGsKgyaNn/mSmOxwoS92qjAmBMe1CZRcd4FlT7OimDCZQl7I9C3x3
AiejY575JB1sZObvMg56QOW782lThr5w78t01VF8F9y1jGgdVHiARbVLRVSk
JxgvmrlcKd4CLQpjAV+8G5QT60L62kloRaElh3ucBu+f+FXyLjkh6qAkPSXF
C4YdveM/gicanFjSlU14Q41Nlmp+ph/S4p5qWfwvcK526YwDYx9SbOhw60rb
A2/rPd4M0HDk3Hy2avKUD9gakyNJb0NQeFtxAHbRF0j92WyzsTA0ssr/QUax
H7zIqmvlR4QjK8zpSHveXijjUARnqtmI1BGz2e66P3jwm7JsqVz0UBq7eMf+
AFAWl0/HnYhEjYMiDUcZAD7XbMyXt/BQFt9ObcsMhPyBjly3bTGotn88uedp
IBwrGrh9toWPGlKj1q45RAcJ93iwnHwcmZjqD4X10kHXerWkhSpA0p19JErw
PhAt3LRLGyBE6kpuo3BgHzz74HFlODMOlU2Z/tD86364FWqQe7tehJyTwviF
Q/shOoqxl6YVo/FrOkwXzQBbluaAzj4eGTU2lDI+MID5aeui80EJaNzwR2tM
EATxZpYJby8kImf7PCplLAhMH+acs7ifhErnccpPH2NCTiRLy3t1Ao0u6XNK
0jBhQXmb5W+rTqJsw1g8SoDDrDxidDuFQJ7kT5UFcTiM3CsRdq4l0JTBUV2n
GIfnzX3Th+0IFPYtrMQpCYfqR0FGaVQCOUwHfNSl4sDtoS3/14VAzz/bE9Ic
HJ5Ord/F9iGQtUpdUS/H4ebPQzmZQgJ1veB9HbqLQ76b7co1YgKldQ/7rriP
wxkstLgmnkDqpwNfkhU4HPHqvt6dTCBFp9LN+zEOK5ntyCaDQBFt1Z2qXhzS
RRUj9QUEWtFKpZj04yBKeBPjXUSgTsVVIfZqrk9erVGVEMgVFS0vG8TB/fQl
vb6CQMZ3peHRn3HQXkyz2FNDoPvyhQ0yNQ6vc1tye+sIJLiT/n3XGA7KAr11
zG0C9dYTN1wmcfirXLzxQiOBpHWzeu40Dpev1d5c30Sg3bUSet7M3M+NUUd5
M4G+3poo+1s393PrJ7lPK4FuVvMn9XocWPUc974HBPoPvZ5hsg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF0GtIEwAQAOD5wNKclOUjI9Fp6I9BaiYj002bj9LpXD5mZS1fm23mbJaG
YmLig6iNoCCWW7bZyqgZpiSa5so0MiZDKkV8EFMr0/mYU3Ougrw7OI6P4w7u
vDMLWDnWBAKB8Tf/VZLYrJB59oQT/kdMoco+nyenbjlpkiz256nBqffmk+x4
3WC2kXnIyNWC0xVWylnuOPjUevqZGe48eORANWWKawE3llpt2mTspG2Z2CJX
qxLdwfejN6wDiV5gWWblN9cYX3BYw3T2B4o/uP/WI6ntNTJ4JPf87UZ2AFju
ds5PzQjCvtzezSwIBme1+6QF8kLA9aUCGj+dAma4ZFZ9LzoCjqP1uScIjoK7
I4e3mW6GgxdXHAd1LBqY7JJDr4+PAHvLd0/VnY4Ev15YU+exj4H3NIeo+Bfo
4LcaB5GwOArsIXPl8i5F4359SW1lZQxYv+ysE1fEglfYdIP86nGwxn8gVFdz
Any454badD0O/9HbwKTeiQf/2J/4vq6BAXanBmf3SRPAVgMFB/2eJoL7JYW7
wpKZ4E79FSN3EH1L6GfwSUsCt4wvlQ8Poduq+L5eGSww0cmSwRlFSyLGrEjp
J8GGJl5n0QRaueq0o+dsMt5XxhHKptFLT8xUc34K2LazTZHyE71ks8+TKkrF
+QApmbSIVthxG6svpoHnnceCy4xosU0hmy9ig+nWv5rqL6NXCXlmbTGas8l5
GFyGDlpjzpqr0J/nAiokd9GeIwZVazta91WwPt2BrvkyE+/RhTYMTSyUa9Aa
7WBo7Ed0bm+zdmQU7fGOTCKOo7Wax0XUSTTlzYO9Sj3aoUOSlT+H7mp3bJMb
0KJXtdt1i+jR1opnISa05OWGhbeGjmopYUl/o9dfLCs/mdHPm4UmiwX9B0zK
IxE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"x,y\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100}, {-536.858517465804, 399.999980880438}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"x(t)\"", "\"y(t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6256842612436047`*^9, 3.6256843546740375`*^9, 
  3.6256844425637636`*^9, 3.625684541824092*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF03tMk1cYBnDKbcyJc4KFgENoUUxlA1yLOC7fW8alUC69UyhILcVyKQID
xUW3MUQdAYU4iWxgG8KgKgYIZjIGZlaj4GSIxCyjMYpxCNscdFxkGCrb4unb
P5rml+877+l5+hw/VbEo197Ozi7nv8//34x6S5vOxxiVB01hfYOM6xkv0zNn
NHNUe/Rrm7adCHumWaOqua+9xYlZZwl1AT55v/0I7ZVD1kZIJk4/N/aLVOYO
cmLXK/puQ6onqIkZviMmR84WsO7XErdqH+LqC3uJz0uoBSaLASpinarqKT3e
H3KJZ2kcfzO1HTKJI1un1XfCdoCQ2N4z3m5awYIE4uHTHc2OnwdCCnFUF3sy
oOl9yCA27d93pl0eDAriCGoykyUOgTRivUd2QHfyLhAQDyrYW2VZH+A8k/5N
D4uWjfvrLtN3nyvgQCpxTj8zLSQvFGKJK72G+aPK3RBjPe8RLRSmhwGP+CBP
o2Jp9uC85M2q6t/LP8TfN3Lp7GhzSTjmyYchzxRtBOQTH+cKGhifRmK+P0ZP
vLF8KgqyiEVNK+LRryk8//yL9WPjIsDnbzvvWff9PZsDN+fGnE/iYt7bMyIa
3R5wIZ3YT+/2rEYRjXkVDzvfXZmIBhnxtb9XuvPlH4GEeEbQ1FnwxGb3nlBD
YUEMrtf2+7rOmmOwTzdvrCsrqYiFROIDPRuLni/GYv+8dHRN3sdxmHebcaji
4Ms4nBc4dfjLqqp47JfLX7Hv1dB42K+pxU3j9ZU8yLH2q2PnEw8LD/YRv5DH
mPWfJOC8h+BC77dLxD7e2DESPn4yEfNfXexc+s2JD/uJOcba7uVjfNw/6Sa9
snl9Ekit/bjVKqAak/A8HaWHa9XeydiPP95NvV3TavMXXdzGCz4pkETsSbHV
Q80pmGed03hCBTMV59FGioMCOlMxP/XAWcmMuwD7O9xQ+k6kRIDro8PLj4nO
CLBvg1OHljRjAsxj285787fchHi+0yUBZmaaEPPwvXCq71WjELKJrzxe+Gzi
gRD7xu7tvr/qKQIl8dXqQn/fLJtVCRzu9RYR9s91w1qW8qEI+zZqmA0yeokx
vwbuIxojXYz3Ew4xs++2iLE/5kt5g+WTYjzvT/cHnn6zVQJi4m//2fCWca8E
/Kz9+6HvWlCbBJ5T5P87qizRTUtgjtjdLejXn1lSoJP3Fy5aKEuRFPdf3WUq
vXhZCieJHQevtkn/lEKP9fnjGWVikAwGrOsdvH2oMhl8Zb0PXor2nl4Z3h9O
cHMgY95mrTctXxKchn1sc9a0nzhg8506RhGt1+a5TY/YR5dspmoNt8vYcnS9
Q6m8sEyO831MZsN3/TZ39ZQsr63Z/C+VTMuh
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF0GtIEwAQAOD5wNKclOUjI9Fp6I9BaiYj002bj9LpXD5mZS1fm23mbJaG
YmLig6iNoCCWW7bZyqgZpiSa5so0MiZDKkV8EFMr0/mYU3Ougrw7OI6P4w7u
vDMLWDnWBAKB8Tf/VZLYrJB59oQT/kdMoco+nyenbjlpkiz256nBqffmk+x4
3WC2kXnIyNWC0xVWylnuOPjUevqZGe48eORANWWKawE3llpt2mTspG2Z2CJX
qxLdwfejN6wDiV5gWWblN9cYX3BYw3T2B4o/uP/WI6ntNTJ4JPf87UZ2AFju
ds5PzQjCvtzezSwIBme1+6QF8kLA9aUCGj+dAma4ZFZ9LzoCjqP1uScIjoK7
I4e3mW6GgxdXHAd1LBqY7JJDr4+PAHvLd0/VnY4Ev15YU+exj4H3NIeo+Bfo
4LcaB5GwOArsIXPl8i5F4359SW1lZQxYv+ysE1fEglfYdIP86nGwxn8gVFdz
Any454badD0O/9HbwKTeiQf/2J/4vq6BAXanBmf3SRPAVgMFB/2eJoL7JYW7
wpKZ4E79FSN3EH1L6GfwSUsCt4wvlQ8Poduq+L5eGSww0cmSwRlFSyLGrEjp
J8GGJl5n0QRaueq0o+dsMt5XxhHKptFLT8xUc34K2LazTZHyE71ks8+TKkrF
+QApmbSIVthxG6svpoHnnceCy4xosU0hmy9ig+nWv5rqL6NXCXlmbTGas8l5
GFyGDlpjzpqr0J/nAiokd9GeIwZVazta91WwPt2BrvkyE+/RhTYMTSyUa9Aa
7WBo7Ed0bm+zdmQU7fGOTCKOo7Wax0XUSTTlzYO9Sj3aoUOSlT+H7mp3bJMb
0KJXtdt1i+jR1opnISa05OWGhbeGjmopYUl/o9dfLCs/mdHPm4UmiwX9B0zK
IxE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"x,y\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100}, {-9.368585365854708, 0.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"x(t)\"", "\"y(t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.6256842612436047`*^9, 3.6256843546740375`*^9, 3.6256844425637636`*^9, {
   3.62568454189614*^9, 3.6256845527403874`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF0GtIEwAQAOD5wNKclOUjI9Fp6I9BaiYj002bj9LpXD5mZS1fm23mbJaG
YmLig6iNoCCWW7bZyqgZpiSa5so0MiZDKkV8EFMr0/mYU3Ougrw7OI6P4w7u
vDMLWDnWBAKB8Tf/VZLYrJB59oQT/kdMoco+nyenbjlpkiz256nBqffmk+x4
3WC2kXnIyNWC0xVWylnuOPjUevqZGe48eORANWWKawE3llpt2mTspG2Z2CJX
qxLdwfejN6wDiV5gWWblN9cYX3BYw3T2B4o/uP/WI6ntNTJ4JPf87UZ2AFju
ds5PzQjCvtzezSwIBme1+6QF8kLA9aUCGj+dAma4ZFZ9LzoCjqP1uScIjoK7
I4e3mW6GgxdXHAd1LBqY7JJDr4+PAHvLd0/VnY4Ev15YU+exj4H3NIeo+Bfo
4LcaB5GwOArsIXPl8i5F4359SW1lZQxYv+ysE1fEglfYdIP86nGwxn8gVFdz
Any454badD0O/9HbwKTeiQf/2J/4vq6BAXanBmf3SRPAVgMFB/2eJoL7JYW7
wpKZ4E79FSN3EH1L6GfwSUsCt4wvlQ8Poduq+L5eGSww0cmSwRlFSyLGrEjp
J8GGJl5n0QRaueq0o+dsMt5XxhHKptFLT8xUc34K2LazTZHyE71ks8+TKkrF
+QApmbSIVthxG6svpoHnnceCy4xosU0hmy9ig+nWv5rqL6NXCXlmbTGas8l5
GFyGDlpjzpqr0J/nAiokd9GeIwZVazta91WwPt2BrvkyE+/RhTYMTSyUa9Aa
7WBo7Ed0bm+zdmQU7fGOTCKOo7Wax0XUSTTlzYO9Sj3aoUOSlT+H7mp3bJMb
0KJXtdt1i+jR1opnISa05OWGhbeGjmopYUl/o9dfLCs/mdHPm4UmiwX9B0zK
IxE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"\[Psi]\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100}, {-1., 1.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Psi](t)\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6256842612436047`*^9, 3.6256843546740375`*^9, 
  3.6256844425637636`*^9, 3.6256845419691887`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eq1", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"m", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], " ", "\[Equal]", " ", 
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"y", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}], 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["F", "x"], "[", "1", "]"}], " ", "+", 
     RowBox[{
      SubscriptBox["F", "x"], "[", "2", "]"}], " ", "+", 
     RowBox[{
      SubscriptBox["F", "x"], "[", "3", "]"}], " ", "+", 
     RowBox[{
      SubscriptBox["F", "x"], "[", "4", "]"}]}]}], "/.", "rules"}]}]], "Input",
 CellChangeTimes->{{3.6257296040205927`*^9, 3.6257296047216325`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2050.`", " ", 
   RowBox[{
    SuperscriptBox["x", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
  RowBox[{"9602.8`", "\[VeryThinSpace]", "+", 
   RowBox[{"2050.`", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Psi]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}]}]], "Output",
 CellChangeTimes->{3.625729617934388*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eq2", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"m", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"y", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], " ", "\[Equal]", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "m"}], " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}], " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["F", "y"], "[", "1", "]"}], "+", " ", 
     RowBox[{
      SubscriptBox["F", "y"], "[", "2", "]"}], "+", " ", 
     RowBox[{
      SubscriptBox["F", "y"], "[", "3", "]"}], "+", " ", 
     RowBox[{
      SubscriptBox["F", "y"], "[", "4", "]"}]}]}], "/.", "rules"}]}]], "Input",
 CellChangeTimes->{{3.6257296040205927`*^9, 3.625729611129999*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2050.`", " ", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
  RowBox[{"0.`", "\[VeryThinSpace]", "-", 
   RowBox[{"2050.`", " ", 
    RowBox[{
     SuperscriptBox["x", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Psi]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}]}]], "Output",
 CellChangeTimes->{3.6257296239257307`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eq3", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["J", "z"], 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], " ", "\[Equal]", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["l", "f"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["F", "y"], "[", "1", "]"}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["F", "y"], "[", "2", "]"}]}], ")"}]}], " ", "-", " ", 
     RowBox[{
      SubscriptBox["l", "r"], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["F", "y"], "[", "3", "]"}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["F", "y"], "[", "4", "]"}]}], ")"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Omega]", "t"], "/", "2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["F", "x"], "[", "1", "]"}]}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["F", "x"], "[", "2", "]"}], " ", "-", " ", 
        RowBox[{
         SubscriptBox["F", "x"], "[", "3", "]"}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["F", "x"], "[", "4", "]"}]}], ")"}]}]}]}], "/.", 
   "rules"}]}]], "Input",
 CellChangeTimes->{{3.6257296040205927`*^9, 3.6257296142301764`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"3344.`", " ", 
   RowBox[{
    SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
  "0.`"}]], "Output",
 CellChangeTimes->{3.6257296270519094`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Eq1", ",", "Eq2", ",", "Eq3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "\[Psi]"}], "}"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.62572968160003*^9, 3.625729716504026*^9}}],

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"2050.`", " ", 
       RowBox[{
        SuperscriptBox["x", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
      RowBox[{"9602.8`", "\[VeryThinSpace]", "+", 
       RowBox[{"2050.`", " ", 
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"2050.`", " ", 
       RowBox[{
        SuperscriptBox["y", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"2050.`", " ", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"3344.`", " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0.`"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "\[Psi]"}], "}"}], ",", "t"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.6257297179401083`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"breake", "[", 
   RowBox[{"t_", ",", "\[Tau]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Tanh", "[", 
       RowBox[{"20", "t"}], "]"}]}], ")"}], "/", "2"}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Tanh", "[", 
       RowBox[{"20", 
        RowBox[{"(", 
         RowBox[{"t", "-", "\[Tau]"}], ")"}]}], "]"}]}], ")"}], "/", 
    "2"}]}]}]], "Input",
 CellChangeTimes->{{3.6257303782788773`*^9, 3.625730416833082*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"breake", "[", 
      RowBox[{"t", ",", "1"}], "]"}], ",", 
     RowBox[{"breake", "[", 
      RowBox[{
       RowBox[{"t", "-", "6"}], ",", "5"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "5"}], ",", "12"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.625730098193857*^9, 3.625730132774835*^9}, {
   3.625730200314698*^9, 3.6257303154102817`*^9}, 3.6257303579497147`*^9, {
   3.6257304292067904`*^9, 3.6257304885461845`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6257301171959443`*^9, 3.6257301337378902`*^9}, {
   3.625730204976965*^9, 3.6257302458733044`*^9}, {3.6257302917359276`*^9, 
   3.6257303164723425`*^9}, 3.625730358710758*^9, {3.625730462656704*^9, 
   3.625730489893261*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]r", "[", 
   RowBox[{"t_", ",", "\[Tau]_", ",", "\[Beta]_"}], "]"}], ":=", 
  RowBox[{"\[Beta]", " ", 
   RowBox[{"breake", "[", 
    RowBox[{"t", ",", "\[Tau]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6257315338549724`*^9, 3.6257315356000724`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Br", "[", 
   RowBox[{"t_", ",", "\[Tau]_", ",", "\[Beta]_", ",", "\[Tau]0_"}], "]"}], ":=", 
  RowBox[{"Fold", "[", 
   RowBox[{"Plus", ",", "0", ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"\[Beta]r", "[", 
       RowBox[{
        RowBox[{"t", "-", 
         RowBox[{
         "\[Tau]0", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
        ",", 
        RowBox[{
        "\[Tau]", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], ",", 
        RowBox[{
        "\[Beta]", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Tau]", "]"}]}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6257312193239822`*^9, 3.6257312461465163`*^9}, {
  3.625731300649634*^9, 3.6257314226656127`*^9}, {3.6257315402193365`*^9, 
  3.6257315427994843`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Beta]", "r"], "[", 
      RowBox[{"t", ",", "2", ",", "1"}], "]"}], "+", 
     RowBox[{
      SubscriptBox["\[Beta]", "r"], "[", 
      RowBox[{
       RowBox[{"t", "-", "4"}], ",", "2", ",", 
       RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "5"}], ",", "12"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.625731159173542*^9, 3.625731200775922*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
/jrpVrVW+Mt6hmeukraUszw+2cxwtgnpW0n+rY0UhufOkSwKXPThXoZN9Elc
ZCXVh8NrPk3KypkSO/yXYcfjpMuZqZyjMwyXqpPY0yynE5YYxhBJacmS7Vc2
bGNYiWSc2FMizM6w7GESc1z0l3ouhlNlSMlRJuH+vAy7S5IM3wg+1hJiOFqM
tBJaf2vDLoav7CIlvArUzxNfqy9EOuN/StVeas18JIuu+InKgwxDWJKTwmrS
niNr9TeRAnyMrrqqrHkjKa49TfA3WDMTKVduc4205lq9pbxqL4tnnifWPJvX
00witp5Zy5/IW5ARmDlsuBYfy8M+sfn8wnjNA3l7Gsssui+vuSdPZb/YdtVr
a6bk6T5y+fXq9pqb867/+u0zZL3m+jznvQfV1e3WXJMX6Ow9/9ppzRV5CdWd
qX8frbk0L09M9ab20zXn59U6BO9677PuvvLRhrmANWfnLe067q8bsubUPJxt
tGZixLolSueXVqPWrWeTfOfLxzVH510v2ijGlrpuF8HLzaaZa8ZgEvJx2tz5
617COkjc/b3uLddq2oqa1703Z1/Idsq69a+2MlcMrTsxTa1TCrP9n8/qc74d
kFr3x6D3OAv3dfP9PZ8v47VuNx1u6/kX69bjcK7wD1v3nJvBs5yUdR+7zbbM
3bbuTujuQI7yjn8WHFOCeSbX/cFcgu/g6V3/vO9Ca666rsg/s3861niKffc/
O24y+YHNWPe94C2xh61E1/vjs23jhLjYP2MDqlVuV687jSRuouYt/s9d8+J6
dfJ7/vl9jEPFStu6h+zuHPYJkfjnwnObrKqhvf+c8lZMtuLouiO68BOlx9Zt
Y2VtX3Bq3du96t0yjdZtn/ku4I3NuqX4DqfdiF73VuNTDyxi142JvnbkasK6
G/eH5xgnr9vz6PL309nrbrv/o+5wzbpLsynBsr/WnbEyf+5Aw7p9fKRbJFrX
rRDzsltoYN27Bz7G8w+vm1Om6Abv2Lq7c2aGOafWXbXKk8Ixu+5czX02rAvr
jn+hLse8vO7A2otTq6vr/h/6R8Za
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6257311718422666`*^9, 3.6257312021750016`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fxb", "=", 
  RowBox[{"Br", "[", 
   RowBox[{"t", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3", ",", "5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6257317044177284`*^9, 3.6257317081189404`*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     RowBox[{"Tanh", "[", 
      RowBox[{"20", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "8"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}], "+", 
  RowBox[{"Tanh", "[", 
   RowBox[{"20", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     RowBox[{"Tanh", "[", 
      RowBox[{"20", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     RowBox[{"Tanh", "[", 
      RowBox[{"20", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"Tanh", "[", 
      RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.625731502675189*^9, 3.625731548440807*^9, 
  3.62573170881698*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Br", "[", 
     RowBox[{"t", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", 
        RowBox[{"-", "2"}], ",", "1", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "3", ",", "5", ",", "9"}], "}"}]}], "]"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "5"}], ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6257314540464077`*^9, 3.6257314835710964`*^9}, {
  3.6257315638736897`*^9, 3.6257316068621483`*^9}, {3.6257316547728887`*^9, 
  3.6257316570630198`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJxF2Hk4VF0YAPCxZE92spuhqIgWUWbOUZRKURFRQmgvIXs1oqgU2aJUiLJV
qFDMXFsSsu9kz77v+3z3Dj7+6fk977nnvvfc97zNuTKWN09aM+JwuKfMOBz2
b3pOzl8ajT8Lt/InG0LplJtZs9/l9P6jI2u24fk0+6J1zYJmYYLK2Wu2m715
zPz+mhWVJShZzGuOeu0U7sHO97+37afh7pZv+N/Om5Tlt9Vx/m/L70yLJWOs
/9v89R3x3nSm/32foqx6/RkNWfW19pSCKYbp/73p98S1yr2DK07S4OY33Ltj
YWDF6RqTZ7+xPqesOk+j6b1g9fDdVRdo5I3cjjoOV12mkbi35uZHhlXXaAR6
qRK5cvtX3KzhWhLCcdVr1f80LEWma39rr3pA44ilUYw866rHNVQS0+y8C/pW
PKchMiUMux6tOIuBiIPO67WPrsbZiN2P6hreca0Y8hBLKtViGUt6ly0tREyV
CLtt4bdinCTx9cXZ/Vn6KzaXJXoln+GR4ltxxFbitfnvf+9U9qzcbwfxlLZo
QlPQip3ViXv9XJ33nV6xjiYRX9+g/VJ4NX6IyE7Yxz9b173sVj3iyLVXrUYv
VxxlSKxLnf+Yarpi83PELNxZN0GJFY9eIH44kqnj0Ny1bP6rxGdB4kKVb1ds
YUd0bHbvULFYNnnCmWgm/zfJH7/srBEyUduOeHe449/K83oTt2W+Pno8Ztnk
vX5EAZYlkY82y5beGUxc0DPr4pRfiReEEzvCqF+u9HbSrfz4HbGwQ9Ljd/yy
/b3jiSmK947LX1u2D2MK8aVTi5i34rLr7NOJHtmg999Qx/L4sCziJc6IVK2k
Zac/yifqG+K83t1adlJYCVHtrfkJxp3LXvhZRZTqzZK0mGin22RXE5Flp8wA
8m3Zb+Q6iEPuHt8lnZbNQeslVue3PbyjRje5PmaUmMmz36Bpto0eX5ycJkab
RMnsy6A7S1oLR3oSzTgc5k43OUOQhWQ3ZJk5Q1z2zoX1JBO13EdGtFbMrfym
AiTN+wSj1Cy6cTvfiZHkiz1lBe/TTRbIxZN4hDpH7Q8sG7ookKbPayEVzHTX
sRxVIVFOHd54wbcF80yi6x6Sbzf7V+kNdLNVtwKSqVvh8ebnzZh5+KO1SVs2
POl9JUB3XbvFMdJs1FGvMy/+Yn52YuwUqUCVS0pYlG7StIAp6UVh8feq8CbM
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
+aHERHx82c4nsolBcwLRAXxzdJu7fCdqHTMdZNuxbJiZQpx4G6l678SycX4J
xOix7nuTtsvO0oomGmgr/b7qvzK+7DWROdSBr/3zssmDwcQvfT9MjUtXLO1P
tCQyxJQMrcz33ZvI539oSIt7ftl2HsSc9qd7MhRXHO9CtNtdRVY5tuJWOyLe
R7Tww7UV510lVjSY80v6rviaFfG+4oezQQkrZjMj7iAPxnAUrVjkNLG9Yucw
uW/FUJ8YIOeqNs2+sDL/IeJ+5yyP6wor9tckjhWyFHXorMbViVESxwRMLq0Y
t5N40jbwXJn3qrcRGXPr3x/8sGKyLDFFUHokM3/FUJJoeclGfWfXqoWIfBmJ
9+PWLa6M5yHmrB8vkpJbMY6NaGeuLhiitWpGIv7LPTMuq1XPaVSsy/9w33PV
4xr3jblGZ6JWPaChknBy782cVXdqtC6Gev5rW3Wrhr9+S7Epw9KK6zTgOzmh
CulVl2mMTF49rwNXXaARoZMSSz2/6iwN/Vczo7vurTkJPvCSoa46ScM8sOjP
i7+rRmuwi1eYe3HNtk/exM3to/1v5Zq0ksrva26VXxI+Ur9mfzcti6yZNTv7
97jUiOHgqut23+bKNVmz8nkRlbtXVh2R6eOTYajuuma1Roa3n8NWnZTpzxyT
eyVuzT2KOj1y31edngmN+rnaCladlfmC/EwlvG7VeZnxPKwucb2rLs6kRtzL
Sp1bdVVmhfIMax4nw4qbMruybPXKxVfdmTmn3xvSrLjqgcz1bRbN/aQVk8cz
pW81yM3qrcbnM3cxnLrOYrFqJorO86Kv/HYrhhyUszJaC9KeKzbno9gmZx5Q
ClpxxEaKp+buJ/tiVtwqQwkp/1ihk7riEXlKvMUm0dO/VnxJhUIdfWNxoW7F
+mqUCg/hONveFU9AShev/8iduRXHHqLMRrKpPeFkXMlfn8K1w+NeqPiKWYwo
0jmz+TGKK95gTtl10o77C2nFl2woOu19hll6Kz5wk3LW7sLrP+YrLr1NucnY
1Nlwa9nk63cp9wMMtvXcX4nvfUAJwf+xnwxcib9+SolP0c5gjFl2a2wQhbqf
ysiTumzpynBKRYXqEYlfy84Si6b8s/z8fEvdspW5EykzY5vr9/QuWz/gC4XL
M0Jae27ZtsczKNL8Gy+d5GSi258rl7Lz3fPP58WXXRVYSDm4k2P6muKyzR9X
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
tuCJZ9MEWD5lPZEp/A+pvr2+32kezcfr/eWAP+2ICceDNnMaAYYL3Oa6caEV
aXmzUHuYSRYy4liZ7HobEaudDiU7WGWhz3BwvNG+WqTnV3+eGKcs7LS8Mvtr
oAK5fvZCBvMGWRjR6Gr8lliCjI00JA/yyUKc6twJwZxfiOODk7E1QrKwLqJD
5+TFHGR+Y+EbRFQW9mj5vnPcnomQP2kGx0rKQmXWiPQGy2/IugPfnzzHy0L/
e9NXboknIY9rle+7bpKF5llqkdOEWIT7WqzzhS2yUP9kY7orYxQSiJO+qask
C1tt3X/o/H6JiAS/sN69A7Wp//CJlkAkXGHDWUlVNB+ZnduHbzxFZKgPT7Lu
lYVZCvuM3+c9QN6fXNIZIaJxUSnNk4JkZGv3bVCvibqIST8ecUKS3AZ352ij
FtT5uevhLWQXj/W2hMOoizc6SDVcRr5HN+GDjqHutBvH81xASOoGG++cQO0q
KP1M7CyS86dog40h6h2n0/vSDJBDlgdY9M6gNr+aoPr4OFI89WNhzznUOIJM
isdB5MSTHePSFqiVFdIagiFSIxXfy26NumDrnMEtNcTkq0zr2CXUPazuqYw7
kBadsJrGa6hHwkcjHm9BrP7y/MmzRS39j2D9jID03PLJ/eiAOkLknnu5OHKd
BfcjxBk1/PYrfZ8gMvbSKemeO3b/1nHckQ2I4/bh95fImMfuf1rPiszn2rw+
4YX5wIODCziEbNwcuNcHs+RfF9ZZKvOg4WOCL2aViF7bMeojjz9kLn/MtszP
tvVTuYW0nSYDMbsv2K3rpAbEZ15vfoG5ZzyG/JcqDHZZ/XpFH38iMrOaekTR
ooM5AnNowrRqKfWu2DPL/dH08YcjLudTU9gz2u7FYk7MTRbOonZNd5tTEjGT
9y2JpVFFuwRa55IwQ+3cF0nUY1Wa59W+YTb/0lX5gUrOudF8+zvdzqVikdSv
Sa/OfaHQrfbweSi1501B00g25iw49e45VfzppKlSPmb0xG/4iKrvhm+8Wki3
tbHyfarnZT2TuBK6/aMkXampRu71XRV0Rwln21H7tOOMZWvprr47dIUquaum
1qKR7ozTpy9QT+KZjN620K1WnmdKfcijXNPUQbeX+sgp6vels4aiPXTL/4nU
pQ4MPKoyGqC7p/OZFlW6MfVU8AjdSR8eEKkGvzsqKiboxt3bsZvqk8ZzkmeW
btsXtkrUzBhi+bHF5fj2RjnqcOAV/ScMcpizqiylqPj7L0oL1tFNlngkRD1t
m3echYNu3DElHupjs9E/B7iX7aDBSqXqSh7z4Fsez/sZRx3be7SYKrQcN5uc
psgpOB9dEF2O1+wcpRgLxxSqSy3HWb/2UHzXVRx2Iiw7M7ONkjW+VPB187Lf
ONdTxtu26oxtXXbn4QrKpjLjX9uVl61/oJBiQn1w8PquZds25lCeJab8jFdb
iQtkUHJetmj1aCybfOsLZcqHK09Oc9ll/QkUBSf1Axe0lw25oilnrW1yIg4v
G1cYTvE/FajZfGzZWQlBlDzNrCyxkyvxz08pM9sHwZnTK9frP6BskxRFQkxW
4q/uUs5zHSJVma147jYlYM6ewnthxX43Kfk9ERp6F1ccZ0OZq/mT4Xt1xdrm
FMWfc3sLb674rBHF/MvmH6wOK87XpwRFGqhrO69YRIdS4OeRft99xbqalIU7
n/ZkkVdcp0ZRvtaYuui14jIVygUTNtV9j1YcoUAJ0dn9zfnpis3xlEJVy12p
z1dMFqUsyfp9GQ9eMY6fsoM/c4fKyxVDTooNQ2/yjTer45koYcOCKolRq+MX
Mov/7k/qfb/qiUxc8c3tmxNWPZh5OozoJv551f8yE204f/F+WXVrJuOuej7W
tFXXZZ5h+GC28GPVZZlJJQ7xo9RVF2SyhO+f6spZdVbm2cs8+5vy15yi2vy0
vHDVSZlszIn1+SVrNit3kcusWDPnNUHK+4ZV43BWkboDbn1r/nFDVO3W0Jp5
NHo8bcbWTKnxFDsxt2Yhrowjmzg2/e8CR4W4MoU1S2pNT/xUXLMD70+YobJm
mUTzuhj1Nbu2vWB1O7zmbbosNnKX1+wv04F3jV2zmi6Tq2nimlscCeUaSWtW
Kr5wj5a25j+OnY1ev9bMUfwvyK9rzV6OPSwxspv/t0vRYF9pxJol2o63Hvok
/78vId2LKXEK//sGe60O/LHlf4uJL2VkpW/939KemUxaKdv+d5thuXNvluL/
PjwqIXSfovS/r81ktWqUbv/fE3GLYPG68v9el5n6zrB/zRNMYpLAXuV/qyq/
2oYfW3M0y8WYhzd2/O8RvuZd7pNr9me6ZXzVfuf/1mIcjH99e82zuMuLpU5r
tlwyj9rlvuZds/oDi15rrhtSJvuHrFmqYeTDt+9rrqq7NtedsWaf2h5dUeqa
R6paR+/mrDmntGyfTtGabX4mlTY0rVk0bxt+fcuaS3NiHUDbmtWyIjZG/1sz
R4b/hetDa6Z+50p9O7Jm+3QftoqxNTd9I39UnV6z/9cF2qXZNWt/cT75an7N
c8kT0X8W1/wpyXaaRlvzfxAtzDY=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6257314854042015`*^9, {3.625731553474095*^9, 3.6257316078782063`*^9}, 
   3.6257316624423275`*^9}]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.0 for Microsoft Windows (32-bit) (July 1, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4296, 59, 45, "Input"],
Cell[4857, 81, 106, 1, 45, "Text"],
Cell[4966, 84, 4397, 62, 45, "Input"],
Cell[9366, 148, 98, 1, 45, "Text"],
Cell[CellGroupData[{
Cell[9489, 153, 37047, 1034, 2627, "Input"],
Cell[46539, 1189, 1761, 46, 73, "Output"],
Cell[48303, 1237, 31492, 611, 315, "Output"],
Cell[79798, 1850, 17171, 334, 359, "Output"],
Cell[96972, 2186, 13565, 274, 371, "Output"],
Cell[110540, 2462, 13257, 269, 374, "Output"],
Cell[123800, 2733, 8160, 168, 400, "Output"],
Cell[131963, 2903, 13187, 270, 381, "Output"],
Cell[145153, 3175, 7979, 165, 367, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153169, 3345, 38591, 784, 359, "Input"],
Cell[191763, 4131, 13318, 270, 364, "Output"],
Cell[205084, 4403, 13063, 268, 374, "Output"],
Cell[218150, 4673, 7909, 164, 367, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226096, 4842, 1023, 30, 45, "Input"],
Cell[227122, 4874, 510, 14, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227669, 4893, 1048, 31, 75, "Input"],
Cell[228720, 4926, 508, 14, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229265, 4945, 1427, 44, 104, "Input"],
Cell[230695, 4991, 239, 7, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230971, 5003, 286, 7, 45, "Input"],
Cell[231260, 5012, 1432, 40, 73, "Output"]
}, Open  ]],
Cell[232707, 5055, 542, 18, 45, "Input"],
Cell[CellGroupData[{
Cell[233274, 5077, 610, 16, 45, "Input"],
Cell[233887, 5095, 21070, 357, 361, "Output"]
}, Open  ]],
Cell[254972, 5455, 296, 7, 45, "Input"],
Cell[255271, 5464, 947, 25, 45, "Input"],
Cell[CellGroupData[{
Cell[256243, 5493, 577, 17, 45, "Input"],
Cell[256823, 5512, 20271, 343, 357, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277131, 5860, 399, 11, 45, "Input"],
Cell[277533, 5873, 1240, 44, 148, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278810, 5922, 765, 21, 45, "Input"],
Cell[279578, 5945, 21849, 370, 357, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
