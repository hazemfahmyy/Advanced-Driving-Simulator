(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    751756,      14851]
NotebookOptionsPosition[    750100,      14795]
NotebookOutlinePosition[    750622,      14816]
CellTagsIndexPosition[    750579,      14813]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Steering", " ", "is", " ", "working", " ", "in", " ", "a", " ", "very", 
    " ", "limited", " ", "interval", " ", "of", " ", "time", " ", 
    RowBox[{"(", 
     RowBox[{"4.5", "s"}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Steering", " ", "Angle", " ", "and", " ", "Braking", " ", "Ratio", " ", 
    "are", " ", "inputs"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Velocity", " ", "-", " ", 
    RowBox[{"Accelerations", " ", "are", " ", "output"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rules", " ", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Tire", " ", "Cornering", " ", "Stiffness"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        SubscriptBox["C", "\[Alpha]1"], "\[Rule]", "80000.0"}], ",", 
       RowBox[{
        SubscriptBox["C", "\[Alpha]2"], "\[Rule]", "80000.0"}], ",", 
       RowBox[{
        SubscriptBox["C", "\[Alpha]3"], "\[Rule]", "80000.0"}], ",", 
       RowBox[{
        SubscriptBox["C", "\[Alpha]4"], "\[Rule]", "80000.0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Friction", " ", "Coefficient"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[Mu]", "1"], "\[Rule]", "1.0"}], ",", 
       RowBox[{
        SubscriptBox["\[Mu]", "2"], "\[Rule]", "1.0"}], ",", 
       RowBox[{
        SubscriptBox["\[Mu]", "3"], "\[Rule]", "1.0"}], ",", 
       RowBox[{
        SubscriptBox["\[Mu]", "4"], "\[Rule]", "1.0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Vertical", " ", "Force"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["F", "z1"], "\[Rule]", "26719.0"}], ",", 
       RowBox[{
        SubscriptBox["F", "z2"], "\[Rule]", "26719.0"}], ",", 
       RowBox[{
        SubscriptBox["F", "z3"], "\[Rule]", "21295.0"}], ",", 
       RowBox[{
        SubscriptBox["F", "z4"], "\[Rule]", "21295.0"}], 
       RowBox[{"(*", 
        RowBox[{"NOT", " ", "SURE"}], "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Vehicle", " ", "Dimensions"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"m", " ", "\[Rule]", "2050.0"}], ",", 
       RowBox[{
        SubscriptBox["\[Omega]", "t"], "\[Rule]", "1.63"}], ",", 
       RowBox[{
        SubscriptBox["l", "f"], "\[Rule]", "1.43"}], ",", 
       RowBox[{
        SubscriptBox["l", "r"], "\[Rule]", "1.47"}], " ", ",", " ", 
       RowBox[{
        SubscriptBox["J", "z"], " ", "\[Rule]", " ", "3344.0"}], " ", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "Gains", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["K", "y"], "\[Rule]", " ", 
        RowBox[{"-", "0.1"}]}], ",", 
       RowBox[{
        SubscriptBox["K", "\[Psi]"], "\[Rule]", " ", 
        RowBox[{"-", "1.1"}]}], ",", 
       RowBox[{
        SubscriptBox["\[Psi]", "d1"], " ", "\[Rule]", "0.1"}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"time", " ", "=", " ", "25"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]0", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "10", ",", "20", ",", "30"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"5", ",", "5", ",", "5", ",", "5"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Beta]", "r"], "=", 
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.5", ",", 
       RowBox[{"-", "0.5"}], ",", 
       RowBox[{"-", "0.1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Ratio1", "[", "\[Beta]r_", "]"}], ":=", 
     RowBox[{"(", " ", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"1.0", "-", 
        RowBox[{"\[Beta]r", "^", "2"}]}], "]"}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Brake1", "[", 
      RowBox[{"t_", ",", "\[Tau]_", ",", "\[Beta]r_"}], "]"}], ":=", 
     RowBox[{"\[Beta]r", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Tanh", "[", 
            RowBox[{"20", "t"}], "]"}]}], ")"}], "/", "2"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"Tanh", "[", 
            RowBox[{"20", 
             RowBox[{"(", 
              RowBox[{"t", "-", "\[Tau]"}], ")"}]}], "]"}]}], ")"}], "/", 
         "2"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Brake2", "[", 
      RowBox[{"t_", ",", "\[Tau]0_", ",", "\[Tau]_", ",", "\[Beta]r_"}], 
      "]"}], ":=", 
     RowBox[{"Fold", "[", 
      RowBox[{"Plus", ",", "0", ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Brake1", "[", 
          RowBox[{
           RowBox[{"t", "-", 
            RowBox[{
            "\[Tau]0", "\[LeftDoubleBracket]", "k", 
             "\[RightDoubleBracket]"}]}], ",", 
           RowBox[{
           "\[Tau]", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
           ",", 
           RowBox[{
           "\[Beta]r", "\[LeftDoubleBracket]", "k", 
            "\[RightDoubleBracket]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", 
           RowBox[{"Length", "[", "\[Tau]", "]"}]}], "}"}]}], "]"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Eta]", " ", "=", " ", 
     RowBox[{"Ratio1", "[", 
      RowBox[{"(", 
       RowBox[{"Brake2", "[", 
        RowBox[{"t", ",", "\[Tau]0", " ", ",", "\[Tau]", " ", ",", 
         SubscriptBox["\[Beta]", "r"]}], "]"}], ")"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"variableRules2", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Psi]", "d"], "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"t", ",", "$dumy"}], "]"}]}], "/.", 
       RowBox[{"$dumy", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"0.1", 
           RowBox[{"Sin", "[", 
            RowBox[{"10", " ", "t"}], "]"}]}], "/.", "rules"}], ")"}]}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"variableRules", "=", 
     RowBox[{"{", 
      RowBox[{"\[Delta]", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["K", "y"], 
            RowBox[{
             SubscriptBox["e", "y"], "[", "t", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["K", "\[Psi]"], 
            RowBox[{
             SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["K", "\[Psi]"], 
            RowBox[{
             SubscriptBox["\[Psi]", "d"], "[", "t", "]"}]}], "-", 
           RowBox[{
            SubscriptBox["K", "\[Psi]"], 
            SubscriptBox["\[Psi]", "d1"]}]}], "/.", "variableRules2"}], "/.", 
         "rules"}], ")"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Slip", " ", "angle"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Alpha]", "sl1"], "=", 
      RowBox[{"ArcTan", "[", 
       RowBox[{"3", "\[Eta]", "*", 
        SubscriptBox["\[Mu]", "1"], 
        RowBox[{
         SubscriptBox["F", "z1"], "/", 
         SubscriptBox["C", "\[Alpha]1"]}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"/.", "rules"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "sl2"], "=", 
       RowBox[{
        RowBox[{"ArcTan", "[", 
         RowBox[{
          RowBox[{"3", "\[Eta]", "*", 
           SubscriptBox["\[Mu]", "2"], 
           RowBox[{
            SubscriptBox["F", "z2"], "/", 
            SubscriptBox["C", "\[Alpha]2"]}]}], ","}], "]"}], "/.", 
        "rules"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "sl3"], "=", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"3", "\[Eta]", "*", 
         SubscriptBox["\[Mu]", "3"], 
         RowBox[{
          SubscriptBox["F", "z3"], "/", 
          SubscriptBox["C", "\[Alpha]3"]}]}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"/.", "rules"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["\[Alpha]", "sl4"], "=", 
       RowBox[{"ArcTan", "[", 
        RowBox[{"3", "\[Eta]", "*", 
         SubscriptBox["\[Mu]", "4"], 
         RowBox[{
          SubscriptBox["F", "z4"], "/", 
          SubscriptBox["C", "\[Alpha]4"]}]}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"/.", "rules"}], ";"}]}], "}"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"slipAngle", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ArcTan", "[", 
         RowBox[{"3", "\[Eta]", "*", 
          SubscriptBox["\[Mu]", "1"], 
          RowBox[{
           SubscriptBox["F", "z1"], "/", 
           SubscriptBox["C", "\[Alpha]1"]}]}], "]"}], ",", 
        RowBox[{"ArcTan", "[", 
         RowBox[{
          RowBox[{"3", "\[Eta]", "*", 
           SubscriptBox["\[Mu]", "2"], 
           RowBox[{
            SubscriptBox["F", "z2"], "/", 
            SubscriptBox["C", "\[Alpha]2"]}]}], ","}], "]"}], ","}], "}"}], "/.",
       "rules"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"slipAngle", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Alpha]", "1"], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"y", "'"}], "[", "t", "]"}], " ", "+", " ", 
            RowBox[{
             SubscriptBox["l", "f"], 
             RowBox[{
              RowBox[{"\[Psi]", "'"}], "[", "t", "]"}]}]}], ")"}], "/", 
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}]}], ")"}], "-", "\[Delta]"}], "/.",
        "variableRules"}], "/.", "rules"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Alpha]", "2"], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"y", "'"}], "[", "t", "]"}], " ", "+", " ", 
            RowBox[{
             SubscriptBox["l", "f"], 
             RowBox[{
              RowBox[{"\[Psi]", "'"}], "[", "t", "]"}]}]}], ")"}], "/", 
          RowBox[{
           RowBox[{"x", "'"}], "[", "t", "]"}]}], ")"}], "-", "\[Delta]"}], "/.",
        "variableRules"}], "/.", "rules"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Alpha]", "3"], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "t", "]"}], " ", "+", " ", 
           RowBox[{
            SubscriptBox["l", "f"], 
            RowBox[{
             RowBox[{"\[Psi]", "'"}], "[", "t", "]"}]}]}], ")"}], "/", 
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}]}], ")"}], "-", "0"}], "/.", 
      "rules"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Alpha]", "4"], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "t", "]"}], " ", "+", " ", 
           RowBox[{
            SubscriptBox["l", "f"], 
            RowBox[{
             RowBox[{"\[Psi]", "'"}], "[", "t", "]"}]}]}], ")"}], "/", 
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}]}], ")"}], "-", "0"}], "/.", 
      "rules"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tire", " ", "Lateral", " ", "Force"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["f", "x1"], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Brake2", "[", 
         RowBox[{"t", ",", "\[Tau]0", ",", "\[Tau]", ",", 
          SubscriptBox["\[Beta]", "r"]}], "]"}], ")"}], "*", 
       SubscriptBox["\[Mu]", "1"], 
       SubscriptBox["F", "z1"]}], "/.", "rules"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["f", "x2"], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Brake2", "[", 
         RowBox[{"t", ",", "\[Tau]0", ",", "\[Tau]", ",", 
          SubscriptBox["\[Beta]", "r"]}], "]"}], ")"}], "*", 
       SubscriptBox["\[Mu]", "2"], 
       SubscriptBox["F", "z2"]}], "/.", "rules"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["f", "x3"], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Brake2", "[", 
         RowBox[{"t", ",", "\[Tau]0", ",", "\[Tau]", ",", 
          SubscriptBox["\[Beta]", "r"]}], "]"}], ")"}], "*", 
       SubscriptBox["\[Mu]", "3"], 
       SubscriptBox["F", "z3"]}], "/.", "rules"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["f", "x4"], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Brake2", "[", 
         RowBox[{"t", ",", "\[Tau]0", ",", "\[Tau]", ",", 
          SubscriptBox["\[Beta]", "r"]}], "]"}], ")"}], "*", 
       SubscriptBox["\[Mu]", "4"], 
       SubscriptBox["F", "z4"]}], "/.", "rules"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tire", " ", "Longitudnal", " ", "Force"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["Term", "1"], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["C", "\[Alpha]1"]}], 
        RowBox[{"Tan", "[", 
         SubscriptBox["\[Alpha]", "1"], "]"}]}], "+", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            SubscriptBox["C", "\[Alpha]1"], ")"}], "^", "2"}], "/", 
          RowBox[{"(", 
           RowBox[{"3", "\[Eta]", "*", 
            SubscriptBox["\[Mu]", "1"], 
            SubscriptBox["F", "z1"]}], ")"}]}], " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"Tan", "[", 
           SubscriptBox["\[Alpha]", "1"], "]"}], "]"}], " ", 
         RowBox[{"Tan", "[", 
          SubscriptBox["\[Alpha]", "1"], "]"}]}], ")"}], "-", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            SubscriptBox["C", "\[Alpha]1"], ")"}], "^", "3"}], "/", 
          RowBox[{"(", 
           RowBox[{"27", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", "\[Eta]", ")"}], "^", "2"}], 
               SubscriptBox["\[Mu]", "1"], 
               SubscriptBox["F", "z1"]}], ")"}], "^", "2"}]}], ")"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Tan", "[", 
            SubscriptBox["\[Alpha]", "1"], "]"}], ")"}], "^", "3"}]}], 
        ")"}]}], "/.", "rules"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["Term", "12"], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Eta]"}], " ", 
       SubscriptBox["\[Mu]", "1"], 
       SubscriptBox["F", "z1"], 
       RowBox[{"Sign", "[", 
        SubscriptBox["\[Alpha]", "1"], "]"}]}], "/.", "rules"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["Term", "2"], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["C", "\[Alpha]2"]}], " ", 
        RowBox[{"Tan", "[", 
         SubscriptBox["\[Alpha]", "2"], "]"}]}], "+", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            SubscriptBox["C", "\[Alpha]2"], ")"}], "^", "2"}], "/", 
          RowBox[{"(", 
           RowBox[{"3", "\[Eta]", "*", 
            SubscriptBox["\[Mu]", "2"], 
            SubscriptBox["F", "z2"]}], ")"}]}], " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"Tan", "[", 
           SubscriptBox["\[Alpha]", "2"], "]"}], "]"}], " ", 
         RowBox[{"Tan", "[", 
          SubscriptBox["\[Alpha]", "2"], "]"}]}], ")"}], "-", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            SubscriptBox["C", "\[Alpha]2"], ")"}], "^", "3"}], "/", 
          RowBox[{"(", 
           RowBox[{"27", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Eta]", "^", "2"}], 
               SubscriptBox["\[Mu]", "2"], 
               SubscriptBox["F", "z2"]}], ")"}], "^", "2"}]}], ")"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Tan", "[", 
            SubscriptBox["\[Alpha]", "2"], "]"}], ")"}], "^", "3"}]}], 
        ")"}]}], "/.", "rules"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["Term", "22"], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Eta]"}], " ", 
       SubscriptBox["\[Mu]", "2"], 
       SubscriptBox["F", "z2"], 
       RowBox[{"Sign", "[", 
        SubscriptBox["\[Alpha]", "2"], "]"}]}], "/.", "rules"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["Term", "3"], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["C", "\[Alpha]3"]}], " ", 
        RowBox[{"Tan", "[", 
         SubscriptBox["\[Alpha]", "3"], "]"}]}], "+", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            SubscriptBox["C", "\[Alpha]3"], ")"}], "^", "2"}], "/", 
          RowBox[{"(", 
           RowBox[{"3", "\[Eta]", "*", 
            SubscriptBox["\[Mu]", "3"], 
            SubscriptBox["F", "z3"]}], ")"}]}], " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"Tan", "[", 
           SubscriptBox["\[Alpha]", "3"], "]"}], "]"}], " ", 
         RowBox[{"Tan", "[", 
          SubscriptBox["\[Alpha]", "3"], "]"}]}], ")"}], "-", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            SubscriptBox["C", "\[Alpha]3"], ")"}], "^", "3"}], "/", 
          RowBox[{"(", 
           RowBox[{"27", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Eta]", "^", "2"}], 
               SubscriptBox["\[Mu]", "3"], 
               SubscriptBox["F", "z3"]}], ")"}], "^", "2"}]}], ")"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Tan", "[", 
            SubscriptBox["\[Alpha]", "3"], "]"}], ")"}], "^", "3"}]}], 
        ")"}]}], "/.", "rules"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["Term", "32"], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Eta]"}], " ", 
       SubscriptBox["\[Mu]", "3"], 
       SubscriptBox["F", "z3"], 
       RowBox[{"Sign", "[", 
        SubscriptBox["\[Alpha]", "3"], "]"}]}], "/.", "rules"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["Term", "4"], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["C", "\[Alpha]4"]}], " ", 
        RowBox[{"Tan", "[", 
         SubscriptBox["\[Alpha]", "4"], "]"}]}], "+", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            SubscriptBox["C", "\[Alpha]4"], ")"}], "^", "2"}], "/", 
          RowBox[{"(", 
           RowBox[{"3", "\[Eta]", "*", 
            SubscriptBox["\[Mu]", "4"], 
            SubscriptBox["F", "z4"]}], ")"}]}], " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"Tan", "[", 
           SubscriptBox["\[Alpha]", "4"], "]"}], "]"}], " ", 
         RowBox[{"Tan", "[", 
          SubscriptBox["\[Alpha]", "4"], "]"}]}], ")"}], "-", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            SubscriptBox["C", "\[Alpha]4"], ")"}], "^", "3"}], "/", 
          RowBox[{"(", 
           RowBox[{"27", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Eta]", "^", "2"}], 
               SubscriptBox["\[Mu]", "4"], 
               SubscriptBox["F", "z4"]}], ")"}], "^", "2"}]}], ")"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Tan", "[", 
            SubscriptBox["\[Alpha]", "4"], "]"}], ")"}], "^", "3"}]}], 
        ")"}]}], "/.", "rules"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["Term", "42"], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Eta]"}], " ", 
       SubscriptBox["\[Mu]", "4"], 
       SubscriptBox["F", "z4"], 
       RowBox[{"Sign", "[", 
        SubscriptBox["\[Alpha]", "4"], "]"}]}], "/.", "rules"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["f", "y1"], "=", 
     RowBox[{
      RowBox[{"Piecewise", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["Term", "1"], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Abs", "[", 
              SubscriptBox["\[Alpha]", "1"], "]"}], ")"}], "<", 
            SubscriptBox["\[Alpha]", "sl1"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["Term", "12"], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Abs", "[", 
              SubscriptBox["\[Alpha]", "1"], "]"}], ")"}], "\[GreaterEqual]", 
            SubscriptBox["\[Alpha]", "sl1"]}]}], "}"}]}], "}"}], "]"}], "/.", 
      "rules"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["f", "y2"], "=", 
     RowBox[{
      RowBox[{"Piecewise", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["Term", "2"], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Abs", "[", 
              SubscriptBox["\[Alpha]", "2"], "]"}], ")"}], "<", 
            SubscriptBox["\[Alpha]", "sl2"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["Term", "22"], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Abs", "[", 
              SubscriptBox["\[Alpha]", "2"], "]"}], ")"}], "\[GreaterEqual]", 
            SubscriptBox["\[Alpha]", "sl2"]}]}], "}"}]}], "}"}], "]"}], "/.", 
      "rules"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["f", "y3"], "=", 
     RowBox[{
      RowBox[{"Piecewise", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["Term", "3"], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Abs", "[", 
              SubscriptBox["\[Alpha]", "3"], "]"}], ")"}], "<", 
            SubscriptBox["\[Alpha]", "sl3"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["Term", "32"], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Abs", "[", 
              SubscriptBox["\[Alpha]", "3"], "]"}], ")"}], "\[GreaterEqual]", 
            SubscriptBox["\[Alpha]", "sl3"]}]}], "}"}]}], "}"}], "]"}], "/.", 
      "rules"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["f", "y4"], "=", 
     RowBox[{
      RowBox[{"Piecewise", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["Term", "4"], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Abs", "[", 
              SubscriptBox["\[Alpha]", "4"], "]"}], ")"}], "<", 
            SubscriptBox["\[Alpha]", "sl4"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["Term", "42"], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Abs", "[", 
              SubscriptBox["\[Alpha]", "4"], "]"}], ")"}], "\[GreaterEqual]", 
            SubscriptBox["\[Alpha]", "sl4"]}]}], "}"}]}], "}"}], "]"}], "/.", 
      "rules"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["F", "x1"], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["f", "x1"], " ", 
         RowBox[{"Cos", "[", "\[Delta]", "]"}]}], " ", "-", " ", 
        RowBox[{
         SubscriptBox["f", "y1"], " ", 
         RowBox[{"Sin", "[", "\[Delta]", "]"}]}]}], "/.", "variableRules"}], "/.",
       "rules"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["F", "x2"], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["f", "x2"], " ", 
         RowBox[{"Cos", "[", "\[Delta]", "]"}]}], " ", "-", " ", 
        RowBox[{
         SubscriptBox["f", "y2"], " ", 
         RowBox[{"Sin", "[", "\[Delta]", "]"}]}]}], "/.", "variableRules"}], "/.",
       "rules"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["F", "x3"], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["f", "x3"], " ", 
         RowBox[{"Cos", "[", "0", "]"}]}], " ", "-", " ", 
        RowBox[{
         SubscriptBox["f", "y3"], " ", 
         RowBox[{"Sin", "[", "0", "]"}]}]}], "/.", "variableRules"}], "/.", 
      "rules"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["F", "x4"], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["f", "x4"], " ", 
         RowBox[{"Cos", "[", "0", "]"}]}], " ", "-", " ", 
        RowBox[{
         SubscriptBox["f", "y4"], " ", 
         RowBox[{"Sin", "[", "0", "]"}]}]}], "/.", "variableRules"}], "/.", 
      "rules"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["F", "y1"], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["f", "x1"], " ", 
         RowBox[{"Sin", "[", "\[Delta]", "]"}]}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["f", "y1"], " ", 
         RowBox[{"Cos", "[", "\[Delta]", "]"}]}]}], "/.", "variableRules"}], "/.",
       "rules"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["F", "y2"], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["f", "x2"], " ", 
         RowBox[{"Sin", "[", "\[Delta]", "]"}]}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["f", "y2"], " ", 
         RowBox[{"Cos", "[", "\[Delta]", "]"}]}]}], "/.", "variableRules"}], "/.",
       "rules"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["F", "y3"], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["f", "x3"], " ", 
         RowBox[{"Sin", "[", "0", "]"}]}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["f", "y3"], " ", 
         RowBox[{"Cos", "[", "0", "]"}]}]}], "/.", "variableRules"}], "/.", 
      "rules"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["F", "y4"], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["f", "x4"], " ", 
         RowBox[{"Sin", "[", "0", "]"}]}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["f", "y4"], " ", 
         RowBox[{"Cos", "[", "0", "]"}]}]}], "/.", "variableRules"}], "/.", 
      "rules"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Eq1", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"m", " ", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"x", "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], " ", "\[Equal]", " ", 
       RowBox[{
        RowBox[{"m", " ", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"y", "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "1"}], "}"}]}], "]"}], 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], " ", "+", " ", 
        SubscriptBox["F", "x1"], " ", "+", 
        SubscriptBox["F", "x2"], " ", "+", 
        SubscriptBox["F", "x3"], " ", "+", 
        SubscriptBox["F", "x4"]}]}], "/.", "rules"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Eq2", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"m", " ", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"y", "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], " ", "\[Equal]", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "m"}], " ", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "1"}], "}"}]}], "]"}], " ", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], " ", "+", " ", 
        SubscriptBox["F", "y1"], "+", " ", 
        SubscriptBox["F", "y2"], "+", " ", 
        SubscriptBox["F", "y3"], "+", " ", 
        SubscriptBox["F", "y4"]}]}], "/.", "rules"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Eq3", " ", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["J", "z"], 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], " ", "\[Equal]", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["l", "f"], 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["F", "y1"], " ", "+", " ", 
           SubscriptBox["F", "y2"]}], ")"}]}], " ", "-", " ", 
        RowBox[{
         SubscriptBox["l", "r"], "*", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["F", "y3"], " ", "+", " ", 
           SubscriptBox["F", "y4"]}], ")"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Omega]", "t"], "/", "2"}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SubscriptBox["F", "x1"]}], " ", "+", " ", 
           SubscriptBox["F", "x2"], " ", "-", " ", 
           SubscriptBox["F", "x3"], " ", "+", " ", 
           SubscriptBox["F", "x4"]}], ")"}]}]}]}], "/.", "rules"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Eq4", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"m", " ", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            SubscriptBox["e", "\[Psi]"], "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], "\[Equal]", 
        RowBox[{
         RowBox[{"m", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], "-", 
         RowBox[{"m", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Psi]", "d"], "[", "t", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}]}]}], "/.", 
       "variableRules2"}], "/.", "rules"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Eq5", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"m", " ", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["e", "y"], "[", "t", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], "\[Equal]", 
       RowBox[{
        RowBox[{"m", " ", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"y", "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "1"}], "}"}]}], "]"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["e", "\[Psi]"], "[", "t", "]"}], "]"}]}], " ", "+", 
        " ", 
        RowBox[{"m", " ", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "1"}], "}"}]}], "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{
           SubscriptBox["e", "\[Psi]"], "[", "t", "]"}], "]"}]}]}]}], "/.", 
      "rules"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"inititials", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0.1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "0.1"}], ",", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0.1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "0.01"}], ",", 
      RowBox[{
       RowBox[{"\[Psi]", "[", "0", "]"}], "\[Equal]", "0.01"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]", "'"}], "[", "0", "]"}], "\[Equal]", "0.01"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["e", "y"], "[", "0", "]"}], "\[Equal]", "0.08"}], ",", 
      RowBox[{
       RowBox[{
        SubscriptBox["e", "\[Psi]"], "[", "0", "]"}], "\[Equal]", "0.1"}]}], 
     "}"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"solution", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "Eq1", ",", "Eq2", ",", "Eq3", ",", "Eq4", ",", "Eq5", ",", 
        "inititials"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "\[Psi]", ",", 
        SubscriptBox["e", "y"], ",", 
        SubscriptBox["e", "\[Psi]"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "time"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "solution"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "time"}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", "\"\<x,y\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x(t)\>\"", ",", "\"\<y(t)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "'"}], "[", "t", "]"}], ",", 
         RowBox[{
          RowBox[{"y", "'"}], "[", "t", "]"}]}], "}"}], "/.", "solution"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "time"}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", "\"\<vx,vy\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<vx(t)\>\"", ",", "\"\<vy(t)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "''"}], "[", "t", "]"}], ",", 
         RowBox[{
          RowBox[{"y", "''"}], "[", "t", "]"}]}], "}"}], "/.", "solution"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "time"}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", "\"\<ax,ay\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<ax(t)\>\"", ",", "\"\<ay(t)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", "\[Eta]", "}"}], "/.", "solution"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "time"}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", "\"\<\[Eta]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<\[Eta]\>\"", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Delta]", "/.", "variableRules"}], "}"}], "/.", 
       "solution"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "time"}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", "\"\<\[Delta]\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<\[Delta]\>\"", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "solution"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "time"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.624196325100603*^9, 3.6241963437600574`*^9}, {
   3.624196376806099*^9, 3.6241964907461176`*^9}, {3.624196545026332*^9, 
   3.624196567544357*^9}, {3.6241966819646935`*^9, 3.6241968363356905`*^9}, {
   3.624196868505151*^9, 3.6241969190468736`*^9}, {3.6241969942590513`*^9, 
   3.6241971343064938`*^9}, {3.6241971984903097`*^9, 
   3.6241972249649744`*^9}, {3.6241972664746695`*^9, 
   3.6241973851128225`*^9}, {3.6241974731525593`*^9, 
   3.6241976041019287`*^9}, {3.6241976389511766`*^9, 
   3.6241977238558235`*^9}, {3.624197760078991*^9, 3.6241977630329638`*^9}, {
   3.6241978065469933`*^9, 3.6241978654733086`*^9}, {3.624197899688138*^9, 
   3.6241980344950833`*^9}, {3.6241985633168945`*^9, 3.624198657793927*^9}, {
   3.624198869158951*^9, 3.624198874531535*^9}, {3.624199284939352*^9, 
   3.6241993916355352`*^9}, {3.624199437406071*^9, 3.6241994649514523`*^9}, {
   3.624200520185187*^9, 3.6242005588900104`*^9}, {3.624201284315*^9, 
   3.6242013914935045`*^9}, {3.624201434918482*^9, 3.6242014354358253`*^9}, {
   3.624201502906839*^9, 3.624201525439872*^9}, {3.6242016607391405`*^9, 
   3.6242017247068186`*^9}, {3.624201818708536*^9, 3.62420186890403*^9}, {
   3.624201903171886*^9, 3.6242020533710985`*^9}, 3.624202083910473*^9, {
   3.6242021155675936`*^9, 3.624202144827117*^9}, {3.6242139415763044`*^9, 
   3.624214236563114*^9}, {3.6242142846371865`*^9, 3.6242143142779627`*^9}, {
   3.6242143986632643`*^9, 3.6242144273414*^9}, {3.624214547682685*^9, 
   3.624214598885847*^9}, {3.624214731289183*^9, 3.624214875940693*^9}, {
   3.624215009472782*^9, 3.6242150150735188`*^9}, {3.6242152066913633`*^9, 
   3.624215233789442*^9}, {3.624215428412897*^9, 3.624215447837859*^9}, {
   3.6242157061001654`*^9, 3.6242158202223053`*^9}, {3.624216066257454*^9, 
   3.6242165541759834`*^9}, {3.624216627891164*^9, 3.6242166601356792`*^9}, {
   3.6242167232738028`*^9, 3.6242167338838806`*^9}, {3.6242167847137938`*^9, 
   3.6242167913292055`*^9}, {3.624216837345908*^9, 3.624216841886938*^9}, {
   3.624216917717536*^9, 3.6242169194947157`*^9}, {3.6242169518953333`*^9, 
   3.6242169530260873`*^9}, {3.6242171636669564`*^9, 3.624217177831417*^9}, {
   3.6242172091302853`*^9, 3.624217244018563*^9}, {3.6242172982987757`*^9, 
   3.624217367326831*^9}, {3.6242174866155596`*^9, 3.6242176375242434`*^9}, {
   3.624217677305787*^9, 3.6242176790489464`*^9}, {3.6242177107340865`*^9, 
   3.6242177147827873`*^9}, {3.624217821042689*^9, 3.624217865249175*^9}, {
   3.6242179216157956`*^9, 3.624217944339945*^9}, {3.624217993922024*^9, 
   3.624218019144851*^9}, {3.6242183724755945`*^9, 3.624218398778138*^9}, {
   3.6242184585219936`*^9, 3.6242184960700502`*^9}, {3.624218599888311*^9, 
   3.6242186004686985`*^9}, {3.6242187296270313`*^9, 3.624218734895545*^9}, {
   3.6242188004418526`*^9, 3.624218834593811*^9}, {3.624261534269424*^9, 
   3.624261555117385*^9}, {3.6242616311423116`*^9, 3.6242616326683273`*^9}, {
   3.6242627734353414`*^9, 3.6242630201479406`*^9}, {3.6242630783807945`*^9, 
   3.624263087641972*^9}, {3.6242631838481617`*^9, 3.6242633559029517`*^9}, {
   3.6242634350257387`*^9, 3.62426345422355*^9}, {3.6242638570843277`*^9, 
   3.624263923925926*^9}, {3.624264001414624*^9, 3.624264005835574*^9}, 
   3.6242642936525993`*^9, {3.6242644511927066`*^9, 3.6242644710809736`*^9}, {
   3.6242645959843082`*^9, 3.624264616767174*^9}, {3.6242646622235003`*^9, 
   3.62426467809409*^9}, {3.6242652040570016`*^9, 3.6242652151784215`*^9}, {
   3.6242657098438005`*^9, 3.624265896830555*^9}, {3.6242659870577526`*^9, 
   3.6242660433523116`*^9}, {3.624266134226939*^9, 3.624266155713277*^9}, {
   3.6242662029457884`*^9, 3.6242662037002926`*^9}, {3.624266334876809*^9, 
   3.624266410114007*^9}, {3.624266841921101*^9, 3.6242668705892267`*^9}, {
   3.624266910455825*^9, 3.6242669524368334`*^9}, {3.624267345358981*^9, 
   3.6242673798570004`*^9}, {3.624267429870367*^9, 3.6242674302756357`*^9}, {
   3.62426762651056*^9, 3.624267658216715*^9}, {3.6242677405116215`*^9, 
   3.6242677788552046`*^9}, 3.6242678155446815`*^9, {3.624267856892267*^9, 
   3.6242678731150913`*^9}, {3.6242680459774213`*^9, 
   3.6242680550504723`*^9}, {3.6242833949758673`*^9, 3.624283397879033*^9}, {
   3.6256606092314987`*^9, 3.6256606376765065`*^9}, {3.6256611227766523`*^9, 
   3.625661131268327*^9}, {3.625662270885947*^9, 3.625662272847254*^9}, 
   3.625662356245982*^9, 3.62566261988815*^9, 3.625662746057455*^9, 
   3.6256628228507795`*^9, {3.625665422137724*^9, 3.625665433409257*^9}, {
   3.6256654844683733`*^9, 3.625665493941701*^9}, 3.6256663104372897`*^9, {
   3.6256665954587398`*^9, 3.625666595691895*^9}, 3.6256667867145386`*^9, {
   3.6256675113917875`*^9, 3.6256675246586504`*^9}, {3.6256689100553675`*^9, 
   3.625668918933302*^9}, {3.6256689555927963`*^9, 3.625669119075048*^9}, {
   3.625669438551509*^9, 3.6256694459134426`*^9}, {3.62566968844549*^9, 
   3.6256696977146854`*^9}, {3.625669782685463*^9, 3.625669856067499*^9}, 
   3.6256713182055054`*^9, {3.625671378407734*^9, 3.6256714791430426`*^9}, {
   3.625672152180771*^9, 3.6256721595346837`*^9}, {3.6256730298392277`*^9, 
   3.6256730408535995`*^9}, 3.6256746893074045`*^9, {3.6256840845195184`*^9, 
   3.625684092001521*^9}, 3.6256841831644325`*^9, {3.6256842287929354`*^9, 
   3.6256842478836823`*^9}, 3.625684353627339*^9, {3.625684390494974*^9, 
   3.625684440254222*^9}, {3.625684536557576*^9, 3.6256845403641157`*^9}, {
   3.625684741883788*^9, 3.625684765738715*^9}, 3.625684839065708*^9, {
   3.6256849864171724`*^9, 3.625684986639321*^9}, {3.6256871252373447`*^9, 
   3.6256871357994013`*^9}, {3.62572147912282*^9, 3.6257214799193387`*^9}, {
   3.625729537346779*^9, 3.6257295380438185`*^9}, 3.62572990784797*^9, {
   3.6257307910164843`*^9, 3.6257308560292034`*^9}, {3.6257309196908445`*^9, 
   3.625731028503068*^9}, {3.6257311132529154`*^9, 3.6257311202503157`*^9}, {
   3.6257323829905405`*^9, 3.6257324187265844`*^9}, {3.625732514145042*^9, 
   3.6257325179692607`*^9}, {3.6257413839281597`*^9, 
   3.6257413928010902`*^9}, {3.6257432140590773`*^9, 3.625743223441346*^9}, {
   3.625743283030167*^9, 3.625743310818737*^9}, {3.625743410875605*^9, 
   3.6257434123335657`*^9}, {3.625743462754261*^9, 3.625743567356152*^9}, {
   3.6257437362420034`*^9, 3.625743796133024*^9}, 3.62574383462875*^9, {
   3.62574389163384*^9, 3.625743902676216*^9}, {3.6257440203418427`*^9, 
   3.6257440207391047`*^9}, {3.625744070676473*^9, 3.6257440709706736`*^9}, {
   3.6257441048343115`*^9, 3.6257441050134315`*^9}, {3.625744755261931*^9, 
   3.6257447994354353`*^9}, {3.6257448536376534`*^9, 
   3.6257448580506144`*^9}, {3.6257448920122943`*^9, 
   3.6257449403135695`*^9}, {3.625745010584527*^9, 3.6257451712298727`*^9}, {
   3.625745308926877*^9, 3.625745312083987*^9}, {3.625745375840605*^9, 
   3.6257453964153414`*^9}, {3.6257455116213193`*^9, 
   3.6257455165105877`*^9}, {3.6257458158426046`*^9, 3.625745822167828*^9}, {
   3.625745984898568*^9, 3.625746105363063*^9}, {3.625746161981894*^9, 
   3.6257464405390315`*^9}, {3.6257465900419264`*^9, 
   3.6257466612805424`*^9}, {3.6257467155778246`*^9, 3.625746738823346*^9}, {
   3.625746783007866*^9, 3.6257470572000866`*^9}, {3.625747208912459*^9, 
   3.6257472669942694`*^9}, {3.625747750810559*^9, 3.625747772159837*^9}, {
   3.62574788385446*^9, 3.6257479534109364`*^9}, {3.625747985038083*^9, 
   3.6257480186075044`*^9}, {3.6257480731109343`*^9, 3.625748154431259*^9}, {
   3.6257482324764137`*^9, 3.625748237758955*^9}, {3.625748280882754*^9, 
   3.6257485610559716`*^9}, {3.6257486077982054`*^9, 3.625748749104632*^9}, {
   3.625748824960311*^9, 3.62574898721673*^9}, 3.625749836553261*^9, {
   3.625749898022337*^9, 3.6257499712172565`*^9}, {3.6257500821683855`*^9, 
   3.625750120200801*^9}, {3.6257502452643657`*^9, 3.6257503018201685`*^9}, {
   3.6257503679663553`*^9, 3.625750384352307*^9}, {3.6257505558589077`*^9, 
   3.625750580086099*^9}, {3.625750783151785*^9, 3.6257508814985003`*^9}, {
   3.6257509198141055`*^9, 3.62575096235653*^9}, {3.6257510202792473`*^9, 
   3.6257510620941744`*^9}, 3.6257511153477597`*^9, {3.6257511892231245`*^9, 
   3.6257513265148616`*^9}, 3.6257514051293926`*^9, {3.62575143623818*^9, 
   3.6257514373559265`*^9}, {3.6257514809290423`*^9, 3.625751521071868*^9}, {
   3.625751604280465*^9, 3.6257516060636578`*^9}, {3.6257517522873645`*^9, 
   3.625751757661956*^9}, {3.6257519889685183`*^9, 3.6257521185811243`*^9}, {
   3.625752451068294*^9, 3.6257525455534306`*^9}, {3.625752716797856*^9, 
   3.6257527545100555`*^9}, {3.6257528069080687`*^9, 
   3.6257528814518776`*^9}, {3.6257530826234927`*^9, 3.625753082840644*^9}, {
   3.625753376201663*^9, 3.625753399281086*^9}, {3.6257534741501136`*^9, 
   3.6257535653000355`*^9}, {3.6257547698569107`*^9, 
   3.6257547732121563`*^9}, {3.625754897573253*^9, 3.6257548979034758`*^9}, 
   3.625754983861912*^9, {3.6257550624714375`*^9, 3.625755123589277*^9}, {
   3.6257554038265347`*^9, 3.6257557757070246`*^9}, {3.625755815345515*^9, 
   3.625755848458652*^9}, {3.6257559369717827`*^9, 3.625755970367102*^9}, {
   3.625756050924928*^9, 3.6257560889423327`*^9}, {3.6257562076726665`*^9, 
   3.6257562115492716`*^9}, {3.6257562547541304`*^9, 3.62575639776469*^9}, {
   3.6257564278628025`*^9, 3.6257564438344707`*^9}, {3.625756476819515*^9, 
   3.6257565275784335`*^9}, {3.625756603043869*^9, 3.6257566762357626`*^9}, {
   3.6257568498897996`*^9, 3.6257568757670937`*^9}, {3.625756965380973*^9, 
   3.625756981922025*^9}, {3.6257575193731527`*^9, 3.6257575475179615`*^9}, {
   3.6257575833639145`*^9, 3.6257575946364565`*^9}, {3.625757649393034*^9, 
   3.6257576637816463`*^9}, {3.625841080833971*^9, 3.6258410932052407`*^9}, 
   3.625841147625253*^9, {3.6258411845248957`*^9, 3.6258411927313824`*^9}, 
   3.625841233528655*^9, {3.6258412803759427`*^9, 3.625841338500785*^9}, {
   3.6258425823459277`*^9, 3.6258426080811224`*^9}, {3.625843371781436*^9, 
   3.6258433741290016`*^9}, {3.6266775478265543`*^9, 3.626677562741407*^9}, {
   3.6268633666452975`*^9, 3.626863549900752*^9}, {3.6268637053966556`*^9, 
   3.62686370731894*^9}, {3.6268637415908375`*^9, 3.6268638129235024`*^9}, {
   3.626863851490274*^9, 3.62686386900299*^9}, {3.6268639533903675`*^9, 
   3.6268639958307257`*^9}, {3.6268641203859525`*^9, 
   3.6268641563659935`*^9}, {3.6268641980778675`*^9, 
   3.6268642010478506`*^9}, {3.6268643117618313`*^9, 3.626864316819209*^9}, 
   3.626864365392667*^9, {3.6268644238006945`*^9, 3.6268644486152763`*^9}, {
   3.626864722568333*^9, 3.6268647232598085`*^9}, 3.626864822802312*^9, 
   3.6268648850038757`*^9, {3.6268650345618114`*^9, 3.6268650513390207`*^9}, {
   3.626865084553213*^9, 3.626865084756356*^9}, {3.626866592482823*^9, 
   3.626866597428136*^9}, {3.626866629722706*^9, 3.6268666311066275`*^9}, {
   3.6268666691700745`*^9, 3.626866684837532*^9}, {3.6268667257969027`*^9, 
   3.6268667259750185`*^9}, {3.62686675898608*^9, 3.626866786348363*^9}, {
   3.6268668170869*^9, 3.6268668205011864`*^9}, 3.626867393646164*^9, {
   3.62686744497946*^9, 3.626867527191399*^9}, {3.6268675610830436`*^9, 
   3.6268675617384815`*^9}, {3.626867592306908*^9, 3.626867892505515*^9}, {
   3.6268679895513487`*^9, 3.6268680048645945`*^9}, {3.6268681449128995`*^9, 
   3.626868199873621*^9}, {3.6268683605389795`*^9, 3.626868439428694*^9}, {
   3.6268685131239367`*^9, 3.6268685144158154`*^9}, {3.6268685499435406`*^9, 
   3.626868558059965*^9}, {3.6268695870912466`*^9, 3.6268696297127223`*^9}, {
   3.626871378927681*^9, 3.626871393836641*^9}, {3.626871442407097*^9, 
   3.626871446313709*^9}, {3.6268722266561375`*^9, 3.6268722434263415`*^9}, 
   3.6268722959134135`*^9, {3.6268746328527193`*^9, 3.626874717741439*^9}, {
   3.6268748141978917`*^9, 3.6268748839545193`*^9}, {3.6268749549089165`*^9, 
   3.6268750172695894`*^9}, 3.6268750509971247`*^9, {3.6268763692847147`*^9, 
   3.626876371698327*^9}, 3.6268765178403907`*^9, 3.6268767016336255`*^9, {
   3.627017706410877*^9, 3.6270177311354127`*^9}, {3.627017779322611*^9, 
   3.6270177981701937`*^9}, {3.627017831288319*^9, 3.627017882274393*^9}, {
   3.627017925695403*^9, 3.6270179815597334`*^9}, {3.6270190586294365`*^9, 
   3.6270191253400135`*^9}, 3.6270191798794565`*^9, {3.6270202675198975`*^9, 
   3.6270202743734775`*^9}, {3.6270203567569313`*^9, 3.62702037657611*^9}, 
   3.6271046109975605`*^9, {3.627104678073397*^9, 3.627104680339527*^9}, {
   3.6271047524016485`*^9, 3.6271048673542233`*^9}, {3.6271049117427626`*^9, 
   3.6271050143716326`*^9}, {3.6271052419556494`*^9, 
   3.6271052724993963`*^9}, {3.627105529288084*^9, 3.627105545974038*^9}, {
   3.627105652223116*^9, 3.6271056557383165`*^9}, {3.627105711620513*^9, 
   3.6271057195469666`*^9}, {3.627105800805614*^9, 3.6271059203604517`*^9}, {
   3.627106092731311*^9, 3.6271061020108423`*^9}, {3.6271064610943804`*^9, 
   3.6271064715899806`*^9}, {3.627107909213208*^9, 3.6271079268652177`*^9}, 
   3.6271080941447854`*^9, {3.627108233954782*^9, 3.627108234513814*^9}, {
   3.627109558974569*^9, 3.6271096130396614`*^9}, {3.6271097355506687`*^9, 
   3.627109865338092*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvnD7WtZdPmpm5P/BdXF00
Fdo/yAGYq33s3z/OO7mkBi7rP5Zmc8Yb6vw/ZDHLW8ww9D8WE9F4BdUOQEXB
Tstvqfo/ybQBi3yIGkAalh9oPtcAQGxvoU3OBSVAGlLMUc4dBEAoYi3iTd8t
QKF7LwaTqgdArCWWB/6aNEBaI53txCYLQElHYCZoDTtAnFE/PABnDkBoUUwc
9OxAQLP2yyq49hBA/6EKA98KRUDchxLr9JsSQGceBOoHSklAH1jeROg4FEAB
BftcidJNQCVfBQT2+BVAitYmElBxUUBvqcZ2CJsXQIvDwub4y1NAfSrjTjVg
GUCQ6oCE/VZWQKTqhMAYHRtAa4usgc7UWEAP7sDlALwcQHdksS6xJltAPihY
cAN+HkCWkjVd8qldQNjSRFcFESBAvVMyU7QAYEDzLAsplvQgQI5H+B6MRGFA
miaURwLUIUCvMP08iIFiQORB6r9wpCJAKDU9X3eoY0CP+O1qbIYjQJUoDFN0
52RA3NC+b2pZJEBP0KmIEB1mQLZIUsFDKCVAsxLB+iWyZ0DyW5NFqggmQPbw
OGeA8WlA0JChIxPaJkAzm5lcU4ZsQBBhXTQJvSdAUWAfhcnQb0Dc0NuR2pso
QJsCbXAjw3FASmInSa5rKUCr81O3hblzQBqPIDMPTSpAWkji8YEddkCM3eZ2
ch8rQJNxRyN/lXhAi8tvB7HtK0BDrQ/6LDl7QOxUpsp8zSxA7TwnBf1JfkDv
/6nnSp4tQP6jRJ/0qYBAVEZbN6aALkCc2kWqx2mCQFuu2eADVC9AHEPH+FER
hED4Wo1rnhEwQBb9lzu/sYVAc6wEgAGCMEB3oIylm3GHQL+OYsHl6jBARKmj
8KEJiUC7PheckFwxQAhuhr/kvIpAfj4tHSnMMUDPDgpwOWyMQBLPKctCNDJA
CsHY35n/jUBXLX0SI6UyQOMZS9ffr49AbRy3hoQOM0CndnMaf52QQElbUqHT
dTNAC65USp1ckUDWZ0RV6eUzQE2G0rwoLZJANAUdNoBONEAwze92L+ySQENw
TLDdvzRAZ3n0Kt6ok0AYK93QKC81QKSk67NbT5RAvnZUHvWWNUBtfhWNdNqU
QBWQIgWIBzZACo9HR/FflUA9OtcYnHA2QAXwdCYEzJVAFrLixXbiNkDstiWd
2i6WQLV5Txk/UjdA1gRXjHJ9lkAm0qKZiLo3QOUL4uWUtpZAR/hMs5grOEAJ
eC1/8uKWQDmv3fkplThANu6f9tv7lkA+GeT4//84QL0Oy/ncBJdAK46oyA==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 25.}, {0., 
                    1473.2157966354127`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "25.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvnD7WtZdPmpm5P/BdXF00
Fdo/yAGYq33s3z/OO7mkBi7rP5Zmc8Yb6vw/ZDHLW8ww9D8WE9F4BdUOQEXB
Tstvqfo/ybQBi3yIGkAalh9oPtcAQGxvoU3OBSVAGlLMUc4dBEAoYi3iTd8t
QKF7LwaTqgdArCWWB/6aNEBaI53txCYLQElHYCZoDTtAnFE/PABnDkBoUUwc
9OxAQLP2yyq49hBA/6EKA98KRUDchxLr9JsSQGceBOoHSklAH1jeROg4FEAB
BftcidJNQCVfBQT2+BVAitYmElBxUUBvqcZ2CJsXQIvDwub4y1NAfSrjTjVg
GUCQ6oCE/VZWQKTqhMAYHRtAa4usgc7UWEAP7sDlALwcQHdksS6xJltAPihY
cAN+HkCWkjVd8qldQNjSRFcFESBAvVMyU7QAYEDzLAsplvQgQI5H+B6MRGFA
miaURwLUIUCvMP08iIFiQORB6r9wpCJAKDU9X3eoY0CP+O1qbIYjQJUoDFN0
52RA3NC+b2pZJEBP0KmIEB1mQLZIUsFDKCVAsxLB+iWyZ0DyW5NFqggmQPbw
OGeA8WlA0JChIxPaJkAzm5lcU4ZsQBBhXTQJvSdAUWAfhcnQb0Dc0NuR2pso
QJsCbXAjw3FASmInSa5rKUCr81O3hblzQBqPIDMPTSpAWkji8YEddkCM3eZ2
ch8rQJNxRyN/lXhAi8tvB7HtK0BDrQ/6LDl7QOxUpsp8zSxA7TwnBf1JfkDv
/6nnSp4tQP6jRJ/0qYBAVEZbN6aALkCc2kWqx2mCQFuu2eADVC9AHEPH+FER
hED4Wo1rnhEwQBb9lzu/sYVAc6wEgAGCMEB3oIylm3GHQL+OYsHl6jBARKmj
8KEJiUC7PheckFwxQAhuhr/kvIpAfj4tHSnMMUDPDgpwOWyMQBLPKctCNDJA
CsHY35n/jUBXLX0SI6UyQOMZS9ffr49AbRy3hoQOM0CndnMaf52QQElbUqHT
dTNAC65USp1ckUDWZ0RV6eUzQE2G0rwoLZJANAUdNoBONEAwze92L+ySQENw
TLDdvzRAZ3n0Kt6ok0AYK93QKC81QKSk67NbT5RAvnZUHvWWNUBtfhWNdNqU
QBWQIgWIBzZACo9HR/FflUA9OtcYnHA2QAXwdCYEzJVAFrLixXbiNkDstiWd
2i6WQLV5Txk/UjdA1gRXjHJ9lkAm0qKZiLo3QOUL4uWUtpZAR/hMs5grOEAJ
eC1/8uKWQDmv3fkplThANu6f9tv7lkA+GeT4//84QL0Oy/ncBJdAK46oyA==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 25.}, {0., 
                    1473.2157966354127`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "25.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 25.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"y", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAnIW2B5tvnD64LsSrmZm5P/BdXF00
Fdo/r2JT2GckwD/OO7mkBi7rP4uLWFo7y8A/ZDHLW8ww9D+KdMGb0FTDP0XB
Tstvqfo/P8HMXegQyD8alh9oPtcAQBCP1540ks8/GlLMUc4dBEDHpJAByZLG
P6F7LwaTqgdAjJQV9UUD1j9aI53txCYLQPPsZLTq5tE/nFE/PABnDkBKEiGJ
GJrNP7P2yyq49hBAd161g0Sh2D/chxLr9JsSQCFpCR3XvNM/H1jeROg4FEC5
pDi2gnjHPyVfBQT2+BVAnR5GVoN63T9vqcZ2CJsXQKSyd7834M0/fSrjTjVg
GUCazT3mYK7JP6TqhMAYHRtAjCCVFA8G2z8P7sDlALwcQJuMWXBLOdI/PihY
cAN+HkAQCrNYo2PJP9jSRFcFESBAI/CuDzoL2T/zLAsplvQgQJJG4/DXNNg/
miaURwLUIUBcJWCePJ/AP+RB6r9wpCJA+ZMT/e1O2z+P+O1qbIYjQNoPgyvz
idU/3NC+b2pZJEATGTKwmhrLP7ZIUsFDKCVAC5KJaw/tzz/yW5NFqggmQHG7
Jykwt+0/0JChIxPaJkALHV7pwSvlvxBhXTQJvSdA9nMnzpS24T/c0NuR2pso
QH1/+a7NjPg/SmInSa5rKUAuZerk+6D3vxqPIDMPTSpAeGz0pT0Z8D+M3eZ2
ch8rQOs9fMCyr/o/i8tvB7HtK0DDRELdbGgBwOxUpsp8zSxAIDO2GQ108D/v
/6nnSp4tQEZTvYr/wv4/kgRKR+FKLkAY2MEgiWQEwADlEzk=
                    "]], 
                    
                    LineBox[{{15.355391503614886`, -2.5490896758228807`}, {
                    15.664092089245221`, 1.5812594594405531`}, {
                    16.068823549280722`, 0.6908932959559646}, {
                    16.507835389271758`, -2.520302640833251}, {
                    16.917568289338984`, 1.586104424830304}, {
                    17.361581569361743`, 0.1513297801478161}, {
                    17.797502349420476`, -0.8410386132303866}, {
                    18.2041441895554, -1.4635205696538203`}, {
                    18.64506640964586, 3.524096876631649}, {
                    18.957778136019115`, -2.5490896758228807`}}], 
                    
                    LineBox[{{19.16190782932215, -2.5490896758228807`}, {
                    19.460260470015132`, 2.900064697979601}, {
                    19.89809163017329, -0.39989740955898223`}, {
                    20.30664385040764, -0.5847043427095472}, {
                    20.749476450597523`, -0.5271605243901114}, {
                    21.18421655082338, 1.3660131170375844`}, {
                    21.589677711125425`, -0.9628055935619303}, {
                    22.029419251383008`, -0.22673575222356834`}, {
                    22.43988185171678, 0.4091829285622814}, {
                    22.88462483200609, -0.3836033185983006}, {
                    23.32127531233137, -0.10617778770315452`}, {
                    23.728646852732844`, -0.0868345280618453}, {
                    24.17029877308985, -0.09374532786004261}, {
                    24.582671753523048`, -0.14259580009388925`}, {
                    24.999999576271186`, -0.11420709312719139`}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 25.}, {-2.5490896758228807`, 
                    3.524096876631649}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "25.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAnIW2B5tvnD64LsSrmZm5P/BdXF00
Fdo/r2JT2GckwD/OO7mkBi7rP4uLWFo7y8A/ZDHLW8ww9D+KdMGb0FTDP0XB
Tstvqfo/P8HMXegQyD8alh9oPtcAQBCP1540ks8/GlLMUc4dBEDHpJAByZLG
P6F7LwaTqgdAjJQV9UUD1j9aI53txCYLQPPsZLTq5tE/nFE/PABnDkBKEiGJ
GJrNP7P2yyq49hBAd161g0Sh2D/chxLr9JsSQCFpCR3XvNM/H1jeROg4FEC5
pDi2gnjHPyVfBQT2+BVAnR5GVoN63T9vqcZ2CJsXQKSyd7834M0/fSrjTjVg
GUCazT3mYK7JP6TqhMAYHRtAjCCVFA8G2z8P7sDlALwcQJuMWXBLOdI/PihY
cAN+HkAQCrNYo2PJP9jSRFcFESBAI/CuDzoL2T/zLAsplvQgQJJG4/DXNNg/
miaURwLUIUBcJWCePJ/AP+RB6r9wpCJA+ZMT/e1O2z+P+O1qbIYjQNoPgyvz
idU/3NC+b2pZJEATGTKwmhrLP7ZIUsFDKCVAC5KJaw/tzz/yW5NFqggmQHG7
Jykwt+0/0JChIxPaJkALHV7pwSvlvxBhXTQJvSdA9nMnzpS24T/c0NuR2pso
QH1/+a7NjPg/SmInSa5rKUAuZerk+6D3vxqPIDMPTSpAeGz0pT0Z8D+M3eZ2
ch8rQOs9fMCyr/o/i8tvB7HtK0DDRELdbGgBwOxUpsp8zSxAIDO2GQ108D/v
/6nnSp4tQEZTvYr/wv4/kgRKR+FKLkAY2MEgiWQEwADlEzk=
                    "]], 
                    
                    LineBox[{{15.355391503614886`, -2.5490896758228807`}, {
                    15.664092089245221`, 1.5812594594405531`}, {
                    16.068823549280722`, 0.6908932959559646}, {
                    16.507835389271758`, -2.520302640833251}, {
                    16.917568289338984`, 1.586104424830304}, {
                    17.361581569361743`, 0.1513297801478161}, {
                    17.797502349420476`, -0.8410386132303866}, {
                    18.2041441895554, -1.4635205696538203`}, {
                    18.64506640964586, 3.524096876631649}, {
                    18.957778136019115`, -2.5490896758228807`}}], 
                    LineBox[{{19.16190782932215, -2.5490896758228807`}, {
                    19.460260470015132`, 2.900064697979601}, {
                    19.89809163017329, -0.39989740955898223`}, {
                    20.30664385040764, -0.5847043427095472}, {
                    20.749476450597523`, -0.5271605243901114}, {
                    21.18421655082338, 1.3660131170375844`}, {
                    21.589677711125425`, -0.9628055935619303}, {
                    22.029419251383008`, -0.22673575222356834`}, {
                    22.43988185171678, 0.4091829285622814}, {
                    22.88462483200609, -0.3836033185983006}, {
                    23.32127531233137, -0.10617778770315452`}, {
                    23.728646852732844`, -0.0868345280618453}, {
                    24.17029877308985, -0.09374532786004261}, {
                    24.582671753523048`, -0.14259580009388925`}, {
                    24.999999576271186`, -0.11420709312719139`}}]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 25.}, {-2.5490896758228807`, 
                    3.524096876631649}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "25.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 25.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"\[Psi]", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvnD4NsUPZ4XqEP/BdXF00
Fdo/9zkNh6Zafr/OO7mkBi7rP9N95ya/0om/ZDHLW8ww9D80GyNL5jacv0XB
Tstvqfo/sq7zjuhNor8alh9oPtcAQLRed+8jkLa/GlLMUc4dBEC4UD/3gmel
v6F7LwaTqgdAqxjEPixitL9aI53txCYLQHpn+bVkXb+/nFE/PABnDkADiFYn
JPWqv7P2yyq49hBA3yWeJcUptb/chxLr9JsSQKt/lWDDqMC/H1jeROg4FEA/
dg0M8kWqvyVfBQT2+BVAf/FYgeCrs79vqcZ2CJsXQPs547zB7MG/fSrjTjVg
GUClrZfoOkSlv6TqhMAYHRtAIUu0ulyCtr8P7sDlALwcQAM6jxmAKL+/PihY
cAN+HkBiZR2d7Gyzv9jSRFcFESBAb5IFSMUZr7/zLAsplvQgQIxW2BHq98K/
miaURwLUIUCJ2B9G82mxv+RB6r9wpCJAwd5GID/0sb+P+O1qbIYjQBWeyD1K
mMC/3NC+b2pZJEATVIFko7e2v7ZIUsFDKCVA1Ibkuz0onb/yW5NFqggmQEvm
TH9l/sC/0JChIxPaJkBAs+k0JWTEvxBhXTQJvSdA10C43jqiwj/c0NuR2pso
QHZyBqFYetO/SmInSa5rKUBKNrA8ypuWvxqPIDMPTSpA1q4J94Rvqj+M3eZ2
ch8rQB97ba2Jxcm/i8tvB7HtK0B5Rma4RCbFv+xUpsp8zSxAERT38hKjyz/v
/6nnSp4tQOE7OP+5qdi/VEZbN6aALkD9slTAwfx5P1uu2eADVC9A2NAYixpc
rL/4Wo1rnhEwQHF57iv8YL2/c6wEgAGCMEASUjCVVEzRv7+OYsHl6jBAU5VZ
85XOyT+7PheckFwxQEf4u0kGXNW/fj4tHSnMMUBkBol3OAOxvxLPKctCNDJA
MVgLrdJEcj9XLX0SI6UyQDsNy74jULG/bRy3hoQOM0BonIoL7rnNv0lbUqHT
dTNA3Htvn7dQsT/WZ0RV6eUzQAS7tk8x6cO/NAUdNoBONEBnx/SPVRDGv0Nw
TLDdvzRAsG42UJwUqT8YK93QKC81QF3VeQ8HfsS/vnZUHvWWNUAY8CTCW/20
vxWQIgWIBzZA2kIlQXd2sL89OtcYnHA2QLGy93cNgLC/FrLixXbiNkCA6UZt
D3bIv7V5Txk/UjdA3R+mHVLMaD8m0qKZiLo3QMhC3bVJecG/R/hMs5grOECF
q0YIlF6zvzmv3fkplThAfHuHxE5jur8+GeT4//84QO66tl3CcrO/elzLmA==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 25.}, {-0.38535928653521806`, 
                    0.2159141241410514}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "25.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvnD4NsUPZ4XqEP/BdXF00
Fdo/9zkNh6Zafr/OO7mkBi7rP9N95ya/0om/ZDHLW8ww9D80GyNL5jacv0XB
Tstvqfo/sq7zjuhNor8alh9oPtcAQLRed+8jkLa/GlLMUc4dBEC4UD/3gmel
v6F7LwaTqgdAqxjEPixitL9aI53txCYLQHpn+bVkXb+/nFE/PABnDkADiFYn
JPWqv7P2yyq49hBA3yWeJcUptb/chxLr9JsSQKt/lWDDqMC/H1jeROg4FEA/
dg0M8kWqvyVfBQT2+BVAf/FYgeCrs79vqcZ2CJsXQPs547zB7MG/fSrjTjVg
GUClrZfoOkSlv6TqhMAYHRtAIUu0ulyCtr8P7sDlALwcQAM6jxmAKL+/PihY
cAN+HkBiZR2d7Gyzv9jSRFcFESBAb5IFSMUZr7/zLAsplvQgQIxW2BHq98K/
miaURwLUIUCJ2B9G82mxv+RB6r9wpCJAwd5GID/0sb+P+O1qbIYjQBWeyD1K
mMC/3NC+b2pZJEATVIFko7e2v7ZIUsFDKCVA1Ibkuz0onb/yW5NFqggmQEvm
TH9l/sC/0JChIxPaJkBAs+k0JWTEvxBhXTQJvSdA10C43jqiwj/c0NuR2pso
QHZyBqFYetO/SmInSa5rKUBKNrA8ypuWvxqPIDMPTSpA1q4J94Rvqj+M3eZ2
ch8rQB97ba2Jxcm/i8tvB7HtK0B5Rma4RCbFv+xUpsp8zSxAERT38hKjyz/v
/6nnSp4tQOE7OP+5qdi/VEZbN6aALkD9slTAwfx5P1uu2eADVC9A2NAYixpc
rL/4Wo1rnhEwQHF57iv8YL2/c6wEgAGCMEASUjCVVEzRv7+OYsHl6jBAU5VZ
85XOyT+7PheckFwxQEf4u0kGXNW/fj4tHSnMMUBkBol3OAOxvxLPKctCNDJA
MVgLrdJEcj9XLX0SI6UyQDsNy74jULG/bRy3hoQOM0BonIoL7rnNv0lbUqHT
dTNA3Htvn7dQsT/WZ0RV6eUzQAS7tk8x6cO/NAUdNoBONEBnx/SPVRDGv0Nw
TLDdvzRAsG42UJwUqT8YK93QKC81QF3VeQ8HfsS/vnZUHvWWNUAY8CTCW/20
vxWQIgWIBzZA2kIlQXd2sL89OtcYnHA2QLGy93cNgLC/FrLixXbiNkCA6UZt
D3bIv7V5Txk/UjdA3R+mHVLMaD8m0qKZiLo3QMhC3bVJecG/R/hMs5grOECF
q0YIlF6zvzmv3fkplThAfHuHxE5jur8+GeT4//84QO66tl3CcrO/elzLmA==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 25.}, {-0.38535928653521806`, 
                    0.2159141241410514}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "25.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 25.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{
     SubscriptBox["e", "y"], "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvnD7Oa+tr4Xq0P/BdXF00
Fdo/1TAb/40NwT/OO7mkBi7rPzG8VxkVB80/ZDHLW8ww9D9vlyjUq5jeP0XB
Tstvqfo/Grv4IDGO4T8alh9oPtcAQMNU4Qkppuc/GlLMUc4dBEApn/igpFzv
P6F7LwaTqgdAUkR24ZFu7z9aI53txCYLQIaWnGISZe4/nFE/PABnDkBD4Oc4
m1jzP7P2yyq49hBARVBx6Rfb8T/chxLr9JsSQH5R3pIJ9+0/H1jeROg4FEB+
wVZu1J/0PyVfBQT2+BVAcNkdT8+Q8T9vqcZ2CJsXQODxOeqePO4/fSrjTjVg
GUAqGyd3gb7zP6TqhMAYHRtA7wGFyvbv8j8P7sDlALwcQFpPyJyVs+w/PihY
cAN+HkA3I9VOCL/zP9jSRFcFESBAY5viDgFN8j/zLAsplvQgQG3+yOQneu0/
miaURwLUIUB0qWyNzUryP+RB6r9wpCJAEmEKngmi8z+P+O1qbIYjQKekScdu
Je0/3NC+b2pZJEDkU22GPyzyP7ZIUsFDKCVAhogxA/fq9D/yW5NFqggmQOWn
iw9Wx+Q/0JChIxPaJkDG8XaTFbD1PxBhXTQJvSdArhtM2rGX9z/c0NuR2pso
QAdAzOwfB+Q/SmInSa5rKUDe9i6TwyDxPxqPIDMPTSpAtBQUJxxz/z+M3eZ2
ch8rQFTHlgGGk8w/i8tvB7HtK0CVqOuduRn1P+xUpsp8zSxA1C3QhaQjAEDv
/6nnSp4tQF9QlcTio7w/VEZbN6aALkDtxAvyiFXqP1uu2eADVC9AkrAarKF7
A0D4Wo1rnhEwQBsfpmOsGc+/c6wEgAGCMEBXQgCtyubwP7+OYsHl6jBAZwuK
F9XFAEC7PheckFwxQBiTrl/sOd0/fj4tHSnMMUBoX25TLK3XPxLPKctCNDJA
fjoNgLEJA0BXLX0SI6UyQPwLH2+1Vt0/bRy3hoQOM0A7AGRVN/viP0lbUqHT
dTNAbUwrXGZSAkDWZ0RV6eUzQCJbNw14a98/NAUdNoBONEDdPmaXed/oP0Nw
TLDdvzRA4JC9uGDQAEAYK93QKC81QDLf3FNPLu0/vnZUHvWWNUDKpL9lLgPe
PxWQIgWIBzZA1FJ8rqdK/T89OtcYnHA2QDLXho3Jpe0/FrLixXbiNkA1GiGZ
2zHnP7V5Txk/UjdAxUJ7gwob9T8m0qKZiLo3QAC6TGc71/I/R/hMs5grOECY
uNSJgMXrPzmv3fkplThAPx9ZE4da8z8+GeT4//84QJaxuwoU8fA/jbq1nA==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 25.}, {-0.24297098985356844`, 
                    2.435366959156519}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "25.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvnD7Oa+tr4Xq0P/BdXF00
Fdo/1TAb/40NwT/OO7mkBi7rPzG8VxkVB80/ZDHLW8ww9D9vlyjUq5jeP0XB
Tstvqfo/Grv4IDGO4T8alh9oPtcAQMNU4Qkppuc/GlLMUc4dBEApn/igpFzv
P6F7LwaTqgdAUkR24ZFu7z9aI53txCYLQIaWnGISZe4/nFE/PABnDkBD4Oc4
m1jzP7P2yyq49hBARVBx6Rfb8T/chxLr9JsSQH5R3pIJ9+0/H1jeROg4FEB+
wVZu1J/0PyVfBQT2+BVAcNkdT8+Q8T9vqcZ2CJsXQODxOeqePO4/fSrjTjVg
GUAqGyd3gb7zP6TqhMAYHRtA7wGFyvbv8j8P7sDlALwcQFpPyJyVs+w/PihY
cAN+HkA3I9VOCL/zP9jSRFcFESBAY5viDgFN8j/zLAsplvQgQG3+yOQneu0/
miaURwLUIUB0qWyNzUryP+RB6r9wpCJAEmEKngmi8z+P+O1qbIYjQKekScdu
Je0/3NC+b2pZJEDkU22GPyzyP7ZIUsFDKCVAhogxA/fq9D/yW5NFqggmQOWn
iw9Wx+Q/0JChIxPaJkDG8XaTFbD1PxBhXTQJvSdArhtM2rGX9z/c0NuR2pso
QAdAzOwfB+Q/SmInSa5rKUDe9i6TwyDxPxqPIDMPTSpAtBQUJxxz/z+M3eZ2
ch8rQFTHlgGGk8w/i8tvB7HtK0CVqOuduRn1P+xUpsp8zSxA1C3QhaQjAEDv
/6nnSp4tQF9QlcTio7w/VEZbN6aALkDtxAvyiFXqP1uu2eADVC9AkrAarKF7
A0D4Wo1rnhEwQBsfpmOsGc+/c6wEgAGCMEBXQgCtyubwP7+OYsHl6jBAZwuK
F9XFAEC7PheckFwxQBiTrl/sOd0/fj4tHSnMMUBoX25TLK3XPxLPKctCNDJA
fjoNgLEJA0BXLX0SI6UyQPwLH2+1Vt0/bRy3hoQOM0A7AGRVN/viP0lbUqHT
dTNAbUwrXGZSAkDWZ0RV6eUzQCJbNw14a98/NAUdNoBONEDdPmaXed/oP0Nw
TLDdvzRA4JC9uGDQAEAYK93QKC81QDLf3FNPLu0/vnZUHvWWNUDKpL9lLgPe
PxWQIgWIBzZA1FJ8rqdK/T89OtcYnHA2QDLXho3Jpe0/FrLixXbiNkA1GiGZ
2zHnP7V5Txk/UjdAxUJ7gwob9T8m0qKZiLo3QAC6TGc71/I/R/hMs5grOECY
uNSJgMXrPzmv3fkplThAPx9ZE4da8z8+GeT4//84QJaxuwoU8fA/jbq1nA==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, 
                    PlotRange -> {{0., 25.}, {-0.24297098985356844`, 
                    2.435366959156519}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "25.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 25.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{
     SubscriptBox["e", "\[Psi]"], "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvnD7pgeWPkpm5P/BdXF00
Fdo/DZhmKo3cxD/OO7mkBi7rP0sAzp7WPGe/ZDHLW8ww9D9e+U2js0WtP0XB
Tstvqfo/QMoWpdtlwT8alh9oPtcAQN8wthLsMrS/GlLMUc4dBEAwfwS0OwWo
P6F7LwaTqgdAmcXcJpZhuz9aI53txCYLQHsLm7ODKbe/nFE/PABnDkAegTg2
UXB+P7P2yyq49hBAj/cPTgt6uz/chxLr9JsSQGCROB94wLi/H1jeROg4FEDN
yNpNNJ2EPyVfBQT2+BVABxda2tTwvD9vqcZ2CJsXQBwgvKQV1by/fSrjTjVg
GUBJEormF66Bv6TqhMAYHRtATAmY58VluT8P7sDlALwcQPps98eDkrK/PihY
cAN+HkBANhiYmaKuv9jSRFcFESBAIr+3JC47wD/zLAsplvQgQG6O3upvErC/
miaURwLUIUA6ZD7gswGyv+RB6r9wpCJA58tKHbEcuz+P+O1qbIYjQFWnfQve
pZC/3NC+b2pZJEBC8vmBja23v7ZIUsFDKCVAJywZvXHVwj/yW5NFqggmQCaz
scr4F5a/0JChIxPaJkCxreEjvp3EvxBhXTQJvSdAz9mPx5Ak0z/c0NuR2pso
QChCjHv8DcW/SmInSa5rKUDBZiZCcvefvxqPIDMPTSpAcOamTx6axz+M3eZ2
ch8rQMeCcjwRUK+/i8tvB7HtK0ADXTAy50TGv+xUpsp8zSxA3AuHklil1j/v
/6nnSp4tQLMm39sPMtC/VEZbN6aALkDxv+zHgkxlv1uu2eADVC9A56pXWve7
sz/4Wo1rnhEwQOoFBhIrv5Q/c6wEgAGCMEDW2rbyCt/Rv7+OYsHl6jBAN8wQ
B1OQ1T+7PheckFwxQAb/TjPTxMW/fj4tHSnMMUB3ZM2V87ywvxLPKctCNDJA
6C5XKEuJvD9XLX0SI6UyQCMsbnfZgLw/bRy3hoQOM0BOevXbUG/Nv0lbUqHT
dTNAopOMCqprxj/WZ0RV6eUzQKzNp/UJO5Y/NAUdNoBONEDeEmpToSjGv0Nw
TLDdvzRAbfaDk3DDvz8YK93QKC81QAXxIeaeQZw/vnZUHvWWNUCmLVQWY5Gx
vxWQIgWIBzZAuanJcJnch789OtcYnHA2QA7tZm5/fr8/FrLixXbiNkAi5DsH
JPfCv7V5Txk/UjdAZeCygGSZmj8m0qKZiLo3QFVu0ZfbJas/R/hMs5grOEBr
WLF4YoF2vzmv3fkplThAXdUgcLBltb8+GeT4//84QD/+ZfXrb7w/ln/CYg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 25.}, {-0.27923845007482606`, 
                    0.3538419180806025}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "25.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAnIW2B5tvnD7pgeWPkpm5P/BdXF00
Fdo/DZhmKo3cxD/OO7mkBi7rP0sAzp7WPGe/ZDHLW8ww9D9e+U2js0WtP0XB
Tstvqfo/QMoWpdtlwT8alh9oPtcAQN8wthLsMrS/GlLMUc4dBEAwfwS0OwWo
P6F7LwaTqgdAmcXcJpZhuz9aI53txCYLQHsLm7ODKbe/nFE/PABnDkAegTg2
UXB+P7P2yyq49hBAj/cPTgt6uz/chxLr9JsSQGCROB94wLi/H1jeROg4FEDN
yNpNNJ2EPyVfBQT2+BVABxda2tTwvD9vqcZ2CJsXQBwgvKQV1by/fSrjTjVg
GUBJEormF66Bv6TqhMAYHRtATAmY58VluT8P7sDlALwcQPps98eDkrK/PihY
cAN+HkBANhiYmaKuv9jSRFcFESBAIr+3JC47wD/zLAsplvQgQG6O3upvErC/
miaURwLUIUA6ZD7gswGyv+RB6r9wpCJA58tKHbEcuz+P+O1qbIYjQFWnfQve
pZC/3NC+b2pZJEBC8vmBja23v7ZIUsFDKCVAJywZvXHVwj/yW5NFqggmQCaz
scr4F5a/0JChIxPaJkCxreEjvp3EvxBhXTQJvSdAz9mPx5Ak0z/c0NuR2pso
QChCjHv8DcW/SmInSa5rKUDBZiZCcvefvxqPIDMPTSpAcOamTx6axz+M3eZ2
ch8rQMeCcjwRUK+/i8tvB7HtK0ADXTAy50TGv+xUpsp8zSxA3AuHklil1j/v
/6nnSp4tQLMm39sPMtC/VEZbN6aALkDxv+zHgkxlv1uu2eADVC9A56pXWve7
sz/4Wo1rnhEwQOoFBhIrv5Q/c6wEgAGCMEDW2rbyCt/Rv7+OYsHl6jBAN8wQ
B1OQ1T+7PheckFwxQAb/TjPTxMW/fj4tHSnMMUB3ZM2V87ywvxLPKctCNDJA
6C5XKEuJvD9XLX0SI6UyQCMsbnfZgLw/bRy3hoQOM0BOevXbUG/Nv0lbUqHT
dTNAopOMCqprxj/WZ0RV6eUzQKzNp/UJO5Y/NAUdNoBONEDeEmpToSjGv0Nw
TLDdvzRAbfaDk3DDvz8YK93QKC81QAXxIeaeQZw/vnZUHvWWNUCmLVQWY5Gx
vxWQIgWIBzZAuanJcJnch789OtcYnHA2QA7tZm5/fr8/FrLixXbiNkAi5DsH
JPfCv7V5Txk/UjdAZeCygGSZmj8m0qKZiLo3QFVu0ZfbJas/R/hMs5grOEBr
WLF4YoF2vzmv3fkplThAXdUgcLBltb8+GeT4//84QD/+ZfXrb7w/ln/CYg==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 25.}, {-0.27923845007482606`, 
                    0.3538419180806025}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "25.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 25.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6271061645254173`*^9, 3.6271081436946197`*^9, 
  3.6271082392940874`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
Ogn/D3hh0Ik=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
5UpYSCyw17tmH5w+U4+NPXQ2C+GkwQ5h2ZGEzAykEhBd+YOXBgquO9Zz/leF
jrp9PcQnRIMX1vNtTYqtKPjMxO/dYuz1O14WfQnsRsUmigf9pWhg089r1/i8
H03uOFBeLEeD+4JCz7KsRpA6yfPAsjwNeGx22so0jaPj6xJ/6WymwV7JDBnn
qkkUyluzz0OVBm/usv579N80wqdWf2Rp0OCr7SCHvsIsmurU3DupSYNvrpsJ
Xi5ziFB1/DuNToPv//kdLg+aR1bFt40ubqFBzL51IVr2Cyg8NfNbynYafLKV
qF8RWkQlT//u6dejwSn123GS3oto9p7IV3UDGjT1bHJ8nbmISB46u+0MaTBU
de2OVc4iOuXgWPJiHw3eqt1T1ru7iCIOPzRoP0gD/qETEx80FtFXAxxXsKBB
Qf7obfenC2ieNoJOHKVB2rPtuqFd80hLUR57bEWDky11Lcbc88haxFi/7gwN
jnp4PyFxzKHIxStFknY0qLpEEOptnUGl/S/0TJ1ocKwg1f1E3DRabPhdEHqB
Bod3C+24ZTiFqN8Wd/y6RAOxsIF355sm0KOXljqGnjQ4PvnUi54ygn488M8L
uMHmafrk7PHgQbR887027keDu3/2ZJLt+pC9lcA23fs0eH3Tqlp5cyd6sndr
tmcYDc4einr3V7UVlW2z3ZLzHw3+aHzR1NVpQKtqDz5OPaIBU9L5hU9oFWJK
FzIZT2kQ1OPrMHqkFDlyDmS4PqfB3Fj6beugPPR0TJaRmkADnZMOa2OvolFF
2670gSQadJTlxmUvJmKc5ZdoGu9okOC2Qk4XyseOx+z02fiBBmUBC4F9xC/Y
e0fh75IfaWDxwXW6zfEHxrOlSYo/lwa9KWuHzuaWY1acb84s57P1usBkBQlV
YekVV1MmimlgyZuke1W/GuN7tmu2t4QGiYE05/1z1dip8xK7WktpUB/4IElk
Ww2Wua09rPoXDcJ3NC/OLVdjAjypTaUVNJj3sKj2NK3GzlR7qRfW0EDtLNq2
mVmFZT03vpzRwF5foCYsf+Q3JuwiW5TUTIPSCsZQqe9PzFanW+BZOw2umflO
WI9/xfL4Miz/66KBVfGxBZtrGCZW5/viTi8NRstnQ+Q6PmL2L02GfQZpsDBu
FcOtHIflu8pvvzzKju+rXL3jyydIQq8/0HGSBhrHnut1GWahooZABfNFdr0V
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
OWvH0f30P3k4eBc=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"x,y\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"x(t)\"", "\"y(t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6271061645254173`*^9, 3.6271081436946197`*^9, 
  3.6271082395171003`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwU2Xc8le8bB3Ah2WRv5xzrHOccMxSVT1pI9t4JSXYqaUlokCSjQkZFRktF
RkKJFlGhoUJ8UygjRdTv/v31fb1fj/Pc1/W57nOf5+lL9Qu3D+Dk4ODo4+Hg
+P9/aacWLl5QKlzNGzsf8fpcjenGyBK+0KBDpuV+AU8lkhpM7fpZp+hBp0zn
dJT/Rkg0m/7jfmAllJptuui2NkeLUYup87nvdjxB+ab84cXOdy61mXZLpZb/
K7ho+rQ7NrLV9pkp5xZVrfmTJaYM/j8GrTIvTF1/2ur/3HbddH247xsDg1em
zflTb2PKbpreux/xR8yt27Tn4WqFXwW3TMuKguf5jvaacoq8vjB1strURTFC
W/z3e1O3i4sujW67b+pwwpcvimvQ1H3OzfPLtg5TSZt7J75UTJq+VUtaPrzt
oynfgSc/Q45y4vK+RX+5vH6Y7kdgUa2xOIRu5V8vsfltyvVxaQVvogJyN8xz
6gpxoL0j7HfMMxou+MUPSm3khmJdo/GR2xpYVfif/+PlvHjr8bjpuDELbanF
OdyHBPFccnX4kQwdvA3ckn7ZVRT5k3Zrz8zpIc/rzt29vqIoaCrR7+TSh68j
38fNQaJ41HtZWUFIH8NrbjJn9ogi+XCtdpeyPiYVFrVsyBYFI+Bu+JH1+hB4
WfDrv9eiwIfjgd9O6WOl6SdPTYelqJG4Ndwtvwz/DJYd+eu+FILCPA8yVZeh
mXWstMtvKbaKuExtYS+DuZzOTGzUUrzK7i3XMF0Gp5+HTj09vRSbWvLfxWxd
hrBy5eaQF0tRXblHLeLaMuRL+2hc3yyGI6eqKAKmBmhsUvRhOYuhwlftnJW5
AT7teJ9V6i2Gv13yjUl2BqA1uvFcCheDznuf+OmtBigOchw6e1oMmZcW5KjH
DXCtxuJi/GsxcC/p2SXRY4COrbzv/vWJYfN2qzaDfgP8EGoVOzAshpHBb/e2
fTOAnt+6+D2/xBAhLcX+8c8Ad/hNt4TIiiOazqVDYxii3mOZsrOXOP5LTcg+
HmOIvsVTzi8DxPFClvZ+7rAh/l6/mWobJo6rtzneWCcbAtzafy0PiSPOTzH6
Up4hHlYw+kwLxbExQbVgeZMhhpy/SNwrFcfbRSWGXx8bgmdRiZVxpThMHBMo
iV2GMHdSrV/2QBz8nL25voOG2P5vYOrmU3Ec+BUbe/KbIU6UFjK1X4ljE+3z
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
IQKWWDa7ef9orjqkb+JuN8MSoQJum0MvqyNI3+r8QKAlPmiHfw+rUsfnb9kU
6/eWmLs77XK9Vh3cp06ePP7LElJmsY3fG9Txd8FrPm3pJug9/UfXeaCOlfQK
F2hugo1j4umIVnXyfH7dfN+aTQjp45+78VQde5ca5mm5bCLvf2l+Ex3qyEsV
PmO3YxMaY3L0o3rVEec5/OpP6ia8X0TNrXyvjn55Fa/SC5swe6KYe+oTuf4i
u2bpVbJe3s3XO0fUoX0+mdr2aBOs1Y1W3x5Th+b7ra/juzYh+Hp98fSEOjhn
nbvb+zbhYlPrnl1z6vCyFnmhMk3Ws9z86c5fddy20tG//Y+s97LLfIZTA0YH
B071C1jht6frTcMlGrgYcTfum4wVJIb7ZPcIaJDvv5SnkIYVdMK3xleLaCA7
MeTXfkMrbP795esvcQ08NF3w377RCsGHwxyWy2jgt1jz5KybFZL4p+tiFDSw
86SlxeYwKxSd2ataQ9HAVpUtpTEJVmhQ+Jcyq6qBb8fPmh7NtcIvLX7vWLYG
5lewGBu6yPp3Tz2q1dWA6cXvl3u+k/XXSGr/MdCA9V2vNGGRzQhyoHDsX62B
XkaEcq3dZiS8vxxUb6aBLxKhRveiN6MggNk5v0EDre0ClISzm/Fmj2HRARsN
2H7PyaX1b8YMRz1/g4MGDk5eu2Wz2BpiJ9bs/OuigRlm/+Q43RqWuVbrDvlq
YJ1V4HqFUGsEqnVV3PfXwKalIQULKdaIv+YiybFdA6oePSfmy6xxwajvAEI1
kOh0YfLVI2vUNfoNx0Vq4L/5Ew+sP1mj1+KLddMuDSz91uyHX9aY7gqtXhSr
Ad36Fq7TAjYQ9ZxSNjuoAe+mhiRjRRuwhmKOxcdroCZy8ZglywY7Nuffi03S
gMB4zDPl5TYou9MyGXVCA3bcfek/19hgRHFUY0eqBmR21D3gsLQBPUnMa2u6
BtL+FNUcsrXBtvHl6R5ZGhDZf7G5xskGxc4+rQ7nNfCRZy3XgpsNPjckzm+6
oIHvScqduV42UNGo0F1XpAHRF+xt331t4HeqK3BlMcmfqzrLyt8GBb9+5ywr
I/P/mlEmEGSDjz7KnaxrGpDa3/LycIgNlNrW86hVaqA+Y+1pjigbeOmEmChW
aWBxzL1Vr2JskHs2PUKyVgMVW4YazQ7b4B1HzWWhBpLXoQnPE8k2kNv+8e3i
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
49PTXHB0t+XHlX3T/x8dYtz1
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
2ceml5YIsPN9995ucxf1PyLMquA=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"vx,vy\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"vx(t)\"", "\"vy(t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6271061645254173`*^9, 3.6271081436946197`*^9, 
  3.6271082396831093`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwUmXc81W8Ux+297r1cm3tRSippUnkODauhQmZDFFJJKSmRiAZJgyQkW0R2
5GvP7Jm9M8vM5vf8/ur1ft17v9/nnOdzzvmc0C1unLZiYmBg+MLNwPD/vzIv
Vz+HSH1Soz/rpY+vCoLmzWjOa9auaCSlwns6gBVO9Sq+3GT9EslyHBzw1OOA
dZbCY7y+Aag5MoNs9JMLDN//PcVmHYr0gp8+q1vmgWaqb/x62GdUIX2wuqWB
D5guym1b8YlGszxiT0u3CMDW+O9JC87xqHzieNxwiQAYzentnLvyFeXKP7Wq
BhIUhM60OcUloxENkmZCCAlaitQk5sNSUJRA2/ELQyQYH3lq7hiQhmr/GAYE
SZCBib8pZMYnA8ld/OmxfpgMIrtoPTc9slDOu9ryQQsybDO+Sp90zka1v675
ad8jw+GH6RbXb/5Agef/3k5+Sgbjz4wR41cIRCj94cp6S4a9llEOu7/mIfnK
MY/zIWQo+Kf7+nZcPrJq9l7KiSDD8adTKSmRBUjgRLiFVSwZWsUDGqfDCtFU
01WxuC9kuJR4YG5HcBHiCOidYfpKhj/QJ3QzoBi98Mp9k55EBqcGrz1J/iXI
S/PahvZkMjBf3nr2r08p4kkf/JDxjQy+C/V3tz0tQ0fG5qtPpuB4njsFXvMo
R0e90txLMH+WlMr64lqBtPUvdBam4viSCn+NOVeiMy9okTcxZ2nYLCnc+Ym8
Zot5szEfbuITt71ZhWzDn2ixpJHBZMnYbPhKDWq9mx8WjtmhxDX39Y5atJHf
5M0y5syX9Sd2fq1FM3dUyWbpZNCQcbrhEFeHSJLqjTsyyOA9VrFO2lSPttgE
hWMJQFWqpF9yZD2aW62Vl8wkg5FmYdJkWANiu1fDRc4iQ4gAVd1PqhEJ+LOf
fYG5/5d13fbgRvTeZc8llu9k2PQ5+2KNaBMiW1SR7mG+bsc3fT2gCRnSpDV/
Y07dfdGdT6gZrZ5s3HoymwyLaynkRP9m5K/wtTYRs1oZ2+fjAi1I7xevJ2sO
GTxeGe+c8GlBE5oyh09jrjD5UviCuxWl0d4zv8HML7d+RvFpKzKsqF+oxKw/
cWqgku0X+vU2+NU85qD0iNtXPX4h11rhWeEfZOh2nWfhZmpDf02DLbdhltPW
eRvn2oY6WnbWqWK2JX/coLPahiTfxR08iPlr+9+0Eed25Nj2Un0P5tkIjaNP
F9qRxdcHUpswq15/27zpTgfiC1vrp2B23Tt8uWymAyXVKNgt4fcXMeyfv3Kz
E9WxU/s6MHNV+Hix/+1Exk1FX3Mwn3zdIxxt14WyvRyNPmB+Y7Yz5uhoFzqW
dv6AM+a2DU/2DV3pRiX5FQ9NMK/KeXRTJ7tRDHOP4H7MAmT1QtkDPcj1q8QP
acyfSHnUA2496DhPQignZmUSstUv6kGP/8SHLOL8Fgnk/rDj6EWmjM///sVs
IHCQ5HmsF2n8NFWbwDzEn2P50a8XJe8kK0xhduLfn5nW2IuuRySlLmPm4v/O
XS3Sh871zdF48PM/8KmcHzLrQ5adgjZ0zIp8md/WwvrQYIS5nSrmXN69bMKD
feiWtEW3AWY93nTj7Zv70S/aJ10HzL08uxM0r/WjDmGuO76YHXhSGS4k9yNU
lecZg5mFZ6e+01w/MhM0Uycwv+P+Fu2nMoC+s+iy1mGW596xHOMygISuR9n8
n99MrqQT+fkDSO0Tg1sPZh2u7eG/WAeRlrZYZzvmDs7EuSntQcTCF5lbhfka
51ZtLt9BdINfTiEd8xrHl2CZ+kHUv3pl9n99+XFsmVSlDqEZCX4GW8wyHHGH
zpgMoSuvSwN3Y05h3xxwNWQIRTb35Szg/Bxmjxl93DeEGnwWf6RibmaTVwve
+Bs5dDkL22K2Zot6lWr7G3HY22wV+1//rBsGfyb+RjsuFa6U4PqQYJV9sbpn
GP1kT/glhTmRJbxb6P4wuqRbnVWF6w2x0HduI4bRtauPWtww1zKHPTnKPIKc
BrZUq2C2YJZuO6c5gsgHp+eWcP3OMoVsvft8BD0M2SJWgtmTSfLRy5oR5Bqk
+CwYM5UpuDGaMoqWCFLqQ8wxjOKb8s6OIrZvDU+uYVZlDLrf+mEUacgzP7LB
XMkgWjPZPYqKeOcCHDCbMQTKcMqNoVzT/e+9Mf9Zp96hW48hnc17K+Mwu66/
LVf5MoZuOeSZtWIWWBeUPD05htz+NvIJ4POGr722t901jiZ1ntjpYd65Ri5y
dxpH4adDawMwF62+Ev6QM45IB/xvDGA2XBW4msIwgch5JZd34fw4rfCRB7wn
0NSh3qRmzFwrPlYrPyeQ46HQExtwfj8s82QJkv6gbKs9UzcwKy4/59lq8Ad9
9EgWSsOcu8R14cj7P+i9+xvhGcx6S09TzDv/oP7Sen+F//W5yMF+h/4XaRx/
joz+1+eil4mv1V802JXQ+uB/fS6yJUbF/kVGIjc1A//X54InIzHxF734y/8x
DrPgA/e4MZFJJHeiSyb1f/0tqzfOq06iB2yq6mmYI+8zrjGbT6L30hXjiZjd
Z0tfVD+YRJuvqw2FY75wzVf8ffAkOrjtxOQrzGpD+nGXciaR6bJK/P/vlzgv
rrKtYxI9J4y4LDEvtfSWLixPovgzuz5qYW7RizEsFJ9CZNIX2S2Y/TV23zYy
nULNVBPbMRyvffYyk+z9KcSzK9i7HPPxXQWvJoKm0E86QY3CrJDgTcv8PoVE
SOuJbpg5Np786t42hWKoTz4b/d8vQoTUji9NoftqCjWK//cX4Y6fwmLTiPlO
ifIKvo9wv3DTPpVpFP28We1/fbty2ox+MZ5GEXb3fbwxm7lvv3f33jTqn7v3
DzCrLs+xa7yfRn4ePsp/8H2L3M55x5M1jZry89pfYv437r6hpXUafXyvkyqD
udFKO/XTwjRqtX+cFIn1ldzFf8hOZAaxX5ftE8bse7a5bs++GSQYeXf4Lp5v
drXBFxiNZtDakJ5yMZ6HOtqX/lbenUHXDG1d1/G8lC/Y/PBdwAza50Gd3Ii5
LyX9w5aWGSSc9+kn4Hmdp+ii8O/fDAqI4OLdg+d7SOShrDzqLHJ//75XCs9/
44DaZgPDWVQfUtbRnEiGPQIBVrQ7syjwqu2mxASsh6fms6NvZ9GfEnVjL+wv
phnlHqelzaLoxlc91vG4np1HSW5Ns+jox+3nDeNw/c8khenMzaLQnKRUQ+xP
ntvd3S4kNIecB5tGrsfgfjJ4MLd71xwSU45O/hxNhqPnWI7H6c+hs/czfq5E
4fnWUtF++/YcEv3DeP4BZka9V7bozRyKctM9sglzV9nZRc7UOfRSxnWFGXOO
upR3Y8Mc+lX1XYyMOej7ADV0Zg65J260McDstDM+0obyD3kuBn2sxmz45eau
XTv/oe7KtAgX/P6dG/YVrp3+h5Qrz369iM8nELJ2qtzhH9px+/NLJ3z+P9Ti
ntf+/9BpitFyLo7v58vnN859+4d8fB69UML5iOM4vbap/h8KzBCsKMX58n4k
4jMz9Q8pqU8EuWD/ZbXUJZ5Lmkcxo9SrOjjftPGrKmdOzSOhC8s0Pnxfa5bK
ZZI359Hfn0LWM/h+2zsXDIf95tGdR5sKK7AeMg2JwW9J8+iql5z6c6y3dzWe
t11q5xF/wRzTdlwft7WOMWtNziNDDcbiODzPT+eT/ckCC+jHncWX/3LJoKT6
i9a5fQE9kJkK58ojA29K6NfokwuoxWXVvBvzHepiYP31BeRy4FLr9Xyc33un
3Vd9FhCoT5RnYdbsjL+6KWEB1SlUNeRgTgJWgzM/F1BOlVrOHcwiEefUHo4t
oElPpVvD+HmP2DPlY7kW0eGHJ19QMI/akkiNmxcRt8epxBV8ntPVtktrWoto
+7I/Xww+b/aOov7N1otIzK8UJHA8cm8lq/S9FtFq2o+ESzjeOdPa0LjiRXSC
wVzcB+fnHLH5adPAIkplver8BPvLEpnHDgwsSygsJH/SFes7cGT3EUONJeTc
pb7xI9Yzw/GX2x5dXEKJFR3s7fi+bJKGhb+4LSGmjFxubazfeooGY0voEpq8
JnRsGt+36t0Po4zEEsoP7af1Yj18bpttUOxaQoeSH3dLYuZRO/Hj7OoSurS/
QysB6+f2p+god4llJPnvltJrzJ0sjH4J+5dR0qeDqXX/69va5F6ryTLaY7VZ
zRr/PrEyxYLZeRlpUCWCTuP3CW/nPbbt/TJSMAtee4b15eZ/ebdx5jKy/ci8
kxOfd3iOkPJoWUYytPzvhVhfp4xFOb7+W0YfBRNPJWJ9ydB+trHsXkF7Oaz2
1uJ6f/54Q9F2/RW0tbpPbQjra3boYYLJrRUUHc/x9jfuJ2Y6re88/VfQaR0R
zzzcj4oTdrglJa+gNJWPT8xwP9xGem7TXruCmPLaLP/3M+9uD5xmm1xBfUJs
WX74vtZbDh7Ywb+KonrKqaz4Pq33B2ww27aKHNeuGUzjz2tDJvm8jq+iV7Yj
XCcwqzDpLCTbraK47Y7O7Ph54Vafezuer6IrVAYp0f/nX/lKBXv8Krold2Xo
Pj7fLUXDVOWKVZTzvkxCEd9vx8uvH81H8PPW7vAp4v3l8AyHlzfHGmr/baru
iu8vwdDCPkV+DW36cGN0O65v6vds466ja4j0zonzWBgZHkoKHeK8vIZq58xD
u9/jeTlQKnQ+Yg2l3r+SX/cc15cmff1p4RqiJEmQznuQgR7vPJzat4ZUPcxj
Gh7gfndzazYXfR15blFR775GBtOmJxG7YR2Vtwe/LbiM58e+Hp8L59fRG/qZ
z5QLeF4Hq9x9/nAd6ZzNav5nTIa36/4X0j+uI+WA2aGX+rjeLca1e3PW0YRq
vP7qSTJcLjmyk6djHckdOvvC/BgZajaHSuxdXkfZDZfGi7TJEHx0hWkHLwO0
W5baHNPC+jv/MEhEigEIe7sEJswP7jIoM2xngImyvq3y+PvjL93LfyMGWJg/
EJKpi+87huVijR4D8HgTein4fT/zniykX2QAKslxmNOADAd+cfiFODDAYYdK
lmhTMnyZeib/5DEDaPKe9bh6Cc9rLl7i2hsGOGLHH65qR4YXMi8NDSIZQEEo
c67PkQwrqqQ/B9IZQCVWdF7WDd/XVSFJnlYGCOaVDfmD99ljHgGpM8MMUOOY
GTiE7yMnWPRY+yIDlKp8nP2E708x7UN/ARcjjNWzrv+v1+Aqyftx4ozQ9eK6
hx2B4x0KJfsrMsLj5H/h66U43jV63L2DjGDqm/vBtgbHS41Qv3iCEaI0Hik+
bMLxbt/4S+s8IyxIFC6T2nC8mjH2SvaM4L+jAbF34ngvKHCIPGIEpnmvN0e6
cLxOX0LXXzFC5tYbVdn4c4lX2/b+DmcEhfvtslbtON7YpOrqFEaYOTzJcLQF
x5uvfDm9iBHCFgISb9Th+dyWuvqxiREmuBim1stx/NN73noOMUJWTqoWDffH
Y9xZitfmGUGI1GCwhPtXjuz+In0OJki2/naqCMf/UR/NyCowAYdZir76azLw
Xct/xr2fCUY/rlr5PcH69TwkM6PLBC6cv1MX7+F59LE4q82MCU7eOmfShPV4
Ll3zVME1JuDyUyu8bUGG6ury4diHTNDgV5Qub4T9129dt1cvmeC0Z2ueCr7/
xPUq4XthTOA59kthTJMMUiJ6Xy8kM8HnlbqaOxrYfyjVH9UqYAKD2T+719Sw
XrX0u7Y3MMEBMinu80G8H19sdhQeYIIMrrRUO7X/54UR7/osEwiHBFRcVifD
Cf+2iCFWZjBDr/fdOor9apzZgWoqM7y+uf+H83HcXwq7GtLkmUFlUDhbzxD7
kfYLVz/uYwaGxxbqBK4fvtk+Jk9tZnh689xhT6y3hzxWQXYmzKBtKLbDGMd/
7qBN+f4HzPA207z4yxscr8HYBVkfZkje2KLxNBzHe/3aAlcIMzyu2RE1j/tj
4pO/L6cTmeEP89WKt7j/SIXelG8jmKFumV+asQzHmzGTm1/LDB/eim0Zw/e5
VuNoGNvLDC7jx6ZZsH6uD89P+E0zQ0nuroj1bhwvg7OnEzMLSPmYbAvsx/GK
rkhcEGSBp1P+H94P4Hh3PEzV3MACixPkQx19OF4dhmPb97DAlpqTf85gvYVY
uPdTNVlA6QiD91IznlfzXgmdhizgOBXCGFFFhtcvfO5GXGaBU79/GKxg/fjS
X6tfvcMCfourYwq4H3qnB3IrP2EBufd5gZcisP/WDWlaeMsCSWwsWr/9yeDS
8zmUiGSB8qgKLWZcjw5cX3ceL2aBvlL1+etnsV5DU1cpTSyQMDVG8cT3fWXX
99K2ARbQzjKYLt6K97Fy4tWnWRaIn3O54SmK6+lcsak1Cyscfkw5fYwN+6eZ
ig3bBVkhWNqKoWOcBKe8a//OybLCpcyIsLcDJDgm2ZyVs5MVtCOrgvqaSXD0
W/vjx4dYocqbUTO7kgSg2Xtc5wwrkJ+lLl8qJMH+jiFh0iVW+Ht+flgolwR7
bo73tjiwgopik8ZINgmU2KbjQ9xZQf5uUjbXDxIofJh3tPJnhZDa8F0m+STY
oLSKFMNZQeCHknBvGQloxUxcM8msQD9AlD9oIIGYCUdjVj4rNKbYqDD2kkDw
L2+IWx0rmI3kXt05RQJ+D4q1Zi8rXLv8OvsHM55HoqLKfFOssCWXlnRSBO9L
iVIrjQxs8LrxjebjbVgfGnIlHwTYQO/Eld0TR/A+3LLZz4LGBscPih8QO4fr
k3G33CRiA/mMEe0OXzy/36n+ST/JBmx6dIoLnk/9WyDT5TwbkGvujq9jPXbl
HXE/fIMNFJPS9/Rh/bUa6B7jdmUDFnPuB3VYT/WjetR6XzaI/eH6TmOODFWu
hj2BIWwQOpBoysFMgTJBs7jziWyg4xSjXshLgYLYi7c35rKBYMCOvD1CFMhR
u6I2UcUGTpa8bLtFKZDRYMeR2skGCTKf8j5h/mbtUO88wQbijw7EO1Ap8GX1
brD6KhtM+rvuTOKnQJS/y2UOXnbIPOSa4chKgU/yj5VqJNjhF2eGzdQ87tc5
3ktvFdnhlDN/06Xf2C+c8i0yO8AOwSn5jRsbyeA39NpX9hg7FNHDfr3CfuH5
/fdGo6bsUDZ877Aw9kdukRHjd++zQ78KE9fN22RwVo1LV3vODsIbb4+ZmJDB
searG+sHdugaCPrkBXj/s0zT+RnHDvobNu56Jk8G28Xvgq+/s8NAlfPxSX4y
WPrmdRlXsIPp+ORhiyUSnJctiaG1sYOAgUAF/CaBSWalw+8RdhiaiCWEW0ig
f7zuQOIiO8TOzXRpVJDgRF8zmyMnBxjFVe0iYX1p3e2o3S/KAfSZDTxJWI8a
PH1BTJs5YNiAnXPvdxIc/PTbsnwfBzxccbdqzCHBbHDBqT5tDjB4ONXFWkSC
uMCPassm+HmBAu2RNSS48MZpi6AdB9RnsK1f6iYB1e+MyFYXDhhN3MHYPk2C
n8+3sR715QCnDaujzzlxfXtxTp8L5QDvzcLVfTJYXw+JSr98Dggej1ztxPmJ
cA7KjK3ngJjG6DKSExlM7jhGFvRzQLiHbwUFz18BBz3/9lkOGLqR+VIG7x+l
17a4zrJywnK0paV7Je6vNmx2vMKcYPB6W58b7me7rHqNNm7ihKkmjydOC9i/
X8g5glQwfzvDX89JgTCzAGUjHU6QVfYwFhGmgKGRg/RNU07IM7q0u0aaAjz6
x3me2XHCO8O90bmyWI8nNy2Gu3DC/G+Tzd9kKOCkyzyU7csJlWUPHwdJUGCb
Zld9YygnXCYMJ/1IFBjQyCImkjgBGUYeLmKkQJDamy9sBZwgPevh/GwC+1/V
G++lGzjBn5zRdQbPe449Ok/2DXBCtVn82S9Z//ffDbdOzXGCkQUT34EPZFDY
3H7ssTAXvIl4lM2M/ViPXLpK8CYu2HFm8tTsHqxX2quNaSpc8M1287s7Qnhe
S9hRqnW4QN5scfLUHAmYRDQZfptywSanFWM3rJdMiszEuh0X6N15y9OJ7/s6
/+ovkYdcEFa9NCoaRQI57taSHS+5QME+52PbaxK0s6Wk6IRx4XowKwh/QgJ/
Jt+wS8lccGSmS7DoIdbXmrXPgwIuiI27veLxgARri4ec3zZwwXs97ZhfriRI
nZO6kjjABbYqhp6F3iSwnVo8UzrHBa6nMhnZA3C/m2iEHjZuuMH7yVE7jgTN
w1+3Lgpzg+hexzGuAhK8GHgmRt7MDVGJqpfqO7F+e6zYt6hyQ7fCaGj2CgkW
2mH2kC43BNoG1opJ4X214V+V4zVuSM2WHGKzwn6opu6770NuOJ58Norwxv2o
4kt09EtuyN915qwb9i/eJV5v8sK4oXJHu5TNTzx/Cywe/UrmBtcgN43IUbx/
/Dh4fboAM98JERfcP+KyREy5G7nhff+Vqwjf/4W0GU25QW4I28cYeH4bBajJ
1bsO/uOG3DoDAaP9FPj5JZZuyM4DK091V0c1KOAe48F3Q4QHjmsV8jcepsC+
iPPLXpt54FhF/2EBdQr8DVUdDlPlgcV5g4zUvbh/fRBqytLlgZk/dekrmyhg
FjCZX2/GA+rRNl90cH8kv65MHLvGAz+kT94QWyVDmW/UBxZXHuBPLA7g7sX+
fr0ireolD5jfenTDsYAMefZ/a96F8QDx9sJozCcyZJzex7K5gAcevK7dk2pG
hm+FZlLT9Txwcff7IG9V7D92PdqX3c8DmYJXmXzxPI2LjDztMcsDbHN79o3i
/hRFrbA7zsoLQlVBSWdwPwj3+vOESuWFOclsj+BSEnxcIH/q3sgLioh94WYq
CQJt9mbH7OWFtfqNo4D19qbNtOmmFi/8+mzWaP2RBH66bn9VjXmB67PXHDUI
339OBCeLLS+82FPj5RRMAu+t5bJVzrzg0M7SfC6CBI9DJg6+e84LiQlCsQHJ
JHjITzY6H8wLjg75jfl4Pju77XHYlMALtwkzOdM2EtyZMnkx9QOfr/PF+cpZ
EjhYuEZ9r+YFVlRE0idjv9TwOe9xNy/kqOZ0HlHG+/bhsrZjk7ygtu1xZ8kZ
MlzYSOLvJvHBbyaGH0UB2F8E7N4cI8MHR8yza178//cbDpNDN3fywV6/uVEj
7Lf17z00Vz3MB6bTKYaWM2Q4ORp+l9mAD8jP02XmuCmgY1r66qcVHzhn590s
wXo6+nMs/u0dPjjF5Buwsp0CGgcFSs558YHVg6t/vFUpoJa4q0c+kA/sBQzT
YxEFVKWNlyZj+KDeOERpJ+Y9fi6C37P4wLZdNlRGhQLKjOHbHlfwQXsIyTho
KwW2OpRoHWvng3Pay++H8fs29Y9aCI3j5ztYd99kp4CcPr9L1woflO372V2M
+xWteGdANC8/FOWLubyoxfW0xyjZXoofErYLUn3wPisS/aBSZTs/yFo94ArC
foEi8mmQCfih2tSA69NV7IefFq9X6vEDNVtk7A3e97iWRkTfXuQHRqU6n+sb
ycB2lW/XOQd+uBQbJySD/RlTh/IJ+cf8cP9UttWjYdxPjp21nnzND2VrFQ8y
q0mw+OO+e1YEP0R/O/17ZxaeV9vCgt3T+EFO0/HYuxgSTIYWpeuW8MOboqK8
//U0LjBSK9jCD5+Hdp1uxP1m+BHvWOdvfkCBfRXbAkkwML2DNXqBH8qNy86d
DMG/3xHPn8kiAIaNDMkU3I+u2/4IluAVgByPvhI5PD/Hwms2PxISAMrAagVn
HQms23vTByUFIHtv0/5tYyQYoswe0tkoAKWxM061HHieH2OrS9wmAC7NlDsH
N5Ohz0PkHGUv/v5Yhk8g3m8v/FAYu4sEYI/1r6/d17Gfmjvg1KEpAGeq39pv
w3647fJF/0gjAeAxc0vZhufFR/O0zHsXBICXenJx8xT+vT5n93FrARgMqnDZ
ykUBWV1zVhl7AeA0D3rih+fZkHryln93BUAg+dq+WiUKxO5jPV3hKgD91ioJ
YQcpYLfd2CnESwB8NsmqvjpCge0bE0IcXgpA6P5E4WtaFJiWYCw+GiCAfXXS
/k1HKZBGMRgTCxUAO/0YWpkanodcsaS/UQJQv+8O9Y4yBfYzru4tTBSAMbk9
/nfpFFib1zsXkC4ANQnHfiryUCD/T4TH1VwB2HtvU7AArgePwYU4VCIAzxI9
a7LwPsHdEDb/u0kAJgTHDoji+qoun5XM6RSAyx+iUs7ifd0/T+uw36AAbG/2
ib2I69EgI9jWckIAIiih93hxvYokTvrtmxOAyHMWgUq4ntsjDmfwrOJ8SknI
B+F6D/kQ2NnDgudQhEEnP+4HF/3HmdN4SFBm9aBYBfcLuaeg8FSQBF/rPpam
JpHgt+sbPXMJEmSEbEnqD8d+6M7wnR1yWBf0Q40KuD9du3bgI6siCWxcrlfW
vcN+39Kv8NdO7NMlBfamY33NmAyMJOwnwWDIvaOzoSRIP7VPwP0QCWQa2Z3O
fiHBPa0Xewx1SbDFRNf6Nd4PDqAeM4Uz2PdNnG4/iP3/+u5dj9dMsK+7ZZpW
h/eVAkXv2HoLEgRoN5JeYX+lJab0z9mBBPs2PYreqoPzR/KQOOmM95SHjbnm
eP+sZm/VkHUnAVdn55scXJ8Gc64vK1+RwGDb5KFkXM8i4w1poe+xbxsvzvz8
B+//ffIdtz7hPvzKeL8P9kuhv+4zacVin7iPRSGeRgGL2ppNEv/3WRsxXred
FNhQKntyMpMEKfuNtLzx/Br+cdexKI8EkewbNijpUCA+tfJDIN5rip+EfWo7
TYHr8dIFdrUk+DYyaD2LP98RfmsYWvF9WFxsKsbzcTawlE+oB8+F240q67uw
338pvnsE+95vQRXkaawn5yc3TH/8xfFeUdg+hs930KXw0at5EtQnfDvgjfsV
w23hGKt1EnDfqFu+iPfRQtur1SrsOE/7xU32xpHhyUVilhf77OFQ+tFODzJo
G1HE+6i4zno4NVTw/sNz8op6OvYRnHZc+ap7yVBzJPvKM9ynwloPrPYIYP0d
4Pc9h/coHp9ePil8HwY7L6Uq/+/DOLwih8tJIKKQ0camhvfUz7aeUvEk6KBx
M7bjPWvpoOrOSD8ShAqfl/96nAwaUVsDue+TIC9f8ryi4f//D/eH1GZDgp6r
He9i8Tn07gaa+Z0nASP1Q/XGK3hPXyFMYsywbvKM2SJukMHprV+nzEUSHLIV
UaNj3yygaKI5ZUcCS8EWxxC8N9/09Qstxv7LM/dtgvhTMiSMHxARw/ccZa0/
GPgKz7l7d39cxPdWSqZIUoPIMK47neXdgftjTp3+63DsQy+uPYhgwf6TdLLI
JwX7VLZddabYH+hm865w/f9350F/NSf8XDurnzu9i8igwrOdEptGBh/+51dZ
cd71es24Uruxf8jS/uyO+9b2nKt3TNgoUHOJo329kwwjFyO9rbCfmeQtJbsM
kUHIVEy3GfshUqanzhLW4YaKa8LVJnh+WRx2v4v3NCPPHBMbGwqc4WH+PrtO
BvqHVyw77ClwOz1/6iYHBXrsMuR+XKfAmwtum/8KUOB5ynPDaUvcr7jQRTu8
J/6I3BTZjfXXnLoaOIJ1pB13EX3fR4F/53JqLytQ4DHHcWIH3geEOe9zDOA+
tsexPuf/c+xLUYGL2MeJyLWYiOaTwdh84W7XITxHI/M/+eN6cmbP+Gp6jAL6
dT+OJRiRIcd0l7ShOQW2DP1bFsLzq5N1xrDBigLAeyaJD/eTta/Jvnr4nPaV
v1mn75FA2sS+pOoOBRy10rJ8j+K6Zdm+puOKv+84y1NGxf0pcWJ3mRcFXq7T
eXJHBcDd6Mu1I34UqM9k+Lq1QACKvmzuRJ8oEGl955z5HTwHDIcFf8RSQCbO
LNfyhACwMUYfU/1GAU0OB1YWmgDIx1t5ZHzHvkH7OTW1kh+0DORydhVSoCX+
YUj/Dn6wWe+bSa6kwFMuafkmSz54Fvtpy/ZGCtB+fT5RdZoX4s5cuPSlgwKs
XCPm0uPYN69Kfdg8SIFTdBtWVwUuGI/urI+awPm4qBXHyssBPKeDueT+4b08
cETb5jMrbF0x0fi0RoETPXe/q3Myw4koUWcpdkHY77hfR8CKAW7otSZ/4BeE
ogR/1syUZeS39G5EREQQOs2UMi8JzqPkCAP6O5ogfElOFVqnzKD6E4LGlM2C
4C2bsO+10180s1Dv57dDEIDjrI0H2ygS/PyqjFdVEHLPuwR6fxhEu4/rMTzX
EISzD+1jPzP3IcN5vn0cuoLwa/1etStLF7r7qeqG5xl8nqjCpyFlrShQ90U0
k5kgZNEYhdyYGlFbKKfwqp0gfHi994l1czECDq7hkduCcK2nV+1I+HcUZc+V
1fxAEDSbPvR/DAhHDurcpkkvBKHDT9I7nP070RrLrfjxjSDoWuVevdRZTKiR
eVafBgvCxo0WGcYvqwnufp7QS18EoSHy+4Xv9i2Egy6vvV6qIEwIVGyJFmwn
WlN41Q/mCEJsW+AWUf0uQk2Cj6xQJAg/QpUHL/v0EBEefP3UnzjeXe13Hn7p
Jbgm+FKZGwUhb3I41Mi9j7A34PecbBeEb7/+suSx9xPNP/gNO/sF4WhyR8LP
/f3EgY0C8hVjgrBlY5KsukQ/Ee4rsJA+Iwg/t8nsn4rtIzjmBco/LwvCjVG6
ldrvXuL6eVKQH7MQcB71T3vc2kM0lpKuunALQZYM45wBazehqkQ+YEsRglM0
w/5HXe1EWCCZ96y4ELh79t16rd1KsDFSug7JCsG/hmjTMbNG4poN5avSFiEw
26Cg1bKtlmiso7hJ7hSCMLsbT94klBKqqoKnuPYLgbP7qVaelB9EWLigzLyG
EKhde9euczqGYOMWmunXEYKWyvNfF66/Rna3hIpqTwvBBusnWSFLqai+Xejt
DxMhUNhyXsx+PB/tO0y9HGchBOcijtgoPytDIV+oewNshaDzdXPRs53ViEVI
mMPDQQg236e/u3ixDtm6CP+ydxYCm3IlVkWeBlQ7KBxn7i4E7Lrqv5MFGtGe
EyL3dZ4JAfOvLoYhy0YUnC5ybK+/EIC0wXk6ayNikhaVlAsSgmvXJ2pq/tUj
ay/RPwLhQqBkc8erdksdqvkrSqzGCsHlDTdfzDlVoT1GYn6jyUJg//bKSo95
KQrOE7vYkiUE647kuzs25iGmzeLKRfk4n6FM5526vyLrV+LMyeVCcF10e/8V
ETeielG88WOdEOxOKzZv25RG7LKQiHz2SwiMj1S37n1WRDDslNS0HBGCz3RX
GxPTRuLyB0mRU1NCQC5Wfsqr8ov4ySw1cnAR54vDqPVSbiehbCf1XYGRCt94
rw0Js/YS7xulngtzUqHVolfoaF8fwXBQ2oyFRIUfm9+fPH53gLgcKb11SoQK
ZezBLtWZg8RPXtpaJ40KNqIzX5PChwjlO7Saik1UsPr1ddZ/y28isIsWlqFE
hejStkNqZ34Ta0fpNyP2UYHYO/BLVuQ3YfmVrvEKqFB8supyy/0hokJYhvJQ
iwoHXz7VGXw0SCi5yQzY6lFBv0qob2r7APFuWCbtrBEVjv9mkil+0Ues6Mk+
OXyBCk+Mz5k9CO8hLmXJnt1hTYW5p1PZ6v86CLuOMrV/N/B5jzkx3TVrJW6v
X9uYfZcKX28Finx+0EA8OZI5d9iLCl/4KwNjIwqIl9bmnZwvqTCZ/Fn261QS
Eficqbj6HRUe9v/jMM9/gj4lRn95HUIFISVexm1RaSiu7tgboygqTGjkR2e+
KkQps1P3JROpcE9+ucPnRiXKEQ641JdGhdMtDFvebaxDxaoHdKN/UGEhxemN
1WoDqjbvVbYrpoLcMK+DxI5m1OL2RGxHFRWElYfF1pJbUM/nLUz/GqmwI8+t
erC6FY2U1I5876DC6z9y2V9cW9H0iGOd6wAV761VlxyLWtAyj3jW4XEq1JYp
DmvqNCMWpbwwzlkqLMtfZTMVbUS8Z6y8q5epwBtG9S5RqUPUO1z2r5mFgef5
ymSmUyWSfv/1rBG3MBjecl94ZFmINuXoI0mKMMjPSGxcLkhFKkyhfNEywrCr
PeNxr0EKobHh8L+rCsLwkUktH2kWETpaI51KysLQZbyp+dlSNXHmqm/xnIow
PJm12bGlqJEw892Z8F1dGIScXv4q+vWLsEpufeOqLQxSsVbe3mFdxPVGlweH
TwnDK7dM7mWXXuLuvIwlp7EwBPHr/bCx7SfcxMp0qy8Ig2abpTEX1yDx9OC1
na+thcH7VSvRfGaI8L9AFjeyFwbneGZ5iUO/iQ+PM5gknYShREq/Ubb2NxER
ZTba6yoMGmdFD55b/k0klDPWR3kJg/vvzxFHCn8T6eNRWVdfCoPc4ebw6c2/
iVz+Y5+UAoRhcsNbYbmdQ0Sp8pT3XIgw5GlGv/g9MEDUGryz/x4lDE192eGz
R/qJVqf9Rq6JwlD01Yu9/Fwv0fuhBx1OF4YhRf37dXe7iNFcT3nOXHy+l7a3
TWt/ETO9CvzVxcJwf62azayrkVhhqf3nXyUMsfbdr0Kcagg+XbESiU5hSKey
dxdcTCOErxMJvQPCEPrv/Wn5FQeC9srybdS4MKhxVJ43o3xDm1M5Xa7OCsPN
eMEQWeYCpNySaKm0gs9rtF4kI1OB9i+dOTbHLAIZ1r/2NHyqRYclF3d+5xaB
z+LJ/c4hDeg4hIi7UkTgTur2I7WLTcjw0iHmw+IicJCrh6IQ3YLOPxke5ZAV
ge87T7aEhLQi61if+ioFEUi4eernxl+t6OZP5e/+yiJwOkvojbJRK3L+2/Lp
rKoIsFJVLVSlWtBjsstTCQ0RuPleablDuQm92C1zs1dbBIR0q8a+htWjN0al
RlGnROCPCs0gfawafbxvB1eNRSA/v56Tx6sUsZx+oPLrogiMM9w/Kb+eg2w3
vVDWtBUBRr2Er/FvwtG+png52fsi4Baw8bz2ozwiND5b8tVjEdiSWLNlBCoJ
NvdK6vpzEYja/6JfpLuesDNq57/2RgSczdK3dbW2EA3bxjjag0XAIZi8V+Jq
B6HKusyoHSkC1dGB8foHeoiwdq7l9AQRkFR2tlib6iXYv4nNyqWLQPl54aKH
x/qJ694KE/65IvBXTU/47uEBoumc6hBDqQi452YUV9QPEAd263RfrxGBPFmF
kr0LA0Q4t0lrR4sIbJSKnij6NkBw9tnU6fSIgHz12RQq2wBhn3mvInNYBK50
NB74Md9HNPs+Ldw4JQLa3yO+NL/sJQ5avc95sygCOqYlVVlJ3UTE/tg0JiZR
mDjjvyif1U5wk7MS7blE4eglAfm0M9h/DJdFd5FFYf+l8YPHQ+sJ9Hb4/XdZ
URielHux1z2fiLq64L9JURQuCDjEq8YmEjwaHC/e7RKFlb8ptp6nfNAtERFP
loOi8ML5LjQ+TUNtf+QfOhwRha8aBYuc4wVIvXjv3Z7jongfft00I1KBYj5o
2p8wFAVSc66iD7kW8Tmctck5Jwo1hXoEJ0sF4ah1xULhCv780tjlzRsbUYfU
XdPAG6KQk1Xc+lKiCWnMPdFncxKFovbMtSr9JhRb+e74bTdR2Ev+yG9Q04gE
wqOO9nmLgrnJkuqXVw3orlM60nslCnqOD/eZR9WhrhMl+3Lfi8Lm7okz1bur
0eENzTsUw0VB8eKhqEfMZSh+eVAhKE4UIhi9iy/15iFy/ZwsRwqOf1g0eB/T
N+QUwyp5J1sUrqtIWaZvvIWOGmzgP/1TFA7pbP3M159HJGzZzZHXKApMP1J3
33hYTggyHWHc1ikKF5tT7pW31hLOrfpLHwZF4bTDggD5cyPRm2g5w/lHFC6d
eEPOZ2oltDxvj9/9JwqJHYbn5XrbiERTj8HBNVHI4GGzUVbsJISU33SdYRcD
yULxZM2mLuIBR0RLPr8YqDrrmEU3dxP9XSm120XEQEFXQTqE0kPopBWWf6SJ
wXSJcu+mym4i6XlDAfdmMTCqGNV+VdJFCFv0Z9/bIQaWIicu88h2Eg/3zaT+
VhGDAHshG+s/bcQAH3OigYYYBAmkx3rtbSV0B8nRhTpiIJrvH18u1ER8y5YJ
23FGDBZixI+ahNQRov7K70NNxUDM6sbOyLpKws1aw5/XUgwG5qcOFEkUEceF
LDxGbosB33bnMe3QcGIhNoVa+kAM/tyM2vmo5BWKUGONjfAQA81pbw/q2WSk
12C43/2FGJzPys2yFv+BVq7EVJ1/IwZzL98YFuQXopiVxfMHg8Xgw+mHdjvk
y5D+K91psQj8fGNd993xlYhh40ePhXgxUBaNOX5/fzX68v0PtTlFDE5+0Z2X
L6tBRichNiVbDDwdKfHR8rWIZeDV/leFYnBi0xk2x7oalOTUX3W9UgzkzIP/
sulXIzPe3ReONYiB/NsRRcH+SsQR/mR6c7sY3FF5+ODQqzKUuqfVg71fDM7J
WqWdcSxCFyo3Cw+OioEQJ/SLnyUQz4X7sQXTYvCa8650YWQqypz9uT9sSQwe
Llye6d4TjiyfSlW7MImDSIsWm+m0F5HzLX96H1kc4qeu5ZHjswlrTYonVUwc
0nO3RZrVFhKCHZbCs3RxuJ0oarx6t5zIs0+PrdssDqfLfW8JxFUTdqwcB77u
wN93fh029amOEAkyrn6hIg5R22M8Pr9tIIq2xV+wVRcHxih70aNyTYR94cq0
prY4NL/kzvA80kxIGJ3w3HBKHI7q6NpfmW0mysZDhZmNxcHl1Wh+j2ILcfvR
VGzPBXFYVPdtaZ1qJmjUQwdyrcWBcDh+LudwM/Ez7k31B3txmIl6sItbsYlw
QkMX7jmJQ0HHTDRnUgMh17h3xtBNHJ7qO6jmtdcRtdZPPXd5i4O+h8lvU8ca
4sFqmzDZTxw4hd2OHUivIDb5K8b9DRCHqmWl/PLgYqJx48MDVaHiUM107+wv
zTxCUY9+0furODDpPvR5kxdJtA44zFhl4PNMJk/ULRkRHveKPA8R4qCo1zP4
V+AzUuKjitBLcX4Ul0zcw76hjvArcWvV4jDi/ynbMes78t6bdaCjWRxI405d
o1V5aNdPrpqsLnGI5nEX7fYrRD0XzC4GDIlDUL5nEdv2YvRiLmHm9h/8fgHf
0NsNJWjfs3XP0/9wPJ5d5qBeigakTokorYnDhqXXrX+6S5BfSngcL5sEfHxm
rbstpRgd0Jo9MMYrAdwmKWehqBANdxypKROSAF7VgrhVmXz05mbAxShJCfj7
7WCWSEE2AraRmccbJMCA2SpEUiEVjQepPrm4VQLcarY5ZVhGo8DtL0TQbgnI
YE/0yQr0QIeLOuMkDkpA2sIjXqO2D0TwhFtNyzEJkGPkVbbV/k5ouddfTNOX
gHcyhzK+luUTs1S5WX8zCZipXnzhLVNChMU7PrG3lADHD9xse4UqCF0oFTlh
JwGVC9QwRa8qQt/7cU7jbQk4Xxz5yUK3ljhXiy6YukiA57NL/aI36ghrkRXm
Pk8JOGF2utBRvp5wuJAZbe0rAXtzbjEdul5PPIi5rfv3nQSIq1VX0I/WE08m
lf46hkpAW9e2/bWJdYTfvgn/lWgJcP/x7FNlYi0R5Ba753GSBCjJ0HZ++lhN
RJRZtXFmScCXs/82su6uJBIFZB765UtAivFlMQEoJTKNuujCFfj8jz+YUDoL
iPywoOKP9RKwWb/V8Jl5DlExbGgj1y4BorvU8s+nfyMalSi88f0437wjjx1o
4USXU03SjnEJ8PEZ3X2A+QwaznuunzkrAb9DHq1EbAtH0xxaC2qrEmD2SUqM
ly0ZreixBBezSsJNnQSHyaEMxPY+Dx3jk4Qan1stR+/9QPy9D/rrqZJwdbSU
/rMyD4lsVvEylpYElUhtnRmBAiRzc06hR14SvPOD+966FCDFrOTqy0qSMNas
E08mF6A9jNcdJvbhz7Uyz7JX5yHQVqDeVpeEDtEwayGnH0jn1VDWkrYkbK1S
CrNvzkD6v8LNH52WhJ3dwWfZ25PQOfp5Rg5TScjkjOe7+PwTsrYRj/S9JAkG
3+yttd20CIfkFi0hO0losdmzcdjzM+Gprucn4yIJH7dWjYV4/yB8n/LsivWU
BIuSoW1cfoVEYF1Zy3ZfSYjQOfi0j6+MCBf1vJ/+ThJizC3534n/JL5cVJc+
GCoJdqeFnSsCaoj02NWCwmhJcFj8MHRkZx2RN5V1WSdJEl6vrbrq7KsnKlTu
cNVlSsK+jMObHjXVE42PlBPP5kvCZ8lXqTTmBqKr/M+prnKcz7fuT8QK6olh
UvycZb0kmOaqnhmh1BPTxlfej7VJwiHrtOJ/q7XE8ifZgw79kqBAumepTK4h
WEa7exbGJKHTMU8+z6WS4FMO9nCdlYTsJJMrtualhIiz0Sa2VUnQWr5D9awr
IGQKBH++YJUCSt+4nOl8NqHIVXeDwicFJxv0MuwZvhF7TvtQgqhSEHGh6pim
cBgBQdoZNGkpCBrcMZry5B7S7mM1jZaXApmP2rVOEIlOKxSsbVWSgtexw16c
pd+QmcPD8NR9+PufJe9cys9Cl7+rHt2vLgXGeVrX914ikD3T/Ei+thSsEV+2
an7PR846KT5ap6Vg5PKDJcmhAuThf2NHjYkU3Jznjw1ULES+bVuaDC5JQUn2
9+E9ngUoUGbYqeOqFFC5n6zoTuahcNsIiUu3paBXti7x40QO+vLtQt7IAynw
/5nII6qbjtKXJCztPaXgt9N9Z+UzXxCh8Yt93kcK/ow3jkh2+yO7I6oFBu+k
wNWVO+Ai7R0hovXhQWqIFFwup4tbeSbhMWA+dfOrFBwMn1V6mlJISOnlxtdm
SIH2LRZJszPlROVp6cvb86RA0U//gTeeV04GbjTfMilQXlR/7lZaR8gZ9baN
10pBa95O0/U/DUSticZb3V9SkCGosVUku4lwMf98Mq5XCraMubmlSrQQChdY
uDhHpSDu2ZNacV68A1pYFV2ZxudfyJrid2sl3K1KHpYsSYFFtqYPr2Mrsd1a
XmUDszQw3fto/mu0heiw9Z55zC0Nmx1KMuMGmgnvayMJfRRpuFm4zYjRponY
Za9jrS4hDcGSUm8PP2ogeh3iZcLkpEFu7+4MhgN1hK8jT+eaojRc+iBpVK1b
Rag6XQsw3y0Nn4UYYpMjSonfztWncg5Kww72jPScmHzijct2HvGj0nCY7ewu
I8YMYsJ9yq3VUBrmr9z2MedyREGep/fvPS8NzoSP4TGdWHTUO2Xu7RVp8Dcu
lptbSUczzwSTZm9Ig0AQ64VStjwU5uNoe8ZJGk7e2vi1sawQHfNrlvvmJg2n
rm9ZdIkqQYv+e7sFnuL43FzZ1L3KUNTbwPc3XkmD0B7m8NvG5eh04OKZ6vfS
cGzmuqEluRytBZnwbQ2Xhnffmpy1E0tR/Mfssudx0qDOuc3+FJ53RmESj0e/
SUN3t8Unk4h8xPLZ5aB2tjT0TPSUVyl9R8mRXfPRhdIQ5uFZ/yc5EZ2LQd/Y
fkrDrbiQOw84vRFXfJidVaM0PCHbJ5fyRxIZCYzyRR3SYL+ft+35eCZhmWTR
KzMoDRZ5vao5g4WEQErhh0cT0lDR8OrJ3vOVxI80OcOeOWmY5GrKvHa2jrDN
9BRAa9KwJ5G1c6CmkXhhfmvwBDMNdHoDLr1dbyH6uj5rPGSn4f2Q4fy9mjZi
34XG0ARuGmwTEk95gf21by/Lagc/DZQWRjXeM3cTAxa7TXgEaWCxnpr1YEMP
oTpglbFfhAYPVk9NWTv3EH5W7wSvStBgoytXiJdrD/F7qORmEI0Gexx/bBze
2UOoWc9Xl8vRIGfKxEJfuZt4MyKvuLiJBm1TpT69Vp3EqK3R001babCjm1/o
O087AePeQ2d30GA41eKD775W4t21rENeu2mwnjMn6znfSIz/GQlLV6GBGznT
u+dCHfF+SsdUSIMGGxxKDQ5IFhKTDvczDx+lQcAW+xdTlHTi6Gy80G0dGuS9
2Zr3xCeQCHbscPh8ggbSlp0nRE3wvPrHU1t/mgav5r9If3LKQFfPdi1mGdLg
HZfJrU+l+Wgg46vsJxMaJOlfU71IKUXmIo+Oe5+jQX/qnYPqDytRs9Ppuzcs
cD5MGfeMT1Sjk79kPxlepsHuMk9uv8haVKYyV3HQlgbqzZxfmtXrEASVzMpd
p8Gf9StFFkfrUNZSgBSPA87XfAq9I6UWKZvaaM04YuazPbWfqQbFZas6tN2j
QUauyaIpfp+sBE9wvgsNqn/5Sjp0lqDgB53FMY9oEN4yffesSj4S6kz8+9KT
BlkfrYXtDdOQ70E30btPaUDfPThztzkIua3JXDvyigazY8v21cNZxOK52XeK
b3G+ZnZtjwgoJhyI4jzKexq8V528vaRbTYxJB4wuBdPga/M1m4obDYSlm7Vg
XxgNjtRqhyDfFqKzR0WtPIIGX25/MG+zaScM1bmtk2JooGiqS7SPdBE1nzpe
BXyhwakzluECqz2EFlNi9sMkGjwZvJfrdaiPyLdwHbRKpUGVZYXvPo1+QrVQ
j/94Jg3g9xfz/Ol+IkVWRmVXDg2ere1fiNUbIBQ9ZizE82gQl5ow+cBkgIgc
KHrBVIT14i56M4Z/gJA68i59pBTrWcx4d9nNfuJd5JWe2koaFAY+Ujjj0Ufw
s6lwZdZgPS2KhQYf6yW8L3PtCm2gAadxsI9KeDfBUNpu/qSFBse/cXxT2tVB
3JNP8LrWTgMtqv/e6outxLTXw2T9bhrc/jSseUKtkbg6fLJ9fz8N2Pi+7Ekp
qCEGtOissr9pwHQuX+5zcQnRzFlkNPWHBlynbriwsH4mTtq+dW+dpsF2+6yn
jvRQVFZx+QvxjwZXU10DE8mZSH3LvuaoJawvZa+eAq9C9P05J4PvGg1YxwM9
VrdVoJ3jbZsdmehwwMb8Sl5XDfpy7MsZMzY6cAX8YbihWo82JLi4HOKiw/Uk
ITfO0QYUwnsyWoGPDsWCESpq/xqR8HVaHYlMh6OEpWuqQRPyq55aWhCig//b
k0vxbE2Ic3uhXI8oHZZH9wf3sjci95dvTpRK0mHm4q4Pgeb1aPmvlVMinQ7j
r8pcRUm16Lbe3vC3G+jA9sjNJdSwAo0ncfx8sJkOrFyfpsacC5EVqW3u0lY6
6Bd3vTxokYG6bsZL6+6gQ1rfph8bxN4jw/oH2sq76dCgdRRy16IJrdfSHxkO
0uF8yPV89n3lRP7MZMlvoEOGLtfpY/Z1hKp+wWT1YTpwPBbkTZdtJlJSX4ul
a9Fh6w9pTfnQNkJRyOrwx2N0MDt8b1NEZhehXzP2r1WPDnYxZneeG/USD546
xAoa0GH+7b9qMdZ+IuLQoqmeMR3ays/Ct7MDROWqK98Lczo8yzngOqU5SExn
sOWXXqTD4Utcocw1g4SYg88t5st0qFht92keHSQ0FAU3Ils6NFnR9Tg/DBK2
Q0GtztfpMBc6d2tT3wDhH0Z/nu5Ah573u++cLe4nvpvEHJy+QweNW8ZuGbp9
RJ/g9smt9+kwYhdU6OfWQ3DVpIXbuNKBEqnmI9DZQSg/PWAQ+ZgOg9FtL84d
aSVMDhWy93rRIeJ+jcPFsw1EbEatnZEfHY5E8+0V/JdP1N48K/3mDR36bk10
llxJJBa2dNXVBNLhpVx35ILha0QbsvTg/kgHbk2XTK1vGUgrbGyP5ic6VN4u
LUH3i5C9icOIe+T/n1OyAig/UaDg4ofcWDrkaf68U76/DuVVu55YSqAD48LF
sGiiAQ17szHu+UaHS27O45mPm5DAIZ+Um+l0GPr1XHrrw2a0b5VyOeE71hOP
cSdDTDO6kBEkMpJLh1J6Ce3yehPyukmvlCukgyBTMXX5aSNK3BLjcqGUDo6J
dVa9J+pR8+A2peBKOqTflyIZ51SjtdC0vpYaOuxp+Vn4/E0p2mhy4C2lkQ66
nHVPVWNy0QnBQs2TrTi/V3T1LYpj0J1q7aVnHXQ4c0L4lmduMFGicfY80yAd
PoXIuJ2ilhF/VjpJaiN0OBkTt6OJVkdQMyyL7k3QIde0yFuJsZlQuzl2J22K
Dl7bXfiKfrYQVlscNk/N0aGca0iqPLiLeDG40K64RAfT+oepxny9RGqoq6/1
Gh3uN6/dWL/XR3QYs6lHMMnAEaUbR5a9+gkWQZ+ZbjYZULo939isjPtZNSVK
nFsG3nduXKPcGcD7Y5DRWX4Z+FPw3q341ADxQIPO/ZoiAw16pQ6BpVivK9E/
qoVl4GYTTzalo4/4mb7NnktCBqTe5b1/8K6XmLVPkzlKk4FZO9kzXqvdhMSW
A02P5GTAmVuv4yt0EIcGC7x+bJKBfIM5ZR9SK2Ebqq26qCgD5exrQ3+eNRD+
xrXju3bIAMnbZHunfxXRV9X5H8NVGkhVF0VVVEIhpMj0Rm9+pmd+y5hKQiVJ
SEUD5ZNSqYgGSaWiQVKIJGUoZHw3FUIUImVMk4pCJCnf+3nvueecvddae9+9
XLJNdBDY8/n6HZsHojnRmyU/W4if9+w05cnvFelZfy0kWesgwMXlQ3R0rtBj
8r9t3vY68PEzDvpziBBGFo6rXV2mg00W+u1/mqqFWUHhDa1OOngXWJAbpdgg
bGLMPKK4SgcmBz5Ft558KZx4H6vvtFYHl0KcZNW8m4Xa1+d/PLleB+fWknJD
w1qEAcZmWw5562BCaTI+/U2LsPCl7/ugTTpYdLIhXe5Ci1BiR8ymzf46iLQb
/5t8q1m4TDL/3dodOrA0jk5kaDYJ46+1b1y+SweJJntrC2e8EHYbTeu13K2D
+taLOT8qa4WMF3QfvVAdlDn+2zb/3BNhyDbnbkqYeF332FQRu1RYMX2f18Jw
cbyqr3W+/7ollE663ikbJc5XXdnL3ydOlNww+HYkRgej5Zq89NxK0Wd/lfWf
zojvMz/dk/uxVqQ/zfLNm/Pi/bYtzas2vxQdTtyyruGiDkg/H3j/ln8lqtE/
/fpRog68S2Yl3dzyWqT4/MHagmQd6Jem+JQ6vhVt8OtozUzVwRfJ9T83F3SK
MqdmuCVl6EAmtfnvqwvdouHLzFdns3RwXrqk6NbOHpG53qrVUfd0UN2kFE99
2iM6UXegeW++DiKydlLHGnpETZtTXbcX6qCY8uFbS0yPSP3fs5cbSnTgztyx
NPxXt8jv0pCzS4WY71hKGLG8S5THW/jCtlIHx0rGVQ9pdIgmn2GlcZUOpAPr
LGzC2kX2m7Y2MGvFemrGCpm9raK4ybMrNBt0UON+f7m5drPoTUJRvWKTDiqq
HfrfazSKdtXMrPvdroNZ34sVbysRopKNnGUDnToIXaO9r3xunkjyz5pnPb06
YPa9Vtn0LFLkFH/IoeWDDtIstIrWmd8SXmanV1f36+BwrsGBmRceCt9V1duX
Duhgy57ZlmcXVQrZPj+f3hvSwfMbds/aydXCfb/V7FJHdbBc6sinDqc6YeV5
mycJv3Wg1Jw+sDq8QSjL2mFz8q8OjGd+Wje16oVw7dPzlQenkXDnweut7V0v
hKleJVZBUiTs3zusxel+Ifz2q5fYJE3CAcuk/7huL4RG56SxVo6E6vFH+4fP
NQiPMPiiZQok2LYXTtsmnt/qH7tbWiqTIBKGnZU7Xi1U2RBRzl9IwqECk68X
KyuFPmO3zCmLSZjHWtT3Kr1EeOdsY6mqNgkVlanr1vrdFaJSo2SKToKqzqli
6aAMUcx6e5MRFgmc7D93uacfil79DHz4kUdC7YhqeGF7pUjrTILgjQEJ9/Ss
KknsZ6LttPLC58YkrHxHEj1XahQ9IN4bPjIXf//vqIYPqUk0tU624AFI6Jex
/lh7tkW0bETfINOWhItLdrudiWgVxceuv3/VgYTHH5NWZku8FnVRovTOOpLQ
M2T8wkC6XUQXZeVFOovjqzxvsie+XRTs3sTbu5oEwQxpe9mUdlH50O+cbe4k
kOXfHwrktYsK37cW5XmS0PEcvCH2a1Fu233Rbx8x3iV7D3zMaBXdro2rttpC
QuhDCemEzBZRanlg48ltJHw92VagadUkSspd1vYykIRz0dRNy6QbRQlptO6F
wWL8L78Io8s/E0Wf7B28fYCEn6p1txrOPRQdOVgxNnSYhD+509+3rb4lOrDr
6j+TKBJmuV5YtE1rhzDEd9/MyBMklEtRRi853hYGrlkzt/YUCWsXnZ/bHFwk
9HPQU1GMI+G4a8AFh32E0MdsnoZHvBhf/9GOuYeeCNdxvlFSL5Pw+pRzoszG
aqGr9jP2lySxPrqD3BdNqxU6KmUY6qWI+fZ68DdoT53QblaUxYF0EpLcWnfI
LagXWk5421XeFuM7u+bru391QuMB8xVz7pHQEK3lvVasV37PwjWu+WI9iaRu
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
ut9IVdKwIXq/kdM8Jta9lJL/95SGcAvR6Z33ubhswrIbe0aDS0PmwEkHPajM
2Z/z8aX4/NPNHYfF8+2a4Ovvu17RsKfOSMHzhQni3zxd2NZOQ3fBhaWPheZo
sv7m1NhJQ6eXisnvc5ZQuKN4tLqXhl1B0beIDYDzfJNi0QcaKk+u/pzmboUz
Yd6DRf00eFxUn+NrYI3nfcdIuQM0ZLuoOal9s4asY7Z75hANdxZbMneE2WD5
g6bTN0ZpWFqrf3Rnlw1i1H9XXv5NwymTxF5pRVs8O6o5HveXhqwkpQW1820x
e8COfXIaHYfWxHH13tlgyZoA3yNSdHAEr68UHrTB8fLzl/ZL02Eb9z70dZ81
nlKK6/+ToyO0IPGMzUJrSJ7pnrZdgY4sVb/ePk0r2IxJCXyV6Zgxfe+xQ7+E
iPRiBXgspGMHZ7GB52YLEFWuKa6L6TgXFPR4brwppjj7W5dp06G5+8OcRLF/
sbx0XcaGQoebxa+mTWJ/fHDqKcx06RiQ/tzl585Hqf+3PfpsOiTH+N7ToliY
aFS8w+TToWHvvvDWRSpMjE16SIZ02HuZ1w/M08a+G97K6iZ0FNf2WlzTUkXR
7OPLlCzosF6m+nqgbS7GgrLDZa3oqNUhT+e4ScCwvemBpB0dQ1clwm/Q3wtD
rH73TzrQMUuvZ/unh62i+7c1NUcd6Zi7rmO5efk30bCC/eoBZzqOecnuN3r+
XcQ/EHDyw2o6ej4EbezMei8Kene+otOdDt3la4fKlB4Jc5YVj7zypOP7Fp0u
S/aocDC/m97gQ0fdupt/H7Bmga0206tqMx0Nb4LDFZfMR0AU60LFVvH61643
xQbquPPVtaYwgA73iAVb9ywk4cuq/X/vBdFxNfLdrzcnxPeUXde7FULHlKWG
c8pyDraSq/yv76Oj3jNpeT5ZDx9+KjadjaBjbZ5NTy+MsbfklGLIUTp4Udm+
uXpmmBkhuco9mo7Uj3OWD0pb4qLdoQvmsXSMh7pYP/EEqDJjzVpxdJxddW0q
ONEKhS92KknF0+F08mS09ENrLLn4aXX/JTo2BaTW/Mqxwev1PgnPr9LBnNZ/
VHDIFlu121/lXacjzjfXb6WaHcY/uqhcTKPjBvvT67PH7RCdXet24BYdlmOF
FXPK7KAabHPJ6w4dI1Px3qJiO9wWlLVZ59Bh4P2F8eCwHUz/GqjS7tNx+aNv
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
gSCPS/vbx3komb+yTbqUAXuu7Ter02yoK2oETlQwsGnLTcc9p3VxWH5g+tdK
BrjxNKtaeSq655Zdflsl1tfM6VPSXBIgd4pTX8tAQbxhhP0fLaTKeDwpa2Ag
7WGCKGa2JiTn6HrcbWLg5i3VTO6txfCbPf79WisDrm17365uXYyamdXHzrxh
4LeHTFbcBU0wpC6qhXcx8KaFGnB6qzZiZ2zJ2/WOAZ9kN5O7pSQMTjNY4vOR
geTWmle696lwlpjR6fyFgX+Zk5a2Yp3m/3sZbDUofs6ZYO8z50Dp743ZesMM
3DJZYH7ZiY89f3Yl64wxMLj98KekG/po/W1pMH+CAZ32lX52UkYwHpernfGP
gc+FxTETAcaY/Hln9L0UE7pFQa1BMy3gNXLg1CtpJgpzayutFwpBDC3VrpJj
wne/wa6n+wCdH6pFhQpM7Jrw2PcQYv0MfnK8pcxESF7RZYMuK7z/Vvju0kIm
rM1nFnxcbg37r8f2RS9m4nqXLtX7mDUy+1fP3a/NxLc+ToPVCWvM+Uy6uY3C
RLxnstr+ldYI+Dhs4qHLxJBCwMcNnVZoeP+ocRmbiXdfj//3XTwP8fritpjx
majhf6cVrATO9Xr/YRoyseC8h8T9PZYY7uacUzdhIr3zQm7YsBlWd/2lylkw
0VWnLzODYgLVt1ddB22ZWJgWVzcypocD7ds/dzkwcdBrTufDY1x0tJkcbnRk
QimMGF8g/q9bts5WIpyZkPj55WK2PgnXW9pu565m4p/p8ItDS9Ug0ZwhTHFn
4s6nmWUN2xTg+3LPq3OeTIxakosd1KbjSaPtjkgfJvI2PH93JKZPSG2YP233
ZibmleVOT/zVK4quf3dx01YmonQKw5ZfGBF9qc1jrQ5gwnV6XcWmrFGR47OI
StsgJvoTFwnObB8U3ate6W4YwgTpUePyjM0JIvkqjUHKPiZk6/NaWCljwuAn
A1EqB5kIsMxtoF+cg5bKsoWzIsT3XbWlld9SgeGjUzm/opiwrzPzPP9EC/YL
5RvMo5mYsba428KXBrf/4r8diWUid932Oy3xHOzTvqYrm8DEXsH8kBd/jBC9
X9vB5QoTEc7qN717THHlZbrfxWtMlGWt7LC4bYksXcaxtylMxEZRflQvtkLJ
kXtpWhli/tNYbw5WWKOuXa9ySxYTrGEuSZlhiw5+UU/WPSbYyTNOP1xth28n
zaa+5zMh0t1UnKlvj7+9osWGRUx4StiuiSu3x1xTW/MDpUxwfNMSe7/YQ+N8
jYdIxMQrr8ZL2oX24H5x3C/5hIm+rIRhS3V7wPrlpaU1TBxK/uXUq24Hl8Q1
hWfqmdCTMC95UGID3+H2luYXTEzXUb116Y8Vgpd5jai+YkLB6mRm+ksholLf
KXi1M7E0qlTKRsMM8RN+vLROJo51Jfz1/muIm65fnT73MvF4uncXLYGHquk/
TwV/YaJZzrRe8qgK2jz2ZRUNivl3cIp7NvVW+Dl/smZymImzITf7p3spEONz
jnyy+sVEtmi51mFNbUJ6k9TME3/E6+O7b+bx6MSi0pPk+ikmrj1PLi/PZROM
+XNtFCRZmOtfUmpRyiPMdpzf6DabBZcQr4NhD/iE42OViKuyLPgtULhGr+AT
G9SuJvfIszD7wO2vXq95xM7dmuUUZRbORJ2ZlaLIIQ7Xpb3dvpCFllUBuaHF
dOIsiT6Rs5gFZ7vy5+FV2sSNsGzVUW0WPrdl1CjXKBK5zTyBKZWF9dOvnemc
WSF8xCxYE85gYZOnfc54pTKaokxCnnBYYCcIvtx0oqLvbfl5aX0WMgM4au+0
+Pipb53nJGDhSLX2IQkzASRjqxovmLHw6rJbz3xXCyi/Xzb4WsjC0s//bk/c
sALVvFFWw5YFlsSWi2a7bWEUv4q5yYGFNZkfk8bllmDJt7almY4s2Pe5prz2
Xgp3W8+tA84sDNrz2Enuy7Etqee43hoWrq8tqe//7IgDPzenh64T+3S3w5/M
ZzghxrH/cdkGFshyK7tHrjrh6s3Ad9N8WSg2nNP9+rYTsieHJJb4seD5VyYm
m+qEstV7NWO3s4AdUllH5q3A8+wJi5c7WViX5vbFeMtydEmGe6rsZuF+fPr8
IdZSDHrOCFsfykK3TF6/a5A9ph6cuHIjjIWe1pg5zy1sIC8n+/BDOAsZWzx+
H3YRQmtLXCvjqPj8oMfKn88LwC9XGt0VzcJUcXDj1A8OrJWvzC+IZWHJnrP/
6c5djE1PU5yFCSxohf79/O2FFlF1YN+BoCtiPkKkW2xjOQSdt/JmyjUWZvhe
du1aY0jEfKA0NKWwYE2ZJ/t9pynxLXHy14wMFmLOdtVcC7YknJybtQ2zWHim
ZRUYlw4iVyprud89FjqfV+ScC7EiFEsj9lzKF+P/PERjNM2KCAlae72mkIXR
hfy4NgMropXCefa7hAXRpULZHiYI47eSIwwRC6dap3fXa1sQiXFv1T0fs1C+
vWUNo9OYmLTLtz9dzcKxqqsduWn6hNef6KCKOhb+GUiuXkJjEkSud+L3Rhbs
LJkZIhM14qia3KDLaxYKnpKco85p4eOLvgVRHSxEN7i7H3HkweF4idWDHhZI
+WQV6e3GyDI7t+PDexaOO2kHvzETzx9D/gkq/Syo/8jP7KLYYmeGpWjJAAuM
rpa+NV1L8GK9cv++IRa2VTK0xpyXQ0/hm2LWKAsX7zwY1NnuhISqSvO3v8V8
RC33TD7ljPGwK36y/1hoPWQ5+0iaCzz4QXEW09mwexWlNxLiirKP9iU7Z7Jh
dq2NIfztCo2kxe+vz2HjSFCr4W/GKkS4/JR7OZeNgOSqs5YzV+HdzDrB9Pls
PJpNG5mMdoVtWcpG/QVsTF64uo153wUZ/+07tVnsm8qSss9JnnDGbNrKggRN
NqgJWjuiFJ2wvYPSXUVi46DjF3Zg5DLUn5ucPU5j48dO7zHiP3twljTr6bLY
sCqYnzn42wpxk7c9PXjideszJ8x3m2I4L+L4KQM2pqadVF12i4cidc6bAXM2
Vpuz/B2eSRKLmiQlNa3YUNbc0HxiiEocPPGW7WzHhrdk4PnRw/pEl3n+2iNL
2djY1fZgwX5TQmz8juSvYCPnfn2EuQaI1Fved/pcxOtm3Te91lgTkhuMXim5
sbFi8UntX202hJ+i3JSdBxvdtxdIyaXYEjXVffRQLzb+Rv2+eDnXlmAcKnHN
9GUjjHXj88AcWyJW79zBdj82ZkxW1fAeWhODn/wz5uxg4w+pqbD/MQjna5Yv
zHaxsarpRVHIPnMi31V5ImA3G6MvudcObjIilGZ/IyWHsiFXILF7bgeH2Fte
uaIxjI1gxqWKlRKaRHvwlVCJCDYaD+2daSbZLTSnB6Xwj7LxJlWHVG+gg+RO
+zrfaDa+6vs8axngw9fhp8bTODb0F1YK71ZY4cnfWoexeDbCu28W23y3A/V+
SjDtChsZ2QonZ/UsRfTWfUnu19iYde8gLStsBb4sXll1MoWN0Ifyw3/cnLEr
v6osOJ0NDsXC/G2SC37aW95ff5uN8YRVr1+ku2Lf24LbtnfZmPbtudWzHavw
dxf7BjuPjcUe8cuz+lchUjL9okoBG8W2GwMOqq3GzCvqp6cesjGzNy760r9V
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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwcV3c81f/3t/e8uK513WHv0TDidZRSoiSKhiTKqvARopAGFVKiUkZKZaQk
QuO+7KSsJNlkZmaP8L2/31/vx3mc1/uc5znv1/uc55PqctbWjY2FhYXGx8Ly
/89bq09SyI9N20Xjqacs92EL3+e8p93DUENdzlj8kRG0r1fjlor7LfQkovvV
iaARtM5RbiUYew/NsdUdMQwYQQceTO7jck9FYSIdAzJOI6iFGJu9nvYErcml
7jbQGUFsxxW0/sU8R/tdwlm9xoaRZnbJ68XgbJSi3j/Yf2cYOczZ6M+deoW8
On9811EYRmWpM21BWXlovLGz4nLqEPpZYSq7kJaPnLUedflwDqGxketHz90r
QD4vd8TbHBhEbMI/UmZi3qHXrVUC/HcGEGkDpcf3SjFSPVKqQyjuR1qOXtSp
4PfoeV5C4t6vv5HjE9anY6cYqL36z/2l4l602fWZ38ZXGE1uS6iRTuhBZfO7
4/2zStFW/OLXZ0YXapW51zydVo62dn+44xH/C7Gf1Dw4GVONRjvesq9qfUWx
i02BWtc/o8J93rdJpCpEuhl0//SVGiT5Qs/3YQ8Dab0u/zUaXIvqO1+8utv9
EB1adjwyfKoeLfmTxdWnKhh+VWGf4nUbUGTtfyp+lV8YRbea9ui/akBHP3Pl
EQ0aGFtpQWf9shrRmxOzQfcTfjCiRr+si6o0oTPHnKa1JVoZ397KxeVlNKGK
3d3ssf+1MRwsyl9PpX1H2zretJqWdTFSRIhmceRmZNmV4Eu172H8/uXeqP2o
GekbXp6K1+9lqDx5f7xe6gdKDBdOFl3tZZzxFpo+c+8H2mjNkROW2cd4u/F4
hJBEC1pPTh/dafqbsbSWT8i904J4JGxLPIt+M0w/cz2xFvmJZsk5o4mkfsaV
24764zE/0YENQWyxR/sZXw7llEfzt6KVd7aurNf6GcIK6/s1rrciBWuujWkJ
/Qy78X39tVy/kLFc4i1Npj+p8Km/15VfSHCnXu6xQ/2M7rAFDn62NtQbZxnN
I9HPUNhlmZAV1oZWpTUKuQp+MzwJyYqWq22o8VYzscngN+NV+2TBSHA7kjLj
DihI7WPMPt264/piO/Lk70uEiV6G0ZmEFpWADuQfN2t5WbGXEbZ5+OTnmQ7E
kpOboLy9h1HBYrxwyrcT3UlPrmtO6mLwfYmJ5J7sRHxl8TfvhnYw9sb3SD73
7kLBxqTxL4ZtjDbFawaDp7rRo6Kpxm/bfzBWFa50E6e6UUKsHmPmeBNDhGBW
Tt/Sg14pZpiIl9Ux9ESRp11FDxLyk/ae1ipjBAkbFxU096Kk84Qzz+JeIT7h
Ev46Uh/ySVEslnvyAT0UMjw2eKQPhX+1mBxLrkCfBDdzSQ70oV1je+6y2DUg
G8FCR23V30jdIexSpNp31Cuw8aXF6d+o/EaHMGr7gTgE9O2C5n4jk6uttzSK
2lAi/5vncYb9iG2X174vnR1ImV935cXFfiT9/my94dcuVMT3ek9paT8qrvb8
1m7Wgyz5tNN/cQ6gaWvbW+xrPaiDN3fu764B1Le128P1QS86zau5iy92AMVd
sH46JN6H1nhyHtGaBtAHb+mLZ8/2oTge9Skj4iDa5YmkMp73IRpP1rb9hwbR
ngnCesKHPpTPrXrPK2UQMSYqBORf9SFz7hd/LvcNomctisRrl/pQC5ey6SOl
IXRL2j7eV6cPuXM9u/3Wcwh1/teqe/h9L1riVBz4mjuENCsbktrovegG51OD
gekhdIfsqVbn1YNkOenRq5uGkYi55sfbat0olyO9WyJkGP3gH5pi296JEAdV
X4sxjMI86d8j1NtRA3vatR3sI+iP2Cf35d5W5MIu3+ZkMYLU/87YxJxqQbNs
KZqBN0eQdMXj7ojS7+gqm9ylW/UjaPK6pO6v+Qb0glVGBR/8gwYumZTNKFQh
I9akkNaHf5D6xzdPdgpgVMsiVT/V/Qcp0UIOqlXlo4l1YgDVfRRF9r2aP+gR
zwhbT6gxzBlFsx3zDUXTrxki6+JytlOjqL7s7+/y0g8M/TVCRUTQGGLtDr5X
ElPDqFi9LfnwwxjibPnl+6i4jnFgVcQrn2Uc+aOT8aTqRsbQv1ufas3HETf6
yTW+/p0R9E+I0B81jo5xfUxsY21h8P2Lcfv3dRy12//kLqv+yXi4IlAsLjqB
LEk73g9Z/WJorNwU0LSfQNwbhW6tRrcxPi3zOW9/MIEkjZd21YW3M2yWr+cf
7ZxAjvYzsV0bOhi9SzzcAdRJpPWvN+pobAfDbynyUKzbJHqzyqaRlNjB4Fji
yn2WOYl2950ItrHuYCQuXmVljE+ivtTAzQp57QzxCxFZo6QpJJfYRHXCbYyO
FbPmBaMp1PNhVag55BcjI4R1jf0o05+d9VWo/ycjYrY6uu7CFLrYWbbQLNfC
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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"ax,ay\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ax(t)\"", "\"ay(t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6271061645254173`*^9, 3.6271081436946197`*^9, 
  3.627108239901122*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.86}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"\[Eta]\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Eta]\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6271061645254173`*^9, 3.6271081436946197`*^9, 
  3.6271082400871325`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
D78IKqtw0MTz+qGZCoLPXSYalbydaOvDeUtaLeGv5bfsQGEnMvaQHrzQSIPb
/R/ZQ/u6kN95I4vUVhpE2GZ9tH7dhQqOefZ/4tDgAVPinf5MF/q6L9Wc1EuD
WTen68kC3Wj7zp7es4M00PvOZ12xthuZSK86FvueBkV/r5/a8b4L3RVk9Ax9
IPRD3/vEM7gLFS6fOCoxQQPh61HMRpkuNDV1v+vYFA1sL8qFUUM7keRg3pGw
GRrAgkDCwjgHmTZ84HDmaODfnFpcsomD/PMFTQT/0GA+DOcp0Ij+IXFPh8Ff
Gvj6Fc/IK7Sj7yEOxg9W0MHv/NJ4+JZWJO3ztK2ehw4XR8i/Q/KakJljteHq
dXSYfqp3eINCAyrT325wW5gOe3acH5t7U4UCeTgHXGXoIJhz7bCwYgYq/7lc
nyNHh3FaQAKD5yX6OaqoN6tIh3ZeY4sHjQ+QRdkd3Us76WDfbhHDjo3Dj9Kz
a9LU6ACbyGr8P1/hymfvdSY06NB1qn3O7fJbLO+qvvfcPjocvK+gxBtcik/Y
2FbGHaBDq4zUQ7FNFTjoSIjWOwM61Kp6Re5Vq8LVWuXlW0zooHFz/jCm1ODf
9G/ouBkdCg0ejCl9rMXU7RI43IIOnG+itUkO9fg0/37NrlN02KgdfT8vrwEH
L1wtFTpHh9+3Ai1P1zXi2ok4DSM7OlB/SjyViGrCCz0txYEX6JBYbHO+l9GM
aTULuxqv0GHHs0X64r1mbPVWrmiNCx0MLtWGnolrxmEvTNX3udHB2FDsnpl7
M65/fLvAx5MOaa25o8/FmvHSzTeq5d50+LYxn+/S9SbMuDiY99ePDhPCWu/P
RTVia4u1Krvv0wEJfAoNudeAI/SUc90e0qFRkg+57qnHTSpWO/Oe0OGMnczo
D1yLl0mP3/4MI/gLOSd0SLgGszaWsJjPiPNfqBsVCX5sV3zJuvycDkFSa46F
K1fgZ99FmenxBJ7LBpHt28rwiuYrdLlXdDiWeFb/RnsONo/c47E1gw5/bNJG
ytUz8Rtbvjqht3SIXtPKrFifjC1WJJ9aKiL8dQiQqKK3cGarS9qPMjqsdWAd
ePrrLlodrf3rUyUdKArCUv9FPEfZKu8edjTSIT7Rc0X0r0y0lju9v7aViN+h
IGrsUi461XFDtoRDh/nJ4VSVwkKU83y/U1YPoZenmf0P2ksR30XR0qQBOihk
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
nO4rb/HB/wPh2meb
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"\[Delta]\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Delta]\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6271061645254173`*^9, 3.6271081436946197`*^9, 
  3.627108240278144*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
nw7hE/HJ5dh8voBIsiMB5M4tV3YvxxnptQZcj0lYLvhlYt3echSa7UhWf0Lv
9+8y61WhZThWr2/l+pT2u+EmpyNzpdjR5GGd60SCn9XkZ9VdpehampOy2JmE
K+roPiJZgtfinHQ0XEi4t7em87xgEV7ydRF3ciPB42GkALjko3fwcsXklySs
qBF96ROTixay+czRVyQwJNacFfXPQm7zeUkJTxIyXoVrLjJMRze7lE1MFgnJ
Q2ZrXHXi8Nfen48zSBKerEwquqb6HSvPi28Y9SLhX3uC6/Kf7/GNzG4pHR8S
TJ9qpyrd8ydutTwMfPiJhCG+P+F9q6KIJL5zt3x9SVC3PVLIfzuJiNNTHusP
IKFp/aMCgYdZhBgnIGVVMH19i9QKpUe/iekhqdZ9X0mY4V4852RSSDwQS9Cz
/k7S8+cK+StnyoiOM3p+nuG0v4L+U1GYLye+WS02Couk92//NfHMq0pCV0Dd
PiuahJwXdzTVJ6sInVjkbYwlQUfFUCFDuYZgO9rMjMWT4FhlNJBh9If42ECe
X5ZEQqhPDthp1xLPEl9vEUsh4VXfPOPsyjrCaOqfjsxPOg8cx+M3+dcRJ9SL
6iGNBMGG09/aF9YT0u9l8k6lk3DJ/lAX3/56QtwTV1/IJGFKu8fg7J564kIA
68e1bNrPY1/62obqCI0VZh+sc0moa9rjd+BJHWFg+aXMPo8EfrFbdxQraokn
ROxJpwISlJLn/imP/yFuPFm1zKWIhOEl1TZjzTUER/9tnUUJCQn3InqbwquJ
pEXqokfLSBARFjn6+HQVsf2ia/7WChJu32jnV8mrIEQr97fNV5LQILnZtVGk
nBDJiTGtrab/P7dpyhBKCZa3iEb0H9p/7NE9iS+KiF5ZVYXLDSTUphpCelYW
4bc+4ohcEwnMeC3BN3y/iPgHN2IXtZAguYNZ0XcogRBYd7AwqJ0E6ZNbV+sk
ehAiCld2VvSR4C24KXrPhUyccTgf+mGA1ueMdyNnQR4q3fYJNx0i4UShWh8G
FOMuh5qzPX9JaLM4uT/TrBKTtubyhI2RIBZ883XwxhocbYjRvDlB96/u884z
2bVo5qH6o4tDQk2f8irTxiZMYEdW+8/QeXn6+2uBrS1ouexT6MU5Wk91Hq00
zVYUyuCSEJmn2Y4RH3exDecubzlXwkWBkofGH2ezdjz787mCKzcFq52VvxQa
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

     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6271061645254173`*^9, 3.6271081436946197`*^9, 
  3.6271082404361525`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{"x_", ",", "y_", ",", "\[Gamma]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Gamma]", " ", 
    SuperscriptBox["x", "2"]}], "+", "y"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"x", ",", "\[Gamma]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Gamma]", ",", "1", ",", "3", ",", ".5"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", "Plot"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6257320810492706`*^9, 3.625732148671138*^9}, {
  3.6257322023582087`*^9, 3.6257322040313044`*^9}, {3.62575705807491*^9, 
  3.6257570593027306`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJw1WHc0Fn7ctR8tyQgleRIKpYxK5PMloyENLTIqM0o2WZnJHmVkZW+yZeT7
GNkjezwIjxFCRgi/vL3nvO9f99y/7jn33HPPuZf49OUdfRoqKioWaiqq/0Xd
T0GLOzsE0hGC+vTODhGRAo8ISG8TSGvHvwmpbxIRt1mGps0GgWR41Ot2wSoR
9Z6pbfz5i0A6mFF4xXiGiK7krycOjBFIkQeZRsY7ieh0kfbDghoC6ZpKWdLf
ZCLaKBOpMvAikKSENuJHVYjIr64hpJWJQNLP3aWpGsOLeA+Nmd3exUDiCkzT
TVbnQWYyardPstOT/DM1LNLqD6PHqWtKzfx0pOPmqbY92lyoQtXelu8YLYlq
rIVFa+wg6qp9kNEuSkOS8O85ciyLDd2zZecUO0lNujzu6bFqyILsLOiitAWp
SL/+M2HnucmMcuwiUeWLv/jqSBL7pcW9SN7zJ0lYbxs7uN3ke3NmF1IVXVaU
c9rEefzEh1bz9CjKWOP37McNvP9vRszOMg3CPO6HqCPXMBedoPaN+R3QMNNR
wMWrOM3zjCV9xyY0X9ymzGQs43n0euNT/W9wDtvKTkv7hTWPiEpdfrgEt49q
/eEJmccpkmXalmpzoEar4PbVdQZ7hJeMdt6dgDZpf80PFjO4jUuUMUNmAq5Z
9Z57oTuDw45NhwQenwD5SaM5NsUZHFXP2em5SgGxev+7eowz2FbHbZ0nlALM
vn0CtIE/sH2d6QjtwDi0sJg0o+hpXGyexR1hMgYKx0LYKoonMa29TVG37TC8
0fa+cz1lEm91bLEpXR+GxkiXoMHQSawZUXlpgGcYVFlf7v1jNYlvmW3P6tUN
wUM6Fbpz4pOY/oZ64QGOITCZol/99GkCp5aG01RVDkJIxquuxDQK7tIR9LcR
7IfuKbMD4hEUHO2hwUbc6QMOPqOb1V4U3MbRrDff2wfRUfebRw0oWM9b78nc
mz5I8ROvOcJPwVof7Bodf/RCmel8fnj8OPZ+zn/vd14PjIk9CfGNHMN134M1
Lml3QY57prmhzxjmOhCyt/FiF9h3/7512X4MM6PPN605uoDVxmf/lvoYXgqz
8Rbt6ATF0gI/Y64xbHeivElIqRPSgcHrasQojhjU9ZA51wHjEffXmUS+Y9k1
g7QPWm3gcHGuqG7Pd3yreupeD08bsA29tnKeG8HZ3vn8d0ZbQelo+tJ8xgi+
tvu0yH69VshI3pprOTmC93YVdoeZtoBFftyoj+AwLnSjfj8U2AS0LbONDHxk
HKoR3ixHWw9WqU2MM3RkrCxZunP1Wx1MuGUoN08N4tyYFIpPTB18lTL+Gpgx
iLM5JsqKL9SBV+oMiVNsEN/KnUkpNv8Ke9x/lAjJDWApq6PWDxZqgPXiVLKq
Th9+pyQ5y81SBR7sdRNn5Prwo/4GDukpEqz+SuZj5evD5HXB38FlJOhJ1Y/v
m+rF9KNX8IwuCcLZJ6Mfm/ZixgyhY+4WGA4vUd5ZOPVgxcS8e8eHK4Avbcw1
LKoLdwqxmZoSPgOv75G3i/ZdeIHCZ5NeUgI8puoBVzS6cNFAbM0zoxI4JNER
ucnZhWUdek/bNxcDC4lUoB3Wic+FqSgNhhcBdf/HSYHgDlwrfPdV+NUC+FtG
nntt1oFNPnH0C9AUwHYMx3L/zQ5c8VLJUbo8HzZ0A//6MHVg9ZTJ96un8+HX
ojPHou837DgnREjhzgO8vyLEdF87/pIR/33PsRwo6xH/yNvShonKQde6ErOh
OCozs9OnDQ9q3kPJAtmQIxhVe46xDcuuPm0xEs2CWLBf+0vTins6fQ1Mb2SA
48sLGoEbTRjdZEu0LE+BC+2FxFxKHT6gSHXJQCcOKIw1p0tS6nD78oxZHGMc
BMh3SFc+q8OHdAT+eup/BErR/L2Wxa94V9aVu26ssRAQLeDzY6sWk7PdbC57
RgHlWcQyL1sNVrjdEjKNwyAgMWVHsK8aZ/kFyxuKhsGF4cK9opHV+MBUT0pJ
XCgE3OoQuMRbjYeWyX5Nb9+D1Pndj9RFqvATq+G2z6YhcGTXxhs+70qsefr5
PVM+f7BwZIs/u78S0+kPKnjI+EHD4plyCP2CM/uUYqTVfcGi99nio/gKvGh2
yDsgxhsaEskP3peWYU3LLJWvt98AD8eGeQKU4WXvvR5TXp5g6cPml/u1FLsP
GR9Pr/IAHvMbpJaOzzhB8lgcC3IHS1l8gn62GOMSB3cbIxdoyCPLs5oVYxfN
KHol29fAw7+hSVwrwi5V0r1jx52hYc/Z4Es0RdhkxXx+LNQBeAYS/lgfKsD7
1gtWaNttwEoFs3rE5eO5RGk3y0/W0IjJp0IE8nFVAx7nD7cCqxS2pzliefiJ
/RcuNUcLeDe9N7Q1NAe3bHLjWOkXMHLQdqQgJRt/X1E193llAkJKY4KRJVnY
YKtf3OTrM6hOKiozGMjArZK/Z/Z4GQBT91G6G7PpONvIa7h5Ww/UaX1uiG+l
4b/p5mMuLrrw64n26A53Kt58oHqoKe8xyAQ3nJw6lYKvervGVlRqw1uSmGWL
bDL2fH3wZLukJhw9SmD48DgRZ1Tfisu3fQDGquY3X5sn4Hf71/zc5e9BsRM5
Qt8tHuu/uh4pe1INoj/rPNC78hFbKO87PfVeFcQ5JGbPGMdg64b+vQO7rkOT
NaPTf75RWN6d7lRcsTI87R7a35T9AQ/bBgVIRynAH7G8hLD2cCyf4ng2s0QO
goI9JXWXQjGFO0R4hEMWTvxSbxBlfY+HHs/ZMJ2RAqx6+tG2RAg24qRXnC6R
gPvZNAsN94Ow7+XvoUafzgCZI4daeMkP+9audB4/JQS7e+4L1kp4Y5GZ9NeN
g3xwIWRHRcvOEy/PVOk6t3OD4c00i7VyV/yj/WzXnjRWEOFKOHN0xwG/ZFSO
snFmBO93Kw6331hhl8OaKuJ3N2VbD/sEEA4bY1b8lJtWZVKWmahxrf/OfRzZ
Pkx6zY9lf/a8JtrLyQL1j8aNa1F+srQM/tlNpU9BktnipfVsj2wSo/Wegh4z
yMtuu+FXvCSrHMBHclG1A23GiSJXGxqYZe20Uq1/DRH3JzSoA/dDnQqJjSnO
Hap4V32esnBCRCDHopWmF1xdLpda2UeEZ52mjWROX9AudxZnWBaAi+x1ifI9
AfDRpFrMuOgUMGQx4e4rweDlWhO1P0sMTG9cFGEUfAddaCqOZf4c9C3of5Cm
D4XPlo0nKmOkAQUFM7ykhMEh/2KuXToI0s5+sUyoigBipNFjguBlsLdiU93l
HA2hT+bzXLSvAoUdlctoxgIVN6liq1UFUsiSbBeOxMHht688ki/eAianJ64m
W/Gw01khViB5F6pvrJ/3nE2ApsSpi1xa98GWx38hdiARnIJJus/iHsIo/vyo
syQZgms8OBrsteB9kCrLz5QU+ON+/vYc42O48mSigT4sFaIL6VINnz6BPBrm
c1JW6SAjl+oOoAduiobMcWeyYZiwj/p5nDG0DHD70UrkQOvgJTGy63NgN+0k
GJ7/BFRqsT4llqZwtzl25+DHXIjksu1/pGAOUyu71oeT80F/YGJmttwadldO
FAYKFsDPPumjDxZsQPQttpBLLwDOdKEff07YgR239UJSViGo1bRLUIrtYbfi
6KRJQTHkzUVpJhxygdP7yxOPSJaAU1HK1/xuF1AbCH3SXlwC0UZOdiMhrhD9
4vqwWNlnaPIJKPc67A6iYcXdf0hlsFYJJUTtN3B32q/Gq60SXKaGPSzT/MEu
z9BV6hYGLcVUnwtJARDjIA9zHRj8/GUGOZMCYYXgqJVqTILF5/qZ7P1BIBN9
dmC3aRUInC0fb94Ogfba6G8dVjVw9oOHTH1aOIyf9PmUUVQDQu8a9nkoR8Bq
gG2A+1oNNLkuu6v+iABO9Tsqkna1QHNpQ3vvmUh4Ok9oiHD4CtrCze3C/dGw
ym6JddzqoddSuc1RMR4eEppiKJX1cEec48dAbDyUb/A6Gm7VQ5XaScrhP/Hg
Rm678NKqAexL2JxUcxNgf7xQvrNBI2jsZkSmJ5NASGQ8KeZaM3wbfkwToZQK
AUek3IlezeCddf/M5ZxUWGIKepJc0wwSQwHQdTANPi9d4smWaQFD7TrqhNk0
UCz5EF5xuhUuLNxm34zOgMfyt33ILO3wTpps914kB2rF04x0brbDW671Mv+E
HBDk31Gi+LaD2cN7IyZcn2DdvdfVmuYbBDg+15ujy4VKAw9ZJ4dvsPTUOaxg
Mxeui4yW+L3ogEAlMmfpVj4YlIRnZN7uAqlnr8Ii1ErA54Rhp41FF/ikabHt
SyyBnA/nNuXe/eNGqTuElRJYd+i52t/dBRHGJjzB7z/DW8Q6Q/ewG6Ztihx/
DZdCZmOAoLZ2D9zJvV1B8a6AX2TPJGaTPhBR6+FT5asCthv3Wsi+fVDjdFTq
pVoVXKg8vpqS1Qd5RtyeXe5V4BpXc/nSQh+EvT5dpT9ZBSz61JRn5v3/clPQ
mJtZDRILjsQa2wFI5JfnHlOohVdUVrHWHmQIvvmyPiO9HnyuxLinJpH/+ek7
dXKsHiKD6owGasnQnNHXOsPZAGW8XOKX6IdAbpvqt7B3A2yiynq6N0Mw4RqW
XPq8ERxdGZfeeQ3DHs7WwH/rApxpYi7n+3yH5pdGb1k42kGeRtfKtmEM3k8J
e7bWdIH2rk4Bh74x+O45WSA92QUOzHIDzlNjMLXpxFzH0A2FPEdl39CNw1GD
62qi17qBX5pMCEXjcFnu4Y5aZzcwWqlF5X8eB93dF5cmp3ugbfJy9XwaBX5P
H5EROdEP6o3HmfW8J0H7m4Gp/H9DkNMyqZ31YRIKeFbMTpwcBrpvKdmr6ZOQ
959yuOi9YcjtPXHds2kSEl9cvxmfPQwMEyJvUvZMgRp76XOWxyNQ+Fdi+4f/
FFB7iGoJN38HJgnFHy9CpkHmpcJubq0xqI3VJ9lGzcB/NTamI04TgKTAUNpo
Hio3Pv0r4zmI7k/XnAv6Bd69WmrrAktQHbUSqBK2DMUhw7y54b/BrMq7kv7V
KnA9kKkhim3CFVMd2zsea7DAG3/oZO4OpDu5Cq8/3wAjpiOtk0k0qGELFRFU
NoH32QlhuWh6dIAaNWaqbUPe2QUDZdZdaNzItz/1wl94nTNH99FnL1oU3lN6
mI8KxS0FOngoMaMWjY9mXPzUiOo3H7uIDguaLxvgr2GnQewmpTls5mwocUQ8
rvgQLTqveeJ+bPtBFCMuwXmfiQ6V8m6zTfBxoTWgdRD+jw4FBzInhrw9jCb2
Lydco2JApj3Wcq2IBx084NXAvsyAHN7IadFb8aLA83zmN9YY0ITaujyLPS9i
1MZcnpsMyGPfZUVeF160lbFuvEpDQPqK0R/BjxeNKhjt62IloLT6e5m+Sbwo
3e7qnSBJApI+OMmj3sOLZEb3DO1+RUDhZCubxvNEVMSQ5iHvRECFoj8W/lz6
t+9PKZyydyUgBrMld2EFIiLaOzrPeBOQatFX2pBbRMTANs/bEElAOnesNZ4/
I6Jvym36nhUE5N/7S/d+FBFdNTVm+kIiILqF6uSIeCKqfs9QslpLQLlLQnRD
qf/0xmQZ9VoJKPNLxUGDQiKKdPiUIT9CQHxG0yFerUTEmnBdzX6cgJTGjEo7
u4jIr2F6K2+KgD4quWzzDBKRMzvvDeIiAS33mPWXTRHRunTF74crBPRz56r5
7nkiMnv6MDZonYC4D5YKPFohotm3q0oNWwTkxlm5kfWHiP7vD0H//4f8D/sn
edk=
     "]], LineBox[CompressedData["
1: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
ZIaGpA==
     "]], LineBox[CompressedData["
1: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
jseBAw==
     "]], LineBox[CompressedData["
1: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
bWE=
     "]], LineBox[CompressedData["
1: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
FZLJ
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-3, 3}, {0., 26.999997795918418`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6257320979882393`*^9, 3.625732130020071*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       SuperscriptBox["t", 
        RowBox[{"1", "/", "2"}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{
        SuperscriptBox["t", 
         RowBox[{"1", "/", "2"}]], "+", ".5"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.626677714660096*^9, 3.626677835113986*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
gHk=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
i9g=
     "]]}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{0., 1.}, {0., 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6266777648229656`*^9, {3.6266777982718782`*^9, 3.626677836047039*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eq1", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"m", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], " ", "\[Equal]", " ", 
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"y", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}], 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], " ", "+", " ", 
     SubscriptBox["F", "x1"], " ", "+", 
     SubscriptBox["F", "x2"], " ", "+", 
     SubscriptBox["F", "x3"], " ", "+", 
     SubscriptBox["F", "x4"]}]}], "/.", "rules"}]}]], "Input",
 CellChangeTimes->{{3.6271051504494157`*^9, 3.6271051509184427`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2050.`", " ", 
   RowBox[{
    SuperscriptBox["x", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"(", 
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            RowBox[{
             RowBox[{"80000.`", " ", 
              RowBox[{"Tan", "[", 
               RowBox[{"0.11000000000000001`", "\[VeryThinSpace]", "-", 
                RowBox[{"0.1`", " ", 
                 RowBox[{
                  SubscriptBox["e", "y"], "[", "t", "]"}]}], "-", 
                RowBox[{"1.1`", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
                   RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], 
                "-", 
                RowBox[{"1.1`", " ", 
                 RowBox[{
                  SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], "-", 
                FractionBox[
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                  RowBox[{"1.43`", " ", 
                   RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                 RowBox[{
                  SuperscriptBox["x", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}]]}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"26562.30730824542`", " ", 
                SuperscriptBox[
                 RowBox[{"Tan", "[", 
                  RowBox[{"0.11000000000000001`", "\[VeryThinSpace]", "-", 
                   RowBox[{"0.1`", " ", 
                    RowBox[{
                    SubscriptBox["e", "y"], "[", "t", "]"}]}], "-", 
                   RowBox[{"1.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
                    RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], 
                   "-", 
                   RowBox[{"1.1`", " ", 
                    RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], "-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                    RowBox[{"1.43`", " ", 
                    RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                    RowBox[{
                    SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]]}], "]"}], 
                 "3"]}], ")"}], "/", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                   ")"}], "2"]}], ")"}], "2"]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"79843.30750901357`", " ", 
                RowBox[{"Abs", "[", 
                 RowBox[{"Tan", "[", 
                  RowBox[{"0.11000000000000001`", "\[VeryThinSpace]", "-", 
                   RowBox[{"0.1`", " ", 
                    RowBox[{
                    SubscriptBox["e", "y"], "[", "t", "]"}]}], "-", 
                   RowBox[{"1.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
                    RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], 
                   "-", 
                   RowBox[{"1.1`", " ", 
                    RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], "-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                    RowBox[{"1.43`", " ", 
                    RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                    RowBox[{
                    SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]]}], "]"}], 
                 "]"}], " ", 
                RowBox[{"Tan", "[", 
                 RowBox[{"0.11000000000000001`", "\[VeryThinSpace]", "-", 
                  RowBox[{"0.1`", " ", 
                   RowBox[{
                    SubscriptBox["e", "y"], "[", "t", "]"}]}], "-", 
                  RowBox[{"1.1`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
                    RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], 
                  "-", 
                  RowBox[{"1.1`", " ", 
                   RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], "-", 
                  FractionBox[
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                    RowBox[{"1.43`", " ", 
                    RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                   RowBox[{
                    SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]]}], "]"}]}], 
               ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}], "2"]}], ")"}]}], ")"}]}]}], 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"-", "0.11000000000000001`"}], "+", 
               RowBox[{"0.1`", " ", 
                RowBox[{
                 SubscriptBox["e", "y"], "[", "t", "]"}]}], "+", 
               RowBox[{"1.1`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
                  RowBox[{
                   SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], 
               "+", 
               RowBox[{"1.1`", " ", 
                RowBox[{
                 SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], "+", 
               FractionBox[
                RowBox[{
                 RowBox[{
                  SuperscriptBox["y", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "+", 
                 RowBox[{"1.43`", " ", 
                  RowBox[{
                   SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                RowBox[{
                 SuperscriptBox["x", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]]}], "]"}], "<", 
             RowBox[{"ArcTan", "[", 
              RowBox[{"1.0019625`", " ", 
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}], "2"]}], ")"}]}]}], "]"}]}]},
           {
            RowBox[{
             RowBox[{"-", "26719.`"}], " ", 
             RowBox[{"Sign", "[", 
              RowBox[{
               RowBox[{"-", "0.11000000000000001`"}], "+", 
               RowBox[{"0.1`", " ", 
                RowBox[{
                 SubscriptBox["e", "y"], "[", "t", "]"}]}], "+", 
               RowBox[{"1.1`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
                  RowBox[{
                   SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], 
               "+", 
               RowBox[{"1.1`", " ", 
                RowBox[{
                 SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], "+", 
               FractionBox[
                RowBox[{
                 RowBox[{
                  SuperscriptBox["y", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "+", 
                 RowBox[{"1.43`", " ", 
                  RowBox[{
                   SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                RowBox[{
                 SuperscriptBox["x", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]]}], "]"}], " ", 
             RowBox[{"\[Sqrt]", 
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                   RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                   RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                   RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                  ")"}], "2"]}], ")"}]}]}], 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"-", "0.11000000000000001`"}], "+", 
               RowBox[{"0.1`", " ", 
                RowBox[{
                 SubscriptBox["e", "y"], "[", "t", "]"}]}], "+", 
               RowBox[{"1.1`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
                  RowBox[{
                   SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], 
               "+", 
               RowBox[{"1.1`", " ", 
                RowBox[{
                 SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], "+", 
               FractionBox[
                RowBox[{
                 RowBox[{
                  SuperscriptBox["y", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "+", 
                 RowBox[{"1.43`", " ", 
                  RowBox[{
                   SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                RowBox[{
                 SuperscriptBox["x", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]]}], "]"}], 
             "\[GreaterEqual]", 
             RowBox[{"ArcTan", "[", 
              RowBox[{"1.0019625`", " ", 
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}], "2"]}], ")"}]}]}], "]"}]}]},
           {"0", 
            TagBox["True",
             "PiecewiseDefault",
             AutoDelete->True]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ")"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"0.11000000000000001`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.1`", " ", 
       RowBox[{
        SubscriptBox["e", "y"], "[", "t", "]"}]}], "-", 
      RowBox[{"1.1`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
         RowBox[{
          SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], "-", 
      RowBox[{"1.1`", " ", 
       RowBox[{
        SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}]}], "]"}]}], "+", 
   RowBox[{"42590.`", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "0.1`"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}], 
         "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}]}], 
        ")"}]}], "-", 
      RowBox[{"0.5`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}], 
         "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.5`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}], 
         "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.1`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}], 
         "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}],
    "+", 
   RowBox[{"53438.`", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"0.11000000000000001`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.1`", " ", 
       RowBox[{
        SubscriptBox["e", "y"], "[", "t", "]"}]}], "-", 
      RowBox[{"1.1`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
         RowBox[{
          SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], "-", 
      RowBox[{"1.1`", " ", 
       RowBox[{
        SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}]}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "0.1`"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}], 
         "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}]}], 
        ")"}]}], "-", 
      RowBox[{"0.5`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}], 
         "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.5`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}], 
         "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.1`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}], 
         "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}],
    "+", 
   RowBox[{"2050.`", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Psi]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}]}]], "Output",
 CellChangeTimes->{3.6271051718516397`*^9, 3.627106024089385*^9, 
  3.6271061782822046`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eq2", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"m", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"y", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], " ", "\[Equal]", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "m"}], " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}], " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], " ", "+", " ", 
     SubscriptBox["F", "y1"], "+", " ", 
     SubscriptBox["F", "y2"], "+", " ", 
     SubscriptBox["F", "y3"], "+", " ", 
     SubscriptBox["F", "y4"]}]}], "/.", "rules"}]}]], "Input",
 CellChangeTimes->{{3.6271051504494157`*^9, 3.6271051554887037`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2050.`", " ", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
  RowBox[{"0.`", "\[VeryThinSpace]", "+", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            RowBox[{
             RowBox[{
              RowBox[{"-", "80000.`"}], " ", 
              RowBox[{"Tan", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{
                  SuperscriptBox["y", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "+", 
                 RowBox[{"1.43`", " ", 
                  RowBox[{
                   SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                RowBox[{
                 SuperscriptBox["x", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]], "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"41816.81081409353`", " ", 
                SuperscriptBox[
                 RowBox[{"Tan", "[", 
                  FractionBox[
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                    RowBox[{"1.43`", " ", 
                    RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                   RowBox[{
                    SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]], "]"}], "3"]}],
                ")"}], "/", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                   ")"}], "2"]}], ")"}], "2"]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"100180.0109571887`", " ", 
                RowBox[{"Abs", "[", 
                 RowBox[{"Tan", "[", 
                  FractionBox[
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                    RowBox[{"1.43`", " ", 
                    RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                   RowBox[{
                    SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]], "]"}], "]"}], 
                " ", 
                RowBox[{"Tan", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                   RowBox[{"1.43`", " ", 
                    RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                  RowBox[{
                   SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]], "]"}]}], 
               ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}], "2"]}], ")"}]}], ")"}]}]}], 
            RowBox[{
             RowBox[{"Abs", "[", 
              FractionBox[
               RowBox[{
                RowBox[{
                 SuperscriptBox["y", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}], "+", 
                RowBox[{"1.43`", " ", 
                 RowBox[{
                  SuperscriptBox["\[Psi]", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}]}]}], 
               RowBox[{
                SuperscriptBox["x", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}]], "]"}], "<", 
             RowBox[{"ArcTan", "[", 
              RowBox[{"0.7985625000000001`", " ", 
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}], "2"]}], ")"}]}]}], "]"}]}]},
           {
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", 
               RowBox[{"Sign", "[", 
                RowBox[{
                 SuperscriptBox["x", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}], "]"}]]}], 
             "21295.`", " ", 
             RowBox[{"Sign", "[", 
              RowBox[{
               RowBox[{
                SuperscriptBox["y", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}], "+", 
               RowBox[{"1.43`", " ", 
                RowBox[{
                 SuperscriptBox["\[Psi]", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}]}], "]"}], " ", 
             RowBox[{"\[Sqrt]", 
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                   RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                   RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                   RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                  ")"}], "2"]}], ")"}]}]}], 
            RowBox[{
             RowBox[{"Abs", "[", 
              FractionBox[
               RowBox[{
                RowBox[{
                 SuperscriptBox["y", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}], "+", 
                RowBox[{"1.43`", " ", 
                 RowBox[{
                  SuperscriptBox["\[Psi]", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}]}]}], 
               RowBox[{
                SuperscriptBox["x", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}]], "]"}], 
             "\[GreaterEqual]", 
             RowBox[{"ArcTan", "[", 
              RowBox[{"0.7985625000000001`", " ", 
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}], "2"]}], ")"}]}]}], "]"}]}]},
           {"0", 
            TagBox["True",
             "PiecewiseDefault",
             AutoDelete->True]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ")"}]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"0.11000000000000001`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.1`", " ", 
       RowBox[{
        SubscriptBox["e", "y"], "[", "t", "]"}]}], "-", 
      RowBox[{"1.1`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
         RowBox[{
          SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], "-", 
      RowBox[{"1.1`", " ", 
       RowBox[{
        SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}]}], "]"}], " ", 
    RowBox[{"(", 
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            RowBox[{
             RowBox[{"80000.`", " ", 
              RowBox[{"Tan", "[", 
               RowBox[{"0.11000000000000001`", "\[VeryThinSpace]", "-", 
                RowBox[{"0.1`", " ", 
                 RowBox[{
                  SubscriptBox["e", "y"], "[", "t", "]"}]}], "-", 
                RowBox[{"1.1`", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
                   RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], 
                "-", 
                RowBox[{"1.1`", " ", 
                 RowBox[{
                  SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], "-", 
                FractionBox[
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                  RowBox[{"1.43`", " ", 
                   RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                 RowBox[{
                  SuperscriptBox["x", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}]]}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"26562.30730824542`", " ", 
                SuperscriptBox[
                 RowBox[{"Tan", "[", 
                  RowBox[{"0.11000000000000001`", "\[VeryThinSpace]", "-", 
                   RowBox[{"0.1`", " ", 
                    RowBox[{
                    SubscriptBox["e", "y"], "[", "t", "]"}]}], "-", 
                   RowBox[{"1.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
                    RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], 
                   "-", 
                   RowBox[{"1.1`", " ", 
                    RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], "-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                    RowBox[{"1.43`", " ", 
                    RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                    RowBox[{
                    SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]]}], "]"}], 
                 "3"]}], ")"}], "/", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                   ")"}], "2"]}], ")"}], "2"]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"79843.30750901357`", " ", 
                RowBox[{"Abs", "[", 
                 RowBox[{"Tan", "[", 
                  RowBox[{"0.11000000000000001`", "\[VeryThinSpace]", "-", 
                   RowBox[{"0.1`", " ", 
                    RowBox[{
                    SubscriptBox["e", "y"], "[", "t", "]"}]}], "-", 
                   RowBox[{"1.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
                    RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], 
                   "-", 
                   RowBox[{"1.1`", " ", 
                    RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], "-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                    RowBox[{"1.43`", " ", 
                    RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                    RowBox[{
                    SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]]}], "]"}], 
                 "]"}], " ", 
                RowBox[{"Tan", "[", 
                 RowBox[{"0.11000000000000001`", "\[VeryThinSpace]", "-", 
                  RowBox[{"0.1`", " ", 
                   RowBox[{
                    SubscriptBox["e", "y"], "[", "t", "]"}]}], "-", 
                  RowBox[{"1.1`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
                    RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], 
                  "-", 
                  RowBox[{"1.1`", " ", 
                   RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], "-", 
                  FractionBox[
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                    RowBox[{"1.43`", " ", 
                    RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                   RowBox[{
                    SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]]}], "]"}]}], 
               ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}], "2"]}], ")"}]}], ")"}]}]}], 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"-", "0.11000000000000001`"}], "+", 
               RowBox[{"0.1`", " ", 
                RowBox[{
                 SubscriptBox["e", "y"], "[", "t", "]"}]}], "+", 
               RowBox[{"1.1`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
                  RowBox[{
                   SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], 
               "+", 
               RowBox[{"1.1`", " ", 
                RowBox[{
                 SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], "+", 
               FractionBox[
                RowBox[{
                 RowBox[{
                  SuperscriptBox["y", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "+", 
                 RowBox[{"1.43`", " ", 
                  RowBox[{
                   SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                RowBox[{
                 SuperscriptBox["x", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]]}], "]"}], "<", 
             RowBox[{"ArcTan", "[", 
              RowBox[{"1.0019625`", " ", 
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}], "2"]}], ")"}]}]}], "]"}]}]},
           {
            RowBox[{
             RowBox[{"-", "26719.`"}], " ", 
             RowBox[{"Sign", "[", 
              RowBox[{
               RowBox[{"-", "0.11000000000000001`"}], "+", 
               RowBox[{"0.1`", " ", 
                RowBox[{
                 SubscriptBox["e", "y"], "[", "t", "]"}]}], "+", 
               RowBox[{"1.1`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
                  RowBox[{
                   SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], 
               "+", 
               RowBox[{"1.1`", " ", 
                RowBox[{
                 SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], "+", 
               FractionBox[
                RowBox[{
                 RowBox[{
                  SuperscriptBox["y", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "+", 
                 RowBox[{"1.43`", " ", 
                  RowBox[{
                   SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                RowBox[{
                 SuperscriptBox["x", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]]}], "]"}], " ", 
             RowBox[{"\[Sqrt]", 
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                   RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                   RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                   RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                  ")"}], "2"]}], ")"}]}]}], 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{
               RowBox[{"-", "0.11000000000000001`"}], "+", 
               RowBox[{"0.1`", " ", 
                RowBox[{
                 SubscriptBox["e", "y"], "[", "t", "]"}]}], "+", 
               RowBox[{"1.1`", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
                  RowBox[{
                   SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], 
               "+", 
               RowBox[{"1.1`", " ", 
                RowBox[{
                 SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], "+", 
               FractionBox[
                RowBox[{
                 RowBox[{
                  SuperscriptBox["y", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "+", 
                 RowBox[{"1.43`", " ", 
                  RowBox[{
                   SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                RowBox[{
                 SuperscriptBox["x", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]]}], "]"}], 
             "\[GreaterEqual]", 
             RowBox[{"ArcTan", "[", 
              RowBox[{"1.0019625`", " ", 
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}], "2"]}], ")"}]}]}], "]"}]}]},
           {"0", 
            TagBox["True",
             "PiecewiseDefault",
             AutoDelete->True]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ")"}]}], "+", 
   RowBox[{"53438.`", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"0.11000000000000001`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.1`", " ", 
       RowBox[{
        SubscriptBox["e", "y"], "[", "t", "]"}]}], "-", 
      RowBox[{"1.1`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
         RowBox[{
          SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], "-", 
      RowBox[{"1.1`", " ", 
       RowBox[{
        SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}]}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "0.1`"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}], 
         "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}]}], 
        ")"}]}], "-", 
      RowBox[{"0.5`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}], 
         "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.5`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}], 
         "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"0.1`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "-", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}], 
         "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"Tanh", "[", 
             RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}],
    "-", 
   RowBox[{"2050.`", " ", 
    RowBox[{
     SuperscriptBox["x", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Psi]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}]}]], "Output",
 CellChangeTimes->{3.6271061990353913`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eq3", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["J", "z"], 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], " ", "\[Equal]", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["l", "f"], 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["F", "y1"], " ", "+", " ", 
        SubscriptBox["F", "y2"]}], ")"}]}], " ", "-", " ", 
     RowBox[{
      SubscriptBox["l", "r"], "*", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["F", "y3"], " ", "+", " ", 
        SubscriptBox["F", "y4"]}], ")"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Omega]", "t"], "/", "2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SubscriptBox["F", "x1"]}], " ", "+", " ", 
        SubscriptBox["F", "x2"], " ", "-", " ", 
        SubscriptBox["F", "x3"], " ", "+", " ", 
        SubscriptBox["F", "x4"]}], ")"}]}]}]}], "/.", "rules"}]}]], "Input",
 CellChangeTimes->{{3.6271051504494157`*^9, 3.627105159629941*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"3344.`", " ", 
   RowBox[{
    SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
  RowBox[{"0.`", "\[VeryThinSpace]", "-", 
   RowBox[{"1.47`", " ", 
    RowBox[{"(", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {
               RowBox[{
                RowBox[{
                 RowBox[{"-", "80000.`"}], " ", 
                 RowBox[{"Tan", "[", 
                  FractionBox[
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                    RowBox[{"1.43`", " ", 
                    RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                   RowBox[{
                    SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]], "]"}]}], "-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"41816.81081409353`", " ", 
                   SuperscriptBox[
                    RowBox[{"Tan", "[", 
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                    RowBox[{"1.43`", " ", 
                    RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                    RowBox[{
                    SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]], "]"}], "3"]}],
                   ")"}], "/", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}], "2"]}], ")"}], "2"]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"100180.0109571887`", " ", 
                   RowBox[{"Abs", "[", 
                    RowBox[{"Tan", "[", 
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                    RowBox[{"1.43`", " ", 
                    RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                    RowBox[{
                    SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]], "]"}], "]"}], 
                   " ", 
                   RowBox[{"Tan", "[", 
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                    RowBox[{"1.43`", " ", 
                    RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                    RowBox[{
                    SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]], "]"}]}], 
                  ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"\[Sqrt]", 
                   RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}], "2"]}], ")"}]}], ")"}]}]}], 
               RowBox[{
                RowBox[{"Abs", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                   RowBox[{"1.43`", " ", 
                    RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                  RowBox[{
                   SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]], "]"}], "<", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{"0.7985625000000001`", " ", 
                  RowBox[{"\[Sqrt]", 
                   RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}], "2"]}], ")"}]}]}], "]"}]}]},
              {
               RowBox[{
                RowBox[{"-", 
                 FractionBox["1", 
                  RowBox[{"Sign", "[", 
                   RowBox[{
                    SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "]"}]]}], 
                "21295.`", " ", 
                RowBox[{"Sign", "[", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                  RowBox[{"1.43`", " ", 
                   RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], "]"}], " ", 
                RowBox[{"\[Sqrt]", 
                 RowBox[{"(", 
                  RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}], "2"]}], ")"}]}]}], 
               RowBox[{
                RowBox[{"Abs", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                   RowBox[{"1.43`", " ", 
                    RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                  RowBox[{
                   SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]], "]"}], 
                "\[GreaterEqual]", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{"0.7985625000000001`", " ", 
                  RowBox[{"\[Sqrt]", 
                   RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}], "2"]}], ")"}]}]}], "]"}]}]},
              {"0", 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{1.}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}},
             Selectable->True]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False], ")"}]}]}], ")"}]}], "+", 
   RowBox[{"1.43`", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"0.11000000000000001`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.1`", " ", 
          RowBox[{
           SubscriptBox["e", "y"], "[", "t", "]"}]}], "-", 
         RowBox[{"1.1`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
            RowBox[{
             SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], "-", 
         RowBox[{"1.1`", " ", 
          RowBox[{
           SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}]}], "]"}], " ", 
       RowBox[{"(", 
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {
               RowBox[{
                RowBox[{"80000.`", " ", 
                 RowBox[{"Tan", "[", 
                  RowBox[{"0.11000000000000001`", "\[VeryThinSpace]", "-", 
                   RowBox[{"0.1`", " ", 
                    RowBox[{
                    SubscriptBox["e", "y"], "[", "t", "]"}]}], "-", 
                   RowBox[{"1.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
                    RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], 
                   "-", 
                   RowBox[{"1.1`", " ", 
                    RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], "-", 
                   FractionBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                    RowBox[{"1.43`", " ", 
                    RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                    RowBox[{
                    SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]]}], "]"}]}], 
                "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"26562.30730824542`", " ", 
                   SuperscriptBox[
                    RowBox[{"Tan", "[", 
                    RowBox[{"0.11000000000000001`", "\[VeryThinSpace]", "-", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{
                    SubscriptBox["e", "y"], "[", "t", "]"}]}], "-", 
                    RowBox[{"1.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
                    RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], 
                    "-", 
                    RowBox[{"1.1`", " ", 
                    RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], "-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                    RowBox[{"1.43`", " ", 
                    RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                    RowBox[{
                    SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]]}], "]"}], 
                    "3"]}], ")"}], "/", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}], "2"]}], ")"}], "2"]}], "-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"79843.30750901357`", " ", 
                   RowBox[{"Abs", "[", 
                    RowBox[{"Tan", "[", 
                    RowBox[{"0.11000000000000001`", "\[VeryThinSpace]", "-", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{
                    SubscriptBox["e", "y"], "[", "t", "]"}]}], "-", 
                    RowBox[{"1.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
                    RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], 
                    "-", 
                    RowBox[{"1.1`", " ", 
                    RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], "-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                    RowBox[{"1.43`", " ", 
                    RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                    RowBox[{
                    SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]]}], "]"}], 
                    "]"}], " ", 
                   RowBox[{"Tan", "[", 
                    RowBox[{"0.11000000000000001`", "\[VeryThinSpace]", "-", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{
                    SubscriptBox["e", "y"], "[", "t", "]"}]}], "-", 
                    RowBox[{"1.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
                    RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], 
                    "-", 
                    RowBox[{"1.1`", " ", 
                    RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], "-", 
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                    RowBox[{"1.43`", " ", 
                    RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                    RowBox[{
                    SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]]}], "]"}]}], 
                  ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"\[Sqrt]", 
                   RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}], "2"]}], ")"}]}], ")"}]}]}], 
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"-", "0.11000000000000001`"}], "+", 
                  RowBox[{"0.1`", " ", 
                   RowBox[{
                    SubscriptBox["e", "y"], "[", "t", "]"}]}], "+", 
                  RowBox[{"1.1`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
                    RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], 
                  "+", 
                  RowBox[{"1.1`", " ", 
                   RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], "+", 
                  FractionBox[
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                    RowBox[{"1.43`", " ", 
                    RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                   RowBox[{
                    SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]]}], "]"}], "<", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{"1.0019625`", " ", 
                  RowBox[{"\[Sqrt]", 
                   RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}], "2"]}], ")"}]}]}], "]"}]}]},
              {
               RowBox[{
                RowBox[{"-", "26719.`"}], " ", 
                RowBox[{"Sign", "[", 
                 RowBox[{
                  RowBox[{"-", "0.11000000000000001`"}], "+", 
                  RowBox[{"0.1`", " ", 
                   RowBox[{
                    SubscriptBox["e", "y"], "[", "t", "]"}]}], "+", 
                  RowBox[{"1.1`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
                    RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], 
                  "+", 
                  RowBox[{"1.1`", " ", 
                   RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], "+", 
                  FractionBox[
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                    RowBox[{"1.43`", " ", 
                    RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                   RowBox[{
                    SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]]}], "]"}], " ", 
                RowBox[{"\[Sqrt]", 
                 RowBox[{"(", 
                  RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}], "2"]}], ")"}]}]}], 
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"-", "0.11000000000000001`"}], "+", 
                  RowBox[{"0.1`", " ", 
                   RowBox[{
                    SubscriptBox["e", "y"], "[", "t", "]"}]}], "+", 
                  RowBox[{"1.1`", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
                    RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], 
                  "+", 
                  RowBox[{"1.1`", " ", 
                   RowBox[{
                    SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], "+", 
                  FractionBox[
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["y", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "+", 
                    RowBox[{"1.43`", " ", 
                    RowBox[{
                    SuperscriptBox["\[Psi]", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}]}], 
                   RowBox[{
                    SuperscriptBox["x", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]]}], "]"}], 
                "\[GreaterEqual]", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{"1.0019625`", " ", 
                  RowBox[{"\[Sqrt]", 
                   RowBox[{"(", 
                    RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.1`"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "-", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
                    ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"0.1`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "-", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
                     "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Tanh", "[", 
                    RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    ")"}], "2"]}], ")"}]}]}], "]"}]}]},
              {"0", 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{1.}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}},
             Selectable->True]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False], ")"}]}], "+", 
      RowBox[{"53438.`", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"0.11000000000000001`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.1`", " ", 
          RowBox[{
           SubscriptBox["e", "y"], "[", "t", "]"}]}], "-", 
         RowBox[{"1.1`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Psi]", "[", "t", "]"}], "-", 
            RowBox[{
             SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}], ")"}]}], "-", 
         RowBox[{"1.1`", " ", 
          RowBox[{
           SubscriptBox["e", "\[Psi]"], "[", "t", "]"}]}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.1`"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", 
               RowBox[{"Tanh", "[", 
                RowBox[{"20", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "35"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
             "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"Tanh", "[", 
                RowBox[{"20", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "30"}], "+", "t"}], ")"}]}], "]"}]}], 
              ")"}]}]}], ")"}]}], "-", 
         RowBox[{"0.5`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", 
               RowBox[{"Tanh", "[", 
                RowBox[{"20", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "25"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
             "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"Tanh", "[", 
                RowBox[{"20", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "20"}], "+", "t"}], ")"}]}], "]"}]}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.5`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", 
               RowBox[{"Tanh", "[", 
                RowBox[{"20", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "15"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}],
             "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"Tanh", "[", 
                RowBox[{"20", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "10"}], "+", "t"}], ")"}]}], "]"}]}], 
              ")"}]}]}], ")"}]}], "+", 
         RowBox[{"0.1`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "-", 
               RowBox[{"Tanh", "[", 
                RowBox[{"20", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}], 
            "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"Tanh", "[", 
                RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
        ")"}]}]}], ")"}]}]}]}]], "Output",
 CellChangeTimes->{3.627106231373241*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eq4", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["e", "\[Psi]"], "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], "\[Equal]", 
     RowBox[{
      RowBox[{"m", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], "-", 
      RowBox[{"m", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Psi]", "d"], "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}]}]}], "/.", 
    "variableRules2"}], "/.", "rules"}]}]], "Input",
 CellChangeTimes->{{3.6271051504494157`*^9, 3.627105164059194*^9}, 
   3.6271053691309233`*^9, {3.627106269751436*^9, 3.627106319231266*^9}, {
   3.6271074499999423`*^9, 3.6271074755444036`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2050.`", " ", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["e", "\[Psi]"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"2050.`", " ", 
    RowBox[{
     SuperscriptBox["\[Psi]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "-", 
   RowBox[{"2050.`", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Psi]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "-", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["e", "\[Psi]"], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}]}]], "Output",
 CellChangeTimes->{
  3.6271053706720114`*^9, {3.627106262873043*^9, 3.627106320449336*^9}, {
   3.6271074546352077`*^9, 3.627107476664468*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eq5", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["e", "y"], "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], "\[Equal]", 
     RowBox[{
      RowBox[{"m", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"y", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "1"}], "}"}]}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         SubscriptBox["e", "\[Psi]"], "[", "t", "]"}], "]"}]}], " ", "+", " ", 
      RowBox[{"m", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "1"}], "}"}]}], "]"}], 
       RowBox[{"Sin", "[", 
        RowBox[{
         SubscriptBox["e", "\[Psi]"], "[", "t", "]"}], "]"}]}]}]}], "/.", 
    "rules"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.6271051504494157`*^9, 3.6271051674393873`*^9}, {
  3.6271074623196473`*^9, 3.6271074649487977`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"1.`", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{
      SubscriptBox["e", "\[Psi]"], "[", "t", "]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["x", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{"1.`", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{
      SubscriptBox["e", "\[Psi]"], "[", "t", "]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", 
  RowBox[{"1.`", " ", 
   RowBox[{
    SuperscriptBox[
     SubscriptBox["e", "y"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.6271063065245395`*^9, 3.6271074661558666`*^9}]
}, Open  ]]
},
WindowSize->{1264, 685},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
Magnification:>1.4 Inherited,
FrontEndVersion->"10.0 for Microsoft Windows (32-bit) (July 1, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 51390, 1288, 2797, "Input"],
Cell[51973, 1312, 58689, 1123, 395, "Output"],
Cell[110665, 2437, 70929, 1215, 342, "Output"],
Cell[181597, 3654, 101335, 1713, 347, "Output"],
Cell[282935, 5369, 125899, 2115, 374, "Output"],
Cell[408837, 7486, 16151, 298, 344, "Output"],
Cell[424991, 7786, 62169, 1053, 344, "Output"],
Cell[487163, 8841, 55421, 920, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[542621, 9766, 759, 21, 70, "Input"],
Cell[543383, 9789, 30083, 509, 337, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[573503, 10303, 517, 16, 45, "Input"],
Cell[574023, 10321, 5287, 99, 626, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[579347, 10425, 899, 26, 42, "Input"],
Cell[580249, 10453, 38470, 1001, 1637, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[618756, 11459, 926, 27, 42, "Input"],
Cell[619685, 11488, 61991, 1567, 1449, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[681713, 13060, 1148, 35, 42, "Input"],
Cell[682864, 13097, 63451, 1573, 2615, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[746352, 14675, 1009, 29, 42, "Input"],
Cell[747364, 14706, 824, 24, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[748225, 14735, 1116, 33, 42, "Input"],
Cell[749344, 14770, 740, 22, 41, "Output"]
}, Open  ]]
}
]
*)
,
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"2050.`", " ", 
       RowBox[{
        SuperscriptBox["y", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"2050.`", " ", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"3344.`", " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0.`"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "\[Psi]"}], "}"}], ",", "t"}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.6256842612436047`*^9, 3.6256843546740375`*^9, 3.6256844425637636`*^9, 
   3.625684541578928*^9, 3.62568476655726*^9, 3.6256848393619084`*^9, 
   3.625684987031582*^9, {3.6256871258567557`*^9, 3.6256871363967967`*^9}, 
   3.6257214857782536`*^9, 3.625729540639967*^9, 3.6257299095350666`*^9, {
   3.6257310984170666`*^9, 3.6257311222054276`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVjHsw2wcAx1P1aOuO0ocwKZtWpepVsXgmXxXvRyKCaGgrs+p0Xdxsum5l
zlA7VhxVKuyQdQtaU6Oj6rGRIiE/2pu1wjqqLZmuZ2ShxeyPz33u88/nbaGI
+74OiUTy3uJ/i3PbDapEXYxsW7a5Cz2A+SohPoG2b42paFL3DDjmYNSrQ6Lv
aIjlfnb8mLIMSS5ygcJ5L3ze5K4XVNfAvy9CLpJaoFdT1OqrK4FFudVZxoQ1
uu1MtjnrSmHBVUSOUg7Ce/yse1PZTdR+4aRf2nAY2QarPhFuLThhU73Yb2uP
3XUX36vNa4U4kulNSnbEUR11vW99G1o18iM/a5zxrbH6h6w/7kB12VS9XHUM
2piVqGsvOmDFn2a9cKfh2FcvyQcm7+LQKT1djdYNSo8JQ++FexBJZek7quig
tDBFNkM9yDgyG+F22gONqlWY/tkLyUJOL5nihQvXrc3Gxvpg/LJ3jtTlDUrT
wveaxl/AsOOnbs9kILFQdVlc8it+H2fF6pkA7Cuuk+cT+/HPUUNq+TKwNigL
/9JrANdtywJ1HvriTR5RkbRLhqe+Cz2pkuOQlvaYrvbLUKRdTPkwzw8TTosJ
zPz7UBHdopQ4FgKvFn+yRh9EexC3z8/OH8w0uXjv9CCWBKX+DTsC4PRTFyW+
YAhEca3NnscBUM1P/ltiO4zdiQm0nfcCkVxZNt12f3jrN1nyuCoIw6qlJ90n
5QgRHg6+dS4YOa9OPXefk8OiyNrVODwELvPN/XtSFSicepb+sVUo0vCw7aBa
gQK5yKBlMRT6QdQZScII/uLdGL40Ega2pXWuzoMR/L0pfR5SEw4WVbfDyHMU
vAAB/UZWBKplXq876kYhuPXoyXYeG5KJ5b5H66PQnvjmXI0JB8YbjUbrHCXS
mnSztmVzgMUVP0+JEj1XhH1zCxzcntW4nlErcZdhJi6Oj0TnmTHzdjKBTIYD
haqIxPrUkCyDTsBUSZUfp3HRuab4fINDINYhw9TmOy6sVx38D31A4Lzlnbwc
oyhEsTaGki8RCBZwax98GoXi051CWiGB35JZ0fNzUVDmmBnOVRKg6VHezYrg
YWl/M+mjegJ+qWE/TvXw0GspKPBqIEC2nyLsnKKRGVrBjLlJoDudd2ClPBoB
iSLhrq3eV/yOXr5BDGZU+m3eUgI+nhNkcWoMmlPpsyl1BPbfnhlIn4lB8k62
0YVrBNouss2Z3FjwqbFub31NwHa8rjK/MxYn6c/cMj4jEKgNa62w50OWFKRe
ERLwaJ5apV7lY8SAHFcUSoBh/lS7ucnH6ypOXJ0zgf8APJbEDg==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {0., 
                    17077.347631524775`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVjHsw2wcAx1P1aOuO0ocwKZtWpepVsXgmXxXvRyKCaGgrs+p0Xdxsum5l
zlA7VhxVKuyQdQtaU6Oj6rGRIiE/2pu1wjqqLZmuZ2ShxeyPz33u88/nbaGI
+74OiUTy3uJ/i3PbDapEXYxsW7a5Cz2A+SohPoG2b42paFL3DDjmYNSrQ6Lv
aIjlfnb8mLIMSS5ygcJ5L3ze5K4XVNfAvy9CLpJaoFdT1OqrK4FFudVZxoQ1
uu1MtjnrSmHBVUSOUg7Ce/yse1PZTdR+4aRf2nAY2QarPhFuLThhU73Yb2uP
3XUX36vNa4U4kulNSnbEUR11vW99G1o18iM/a5zxrbH6h6w/7kB12VS9XHUM
2piVqGsvOmDFn2a9cKfh2FcvyQcm7+LQKT1djdYNSo8JQ++FexBJZek7quig
tDBFNkM9yDgyG+F22gONqlWY/tkLyUJOL5nihQvXrc3Gxvpg/LJ3jtTlDUrT
wveaxl/AsOOnbs9kILFQdVlc8it+H2fF6pkA7Cuuk+cT+/HPUUNq+TKwNigL
/9JrANdtywJ1HvriTR5RkbRLhqe+Cz2pkuOQlvaYrvbLUKRdTPkwzw8TTosJ
zPz7UBHdopQ4FgKvFn+yRh9EexC3z8/OH8w0uXjv9CCWBKX+DTsC4PRTFyW+
YAhEca3NnscBUM1P/ltiO4zdiQm0nfcCkVxZNt12f3jrN1nyuCoIw6qlJ90n
5QgRHg6+dS4YOa9OPXefk8OiyNrVODwELvPN/XtSFSicepb+sVUo0vCw7aBa
gQK5yKBlMRT6QdQZScII/uLdGL40Ega2pXWuzoMR/L0pfR5SEw4WVbfDyHMU
vAAB/UZWBKplXq876kYhuPXoyXYeG5KJ5b5H66PQnvjmXI0JB8YbjUbrHCXS
mnSztmVzgMUVP0+JEj1XhH1zCxzcntW4nlErcZdhJi6Oj0TnmTHzdjKBTIYD
haqIxPrUkCyDTsBUSZUfp3HRuab4fINDINYhw9TmOy6sVx38D31A4Lzlnbwc
oyhEsTaGki8RCBZwax98GoXi051CWiGB35JZ0fNzUVDmmBnOVRKg6VHezYrg
YWl/M+mjegJ+qWE/TvXw0GspKPBqIEC2nyLsnKKRGVrBjLlJoDudd2ClPBoB
iSLhrq3eV/yOXr5BDGZU+m3eUgI+nhNkcWoMmlPpsyl1BPbfnhlIn4lB8k62
0YVrBNouss2Z3FjwqbFub31NwHa8rjK/MxYn6c/cMj4jEKgNa62w50OWFKRe
ERLwaJ5apV7lY8SAHFcUSoBh/lS7ucnH6ypOXJ0zgf8APJbEDg==
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {0., 
                    17077.347631524775`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"y", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQPad1G/vs/D12DFDwITYm1kT0lz2Mf8565xI2PW4H
GD/F8HT0GQMRON/1oN/p/JVScL7UNPkMu+sKCH7QmcBzsipw/sJqfbbJq9Th
/CjluW+PqGnD+XMC7W0Y0vXg/M3fTmvt+GYA599pF3r9ZbYRnC8fcc/lhYUJ
nK8az8ry7YcpnJ+/8lgZx2xzOL9W67GfaYIlnL/kVcsBCVlrOJ//3YGnDHts
4Hw7jYgC5jo7OP/GJZdwVkEHOP+zDrfmtC8I/iy1Ke5MVxzh/CeOr/YXLHGC
8/t/vM3KaXNG+OfCvvysSBc4f5tH0EFnDVc4/1P0ZNdVHG5w/oUJC5WFbyH4
AomxJpx73ZHMuz3x1mwPON8rSd1zXbYnnC/Vr2DM7+sF5/fcfVZWJO8N53ef
zmff+BbBfxOy7FTNWR84//3/lc+95vnC+SFu0ebLGvzg/Oh1Nx8wh/jD+T+i
erPnCQbA+cVrWBoYmxD8/X1JB5++QvB324nPmRATCOfX2enKap5B8IXOa552
MgmC88N1a4WUlyL4uTLb21r4guF8z+ighZdLEfxr6S6hL58i+CassmYNfiFw
vnOBz4a7+xF8Ce27FzT0Q+H8fWUhcl+nIfiiE5RYO9jD4Hxbq+sScwoQfLFN
j46WPULwt1b6S9oHhcP5apcWzezYheC7//DZPEM7As63XH/3p+ZUBN9O8smP
//8RfADeZs10
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {-1., 1.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQPad1G/vs/D12DFDwITYm1kT0lz2Mf8565xI2PW4H
GD/F8HT0GQMRON/1oN/p/JVScL7UNPkMu+sKCH7QmcBzsipw/sJqfbbJq9Th
/CjluW+PqGnD+XMC7W0Y0vXg/M3fTmvt+GYA599pF3r9ZbYRnC8fcc/lhYUJ
nK8az8ry7YcpnJ+/8lgZx2xzOL9W67GfaYIlnL/kVcsBCVlrOJ//3YGnDHts
4Hw7jYgC5jo7OP/GJZdwVkEHOP+zDrfmtC8I/iy1Ke5MVxzh/CeOr/YXLHGC
8/t/vM3KaXNG+OfCvvysSBc4f5tH0EFnDVc4/1P0ZNdVHG5w/oUJC5WFbyH4
AomxJpx73ZHMuz3x1mwPON8rSd1zXbYnnC/Vr2DM7+sF5/fcfVZWJO8N53ef
zmff+BbBfxOy7FTNWR84//3/lc+95vnC+SFu0ebLGvzg/Oh1Nx8wh/jD+T+i
erPnCQbA+cVrWBoYmxD8/X1JB5++QvB324nPmRATCOfX2enKap5B8IXOa552
MgmC88N1a4WUlyL4uTLb21r4guF8z+ighZdLEfxr6S6hL58i+CassmYNfiFw
vnOBz4a7+xF8Ce27FzT0Q+H8fWUhcl+nIfiiE5RYO9jD4Hxbq+sScwoQfLFN
j46WPULwt1b6S9oHhcP5apcWzezYheC7//DZPEM7As63XH/3p+ZUBN9O8smP
//8RfADeZs10
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {-1., 1.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"\[Psi]", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQPad1G/vs/D12DFDwITYm1kT0lz2Mf8565xI2PW4H
GD/F8HT0GQMRON/1oN/p/JVScL7UNPkMu+sKCH7QmcBzsipw/sJqfbbJq9Th
/CjluW+PqGnD+XMC7W0Y0vXg/M3fTmvt+GYA599pF3r9ZbYRnC8fcc/lhYUJ
nK8az8ry7YcpnJ+/8lgZx2xzOL9W67GfaYIlnL/kVcsBCVlrOJ//3YGnDHts
4Hw7jYgC5jo7OP/GJZdwVkEHOP+zDrfmtC8I/iy1Ke5MVxzh/CeOr/YXLHGC
8/t/vM3KaXNG+OfCvvysSBc4f5tH0EFnDVc4/1P0ZNdVHG5w/oUJC5WFbyH4
AomxJpx73ZHMuz3x1mwPON8rSd1zXbYnnC/Vr2DM7+sF5/fcfVZWJO8N53ef
zmff+BbBfxOy7FTNWR84//3/lc+95vnC+SFu0ebLGvzg/Oh1Nx8wh/jD+T+i
erPnCQbA+cVrWBoYmxD8/X1JB5++QvB324nPmRATCOfX2enKap5B8IXOa552
MgmC88N1a4WUlyL4uTLb21r4guF8z+ighZdLEfxr6S6hL58i+CassmYNfiFw
vnOBz4a7+xF8Ce27FzT0Q+H8fWUhcl+nIfiiE5RYO9jD4Hxbq+sScwoQfLFN
j46WPULwt1b6S9oHhcP5apcWzezYheC7//DZPEM7As63XH/3p+ZUBN9O8smP
//8RfADeZs10
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {-1., 1.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQPad1G/vs/D12DFDwITYm1kT0lz2Mf8565xI2PW4H
GD/F8HT0GQMRON/1oN/p/JVScL7UNPkMu+sKCH7QmcBzsipw/sJqfbbJq9Th
/CjluW+PqGnD+XMC7W0Y0vXg/M3fTmvt+GYA599pF3r9ZbYRnC8fcc/lhYUJ
nK8az8ry7YcpnJ+/8lgZx2xzOL9W67GfaYIlnL/kVcsBCVlrOJ//3YGnDHts
4Hw7jYgC5jo7OP/GJZdwVkEHOP+zDrfmtC8I/iy1Ke5MVxzh/CeOr/YXLHGC
8/t/vM3KaXNG+OfCvvysSBc4f5tH0EFnDVc4/1P0ZNdVHG5w/oUJC5WFbyH4
AomxJpx73ZHMuz3x1mwPON8rSd1zXbYnnC/Vr2DM7+sF5/fcfVZWJO8N53ef
zmff+BbBfxOy7FTNWR84//3/lc+95vnC+SFu0ebLGvzg/Oh1Nx8wh/jD+T+i
erPnCQbA+cVrWBoYmxD8/X1JB5++QvB324nPmRATCOfX2enKap5B8IXOa552
MgmC88N1a4WUlyL4uTLb21r4guF8z+ighZdLEfxr6S6hL58i+CassmYNfiFw
vnOBz4a7+xF8Ce27FzT0Q+H8fWUhcl+nIfiiE5RYO9jD4Hxbq+sScwoQfLFN
j46WPULwt1b6S9oHhcP5apcWzezYheC7//DZPEM7As63XH/3p+ZUBN9O8smP
//8RfADeZs10
                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 100.}, {-1., 1.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 100.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6256842612436047`*^9, 3.6256843546740375`*^9, 3.6256844425637636`*^9, 
   3.625684541578928*^9, 3.62568476655726*^9, 3.6256848393619084`*^9, 
   3.625684987031582*^9, {3.6256871258567557`*^9, 3.6256871363967967`*^9}, 
   3.6257214857782536`*^9, 3.625729540639967*^9, 3.6257299095350666`*^9, {
   3.6257310984170666`*^9, 3.625731122347436*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
OSQRGg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF0GtIEwAQAOD5wNKclOUjI9Fp6I9BaiYj002bj9LpXD5mZS1fm23mbJaG
YmLig6iNoCCWW7bZyqgZpiSa5so0MiZDKkV8EFMr0/mYU3Ougrw7OI6P4w7u
vDMLWDnWBAKB8Tf/VZLYrJB59oQT/kdMoco+nyenbjlpkiz256nBqffmk+x4
3WC2kXnIyNWC0xVWylnuOPjUevqZGe48eORANWWKawE3llpt2mTspG2Z2CJX
qxLdwfejN6wDiV5gWWblN9cYX3BYw3T2B4o/uP/WI6ntNTJ4JPf87UZ2AFju
ds5PzQjCvtzezSwIBme1+6QF8kLA9aUCGj+dAma4ZFZ9LzoCjqP1uScIjoK7
I4e3mW6GgxdXHAd1LBqY7JJDr4+PAHvLd0/VnY4Ev15YU+exj4H3NIeo+Bfo
4LcaB5GwOArsIXPl8i5F4359SW1lZQxYv+ysE1fEglfYdIP86nGwxn8gVFdz
Any454badD0O/9HbwKTeiQf/2J/4vq6BAXanBmf3SRPAVgMFB/2eJoL7JYW7
wpKZ4E79FSN3EH1L6GfwSUsCt4wvlQ8Poduq+L5eGSww0cmSwRlFSyLGrEjp
J8GGJl5n0QRaueq0o+dsMt5XxhHKptFLT8xUc34K2LazTZHyE71ks8+TKkrF
+QApmbSIVthxG6svpoHnnceCy4xosU0hmy9ig+nWv5rqL6NXCXlmbTGas8l5
GFyGDlpjzpqr0J/nAiokd9GeIwZVazta91WwPt2BrvkyE+/RhTYMTSyUa9Aa
7WBo7Ed0bm+zdmQU7fGOTCKOo7Wax0XUSTTlzYO9Sj3aoUOSlT+H7mp3bJMb
0KJXtdt1i+jR1opnISa05OWGhbeGjmopYUl/o9dfLCs/mdHPm4UmiwX9B0zK
IxE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"x,y\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100}, {0., 17078.35214373996}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"x(t)\"", "\"y(t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6256842612436047`*^9, 3.6256843546740375`*^9, 3.6256844425637636`*^9, 
   3.625684541578928*^9, 3.62568476655726*^9, 3.6256848393619084`*^9, 
   3.625684987031582*^9, {3.6256871258567557`*^9, 3.6256871363967967`*^9}, 
   3.6257214857782536`*^9, 3.625729540639967*^9, 3.6257299095350666`*^9, {
   3.6257310984170666`*^9, 3.625731122461442*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVjHk4lAkAhx2tTq1ahbGJSfG0tig062h+otgY85liPjmSMFOomVyzSJIc
2zHz7Fa7JSbrirbomZrNlc9sVJvrkWpZUW2iXWVyNjJm7R/v8/7zPq9F+GFO
pI6WlhZrjv9NF6uLCswat/Z0qCY0GhE8hWULY/lS5rWy9cdlahH8XtqIrfmV
zNS0oCW8TyIEXBzx0+M3ML+0qae3TYpAThCbJ3jtzIjsdPbldyIEFmkXD/P6
me9c55cz/hJhz3Rg8BBvhDlTYRgslIvQszaL8YanYa4+uVHxKkaEkhTtWd0Q
A8TGmsgiW5OgL5NWlrGNkb7YjkhmJOHyjhkdO31z0OyLGpNLE1EQnvH3Sk9L
NEgeck0XJMK1cDDiIcMaVkWrLrHiE/DgbGnevGM2+OntWm3zrnj0RO37oYS0
hbgmx6XPMR5So71WlaxN2OlmYrmhOA490oVG6hh7GMyE2Jp9Fof91Wu4dnxH
XI7pGJIKjiA/JQbRgQz8ystP0O8XgrUiPPNtvBMeXDCzMnUTwhv3jX1jXFCa
0ppZc12Ahm3d86fObMWZc7bzp/UFGJ1c0tHJAaYO99bufHUINisiPfJ93MCl
yxrv1cfCQvrFm9ygbeh0GTU4lh6D+g+qygOkO7oVp+8Ek9EwrHIsiz7ogckq
cXmy0UH8rlgUJ0jaDpNbnu6CXj5oBSt5/CM7QNGDHHLlPNgMiHIyMjyRoXoq
eJUUhYHx5Z3idC+0ON+Yt9c3EpOkh1L63bew+NHJTbY+AgrrFufO7J04zdl4
3/N9OBwaT1VOnfBGytFjJZrmfdjfVEgwz/sg04DROpUVhn9WsZtzC1mwE3o7
iy+GwphpH3E/zxdRPz8/ncAOhnbL4Y1W19hoFkPY+zgQDyTCZa67CTiG7tH7
PoOLuoHECV4HgbqAvuE3Lv44K7BSruH64dDqzVH3mjiQ9Y+ldXf5YUPDVsmQ
iIA8M9rSPIQDp1DHS7QJb+gv1YSE9XLw1XBwwgcfT0jc+rTpgbvg1cYdW1e3
DcoKfl38i104Xjj0da3EGcUfly5uDN2NKzrqLe6cTXBIDRMUDO6Gwquclpdn
jrFyNVMd6w+l0c3k62kfG+bVyYv8//XH+JOCMYMDa6kxXVMzZlwAbp2o6lhT
Zk852ObZ0EcDEAh5RLHSlSrS45VkHeKCqMjtlp10p0aW99mnTnBBO7cyyDDR
ixLrCsnoOBKt7Q4pg8tYlIfOu4r8BBLMkRUlKetY1EetA+r2JBJlSyfbPndm
UWGzYb/Yp5IQseR0RgSL2qQihtWZJGweOf6RI2dRT9/bpksukDjXvMVkfZAv
ZdajLLtdTSKi/pvfYorZVOefMdODtSRaek1ealWzqexnQz60uyRcZ1SLzrey
KWXXiw9pChLGzjWh9ZNsStHe4ez1iERU8CrdbEuCimqqau/pJUHrya94lkhQ
tHs2dP1+Em1vzzRYHCeodsXVeOZLElmqo13RpwiKQV0xKR4gMW4cOquREtSi
Wsn+2PdzPdeMY/2QoO5WL5FLlSQyeEt5Rx4TVNydnAWdoySckmZT6p4TVO/t
9OuOUySuXugrIUYJSnJrRsNXkQgubau5NENQ22UiTt4nEobyu+2v9fyo6Zvj
xa3quX/TjdcblvlRN6oEUxrN3P9JgUpk6kf9B8zeTW4=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF0GtIEwAQAOD5wNKclOUjI9Fp6I9BaiYj002bj9LpXD5mZS1fm23mbJaG
YmLig6iNoCCWW7bZyqgZpiSa5so0MiZDKkV8EFMr0/mYU3Ougrw7OI6P4w7u
vDMLWDnWBAKB8Tf/VZLYrJB59oQT/kdMoco+nyenbjlpkiz256nBqffmk+x4
3WC2kXnIyNWC0xVWylnuOPjUevqZGe48eORANWWKawE3llpt2mTspG2Z2CJX
qxLdwfejN6wDiV5gWWblN9cYX3BYw3T2B4o/uP/WI6ntNTJ4JPf87UZ2AFju
ds5PzQjCvtzezSwIBme1+6QF8kLA9aUCGj+dAma4ZFZ9LzoCjqP1uScIjoK7
I4e3mW6GgxdXHAd1LBqY7JJDr4+PAHvLd0/VnY4Ev15YU+exj4H3NIeo+Bfo
4LcaB5GwOArsIXPl8i5F4359SW1lZQxYv+ysE1fEglfYdIP86nGwxn8gVFdz
Any454badD0O/9HbwKTeiQf/2J/4vq6BAXanBmf3SRPAVgMFB/2eJoL7JYW7
wpKZ4E79FSN3EH1L6GfwSUsCt4wvlQ8Poduq+L5eGSww0cmSwRlFSyLGrEjp
J8GGJl5n0QRaueq0o+dsMt5XxhHKptFLT8xUc34K2LazTZHyE71ks8+TKkrF
+QApmbSIVthxG6svpoHnnceCy4xosU0hmy9ig+nWv5rqL6NXCXlmbTGas8l5
GFyGDlpjzpqr0J/nAiokd9GeIwZVazta91WwPt2BrvkyE+/RhTYMTSyUa9Aa
7WBo7Ed0bm+zdmQU7fGOTCKOo7Wax0XUSTTlzYO9Sj3aoUOSlT+H7mp3bJMb
0KJXtdt1i+jR1opnISa05OWGhbeGjmopYUl/o9dfLCs/mdHPm4UmiwX9B0zK
IxE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"vx,vy\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100}, {-68.4292587329019, 399.999990440219}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ax(t)\"", "\"ay(t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6256842612436047`*^9, 3.6256843546740375`*^9, 3.6256844425637636`*^9, 
   3.625684541578928*^9, 3.62568476655726*^9, 3.6256848393619084`*^9, 
   3.625684987031582*^9, {3.6256871258567557`*^9, 3.6256871363967967`*^9}, 
   3.6257214857782536`*^9, 3.625729540639967*^9, 3.6257299095350666`*^9, {
   3.6257310984170666`*^9, 3.625731122548447*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF03tMU2cYBnDKbeiEMcDSAENsERiigGu5TOC85VrupXdAtKvVcim3ocLm
ZYwhGwGFqEQ2EEYQKmKAYCZjYiYaBSdDJGYZjUGMQ9gNOy4yDJVt2Xs+/jg5
+eWc7+R9zvd8W1X5ogOmJiYmqn+v/+7sGmNrk+tgWAnUB/UN2N1Me5W6Z1bz
gpqM+N/6bRVBzzVr1DTaxYJTbQywgnx8v+0o47VZhi1ko1PPj/0klTmADG19
tblbl8wCCs12G9Gb81wgEN0YvWrqb+0G0egLEmqB480GG3STquwZM8YdGOg5
Bs/dQHkADx3aMqO+F+QFH6NNWTEmM+ne0IEePt3eYP6JD1Sgw7q4U571O8k8
+oMfnGlT+EEwOoSa2uMt9gcButlxn2d34i7Yix5I526RZbxH8uubNzgatVzI
oue9wgw8n82DEPT+fo7cPzMAXNClTsPxo8pAcKTzHtVCTmoQeKAPCzQqb00w
RKITN6vKfz30PmjQI5fPjTYU7IZydDwMsZK0IVCHPskX1rKPh8JZ9PfhE28s
nwqDPLSofkU8+iVF1s+/3DQ2LgJoR79lGbzx2wcAF9E+mw9EXkjgQxXaIy2k
zv4RH1Torc32zyvTwyEAnT9seX9lIhwc0Df+WunOUkSAOXpWWN+Z/TQC7NAO
PQG6nOxISEJr+92s5wyRQPfx9q2NRQXFUXASnddjm/vHYhScQDs1MTWZH0aT
fK2DQ8WHX0WDlJ5/uuSLsrIYCEVb/Rm1o5IhgB3o6UW78ZpSAbxL96t9+1NH
o4D066Ui0tD8USzI0Y/BitlvEge56FteI7vHP4+DQvTqYufSLxbxZB7eYFX3
8mfxsB+dcJtZ2rApASR0P+60CKm6BNL/9sKSKrVzIpn3t3eS71a2JJI+fdrF
r7vkmgQxaBbFVQ81JJH5qi3GY4s5ycSMkXxfz85kch7V189JZh2ExMO1hW+H
StY9MH1kSTO27m3bH8zfsU8h3ztd4GngyNftdulU3+u6dV99snBi4lEKJKO5
vd0PV1kiCEdfK89xd8sQkfOniuXxbzaKSH5rm7UM5WMRCNGjujnfQScxpKNr
+ZMMdqoYDqLhCGff/UYx2Q/D5cyBQ1Ni0KJ/eHj92VdbJKBEX/zb5s3BvRI4
Tvftu74bvq0SaKX365iyoGlGAl/T/bT3/flHbymUoRc6jJQxV0r+z+oufWHH
FSnsRJsPXGuV/i4FW/r5k1llnK8MNtDrzZxdqSIZeNHfd0pv6+mVkXw8vwYf
9ryM9EXrzMiS+MlBTffbUtNWkScnee5Vs3MZvXJIQ7+wm+QeW5JDCpqq0t0t
4iogAV1jVqjIKVKQ/rjqDbpv+hUQh+7qKVheW1OQfP8A2l69Mw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF0GtIEwAQAOD5wNKclOUjI9Fp6I9BaiYj002bj9LpXD5mZS1fm23mbJaG
YmLig6iNoCCWW7bZyqgZpiSa5so0MiZDKkV8EFMr0/mYU3Ougrw7OI6P4w7u
vDMLWDnWBAKB8Tf/VZLYrJB59oQT/kdMoco+nyenbjlpkiz256nBqffmk+x4
3WC2kXnIyNWC0xVWylnuOPjUevqZGe48eORANWWKawE3llpt2mTspG2Z2CJX
qxLdwfejN6wDiV5gWWblN9cYX3BYw3T2B4o/uP/WI6ntNTJ4JPf87UZ2AFju
ds5PzQjCvtzezSwIBme1+6QF8kLA9aUCGj+dAma4ZFZ9LzoCjqP1uScIjoK7
I4e3mW6GgxdXHAd1LBqY7JJDr4+PAHvLd0/VnY4Ev15YU+exj4H3NIeo+Bfo
4LcaB5GwOArsIXPl8i5F4359SW1lZQxYv+ysE1fEglfYdIP86nGwxn8gVFdz
Any454badD0O/9HbwKTeiQf/2J/4vq6BAXanBmf3SRPAVgMFB/2eJoL7JYW7
wpKZ4E79FSN3EH1L6GfwSUsCt4wvlQ8Poduq+L5eGSww0cmSwRlFSyLGrEjp
J8GGJl5n0QRaueq0o+dsMt5XxhHKptFLT8xUc34K2LazTZHyE71ks8+TKkrF
+QApmbSIVthxG6svpoHnnceCy4xosU0hmy9ig+nWv5rqL6NXCXlmbTGas8l5
GFyGDlpjzpqr0J/nAiokd9GeIwZVazta91WwPt2BrvkyE+/RhTYMTSyUa9Aa
7WBo7Ed0bm+zdmQU7fGOTCKOo7Wax0XUSTTlzYO9Sj3aoUOSlT+H7mp3bJMb
0KJXtdt1i+jR1opnISa05OWGhbeGjmopYUl/o9dfLCs/mdHPm4UmiwX9B0zK
IxE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"ax,ay\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100}, {-4.684292682927638, 0.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ax(t)\"", "\"ay(t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6256842612436047`*^9, 3.6256843546740375`*^9, 3.6256844425637636`*^9, 
   3.625684541578928*^9, 3.62568476655726*^9, 3.6256848393619084`*^9, 
   3.625684987031582*^9, {3.6256871258567557`*^9, 3.6256871363967967`*^9}, 
   3.6257214857782536`*^9, 3.625729540639967*^9, 3.6257299095350666`*^9, {
   3.6257310984170666`*^9, 3.6257311226544533`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF0GtIEwAQAOD5wNKclOUjI9Fp6I9BaiYj002bj9LpXD5mZS1fm23mbJaG
YmLig6iNoCCWW7bZyqgZpiSa5so0MiZDKkV8EFMr0/mYU3Ougrw7OI6P4w7u
vDMLWDnWBAKB8Tf/VZLYrJB59oQT/kdMoco+nyenbjlpkiz256nBqffmk+x4
3WC2kXnIyNWC0xVWylnuOPjUevqZGe48eORANWWKawE3llpt2mTspG2Z2CJX
qxLdwfejN6wDiV5gWWblN9cYX3BYw3T2B4o/uP/WI6ntNTJ4JPf87UZ2AFju
ds5PzQjCvtzezSwIBme1+6QF8kLA9aUCGj+dAma4ZFZ9LzoCjqP1uScIjoK7
I4e3mW6GgxdXHAd1LBqY7JJDr4+PAHvLd0/VnY4Ev15YU+exj4H3NIeo+Bfo
4LcaB5GwOArsIXPl8i5F4359SW1lZQxYv+ysE1fEglfYdIP86nGwxn8gVFdz
Any454badD0O/9HbwKTeiQf/2J/4vq6BAXanBmf3SRPAVgMFB/2eJoL7JYW7
wpKZ4E79FSN3EH1L6GfwSUsCt4wvlQ8Poduq+L5eGSww0cmSwRlFSyLGrEjp
J8GGJl5n0QRaueq0o+dsMt5XxhHKptFLT8xUc34K2LazTZHyE71ks8+TKkrF
+QApmbSIVthxG6svpoHnnceCy4xosU0hmy9ig+nWv5rqL6NXCXlmbTGas8l5
GFyGDlpjzpqr0J/nAiokd9GeIwZVazta91WwPt2BrvkyE+/RhTYMTSyUa9Aa
7WBo7Ed0bm+zdmQU7fGOTCKOo7Wax0XUSTTlzYO9Sj3aoUOSlT+H7mp3bJMb
0KJXtdt1i+jR1opnISa05OWGhbeGjmopYUl/o9dfLCs/mdHPm4UmiwX9B0zK
IxE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"\[Psi]\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100}, {-1., 1.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Psi](t)\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6256842612436047`*^9, 3.6256843546740375`*^9, 3.6256844425637636`*^9, 
   3.625684541578928*^9, 3.62568476655726*^9, 3.6256848393619084`*^9, 
   3.625684987031582*^9, {3.6256871258567557`*^9, 3.6256871363967967`*^9}, 
   3.6257214857782536`*^9, 3.625729540639967*^9, 3.6257299095350666`*^9, {
   3.6257310984170666`*^9, 3.6257311227474585`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF1HlMU3ccAPCWS+bAKUVowGFtUQziANcCcr1vsdxX7xaQySqsyFkEBCc6
hsdGQCFOIhOEkA6KYoBgJmPgJjgOJ0MkZhmNUYxD2KbYcQqhMhe/7/nHy8sn
75eX7+97bVNli1NMaDTawTfP/292hVFb59QbWAjVPp09NhC/Erd/Wv2SuOX7
1vrtZ3yeqdeIGOKtt5hzyo1elpCN5xuP0V+bJm6ENHTcxdHfZXJbkKOtr9e3
6WKZQKDZrGG9GW8LeKNrQ1ZNPK1ZEIK+LCXmOK5syEDXqUqe2oU6QyZ6hs5z
NhA7IAEd0DCVfMdnJwjQJsxQ2lSCK/X/oXNNNWZfuEEwOrCVO+FS/RH8gtZ/
9un5RqUHTKD9iYn9rhJPKEfX2x9waYveA0x0TwJ3qzzxY+jHfOjr37M3ZnBh
Hl13zc77YhoPwvH8wS6OwjPVC3zQxQ5DkSNJ3uBF3vdYBqTH+QCg88PUKlf1
XhChozerTv2V5wvJ6OGrF0ZqNH6Qh46EQWZMhj8cR5/mCyvZxwPgc/TPQePr
ls4GQgpaXL0sGfmWgHT07KLV6JgYoAj9gcXe9T/ce2e3zSmCy1F8yEHviPev
YjzgQxJ6Wz3jWWlCEESjs4cs7i6PB0EA+ua/y22HlPuAh54WVrekPdkHfmjb
di9depoApOiMLpb1jEEAh9G3+9bnagqC4QQ6q31j5vP5YOp+DnV26tTDIZCF
1vYOFuSvhEA8Gf9k4dclJaEQirZ8Eby7lB4GvujJeZuxiuIwKr6Zpl1P7I1h
EIheVAoM9UfDQYF+CJZ2XbQI8Ef37Rz2G/sqgqrn6nzLwp/mkdR3Xm9Z29LJ
SIhAR922K66xioJEsj/6G4REVRRo0E05hWXJjtFU/v/+MHagtOGdv2zlVzU7
xVDzwCS4yYM1MVQ+y83Hwgs4sfAK+5E+nO3u0hILz9HJ3Rek07ZCWEfOR2XO
pgCpkIo/yC/vpPi8kMpnz+SRBfWoEBrQ23fdm+1niKj5OadxMXAUIuhDs5rP
dr6uEsE36OuP506MPxCBJ5rb0XZ/lSmm5uXGqXRnVqIYXqBV4Tz+rVoxWJH7
Y8NaYtJDMVWPEd2Me6+DBPLRlfxHdHacBHRoOMI5cLdWAgNow9XUnrwJCfyE
/vV+99NLW6VwGv3dqw3v934iBSey/37svOmulcIkxsMrStLUTUlhGm3LcP/j
N1cZMPD83BUjYcyUgZis/x59zpVrMmp/mPXc0Mr+kUEX+f3xdFKEu5yKb87U
0YnIfbMtyXlwSGhs75DDUbJ/PGrc2LNy6Cbjc6QfknooqPxrLdSNZ7IU0Iy+
U87OpHcoqPq9tHnELVpQwG40UaYbyOUqYQXvU2Gao0zPVcIE2klv0H3fpYRF
dGu7ZmltTUnt8/8Ay2idOQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF0GtIEwAQAOD5wNKclOUjI9Fp6I9BaiYj002bj9LpXD5mZS1fm23mbJaG
YmLig6iNoCCWW7bZyqgZpiSa5so0MiZDKkV8EFMr0/mYU3Ougrw7OI6P4w7u
vDMLWDnWBAKB8Tf/VZLYrJB59oQT/kdMoco+nyenbjlpkiz256nBqffmk+x4
3WC2kXnIyNWC0xVWylnuOPjUevqZGe48eORANWWKawE3llpt2mTspG2Z2CJX
qxLdwfejN6wDiV5gWWblN9cYX3BYw3T2B4o/uP/WI6ntNTJ4JPf87UZ2AFju
ds5PzQjCvtzezSwIBme1+6QF8kLA9aUCGj+dAma4ZFZ9LzoCjqP1uScIjoK7
I4e3mW6GgxdXHAd1LBqY7JJDr4+PAHvLd0/VnY4Ev15YU+exj4H3NIeo+Bfo
4LcaB5GwOArsIXPl8i5F4359SW1lZQxYv+ysE1fEglfYdIP86nGwxn8gVFdz
Any454badD0O/9HbwKTeiQf/2J/4vq6BAXanBmf3SRPAVgMFB/2eJoL7JYW7
wpKZ4E79FSN3EH1L6GfwSUsCt4wvlQ8Poduq+L5eGSww0cmSwRlFSyLGrEjp
J8GGJl5n0QRaueq0o+dsMt5XxhHKptFLT8xUc34K2LazTZHyE71ks8+TKkrF
+QApmbSIVthxG6svpoHnnceCy4xosU0hmy9ig+nWv5rqL6NXCXlmbTGas8l5
GFyGDlpjzpqr0J/nAiokd9GeIwZVazta91WwPt2BrvkyE+/RhTYMTSyUa9Aa
7WBo7Ed0bm+zdmQU7fGOTCKOo7Wax0XUSTTlzYO9Sj3aoUOSlT+H7mp3bJMb
0KJXtdt1i+jR1opnISa05OWGhbeGjmopYUl/o9dfLCs/mdHPm4UmiwX9B0zK
IxE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"ax,ay\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100}, {0., 4.684292682926952}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"ax(t)\"", "\"ay(t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.6256842612436047`*^9, 3.6256843546740375`*^9, 3.6256844425637636`*^9, 
   3.625684541578928*^9, 3.62568476655726*^9, 3.6256848393619084`*^9, {
   3.6256849873868217`*^9, 3.625685030029318*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF0GtIEwAQAOD5wNKclOUjI9Fp6I9BaiYj002bj9LpXD5mZS1fm23mbJaG
YmLig6iNoCCWW7bZyqgZpiSa5so0MiZDKkV8EFMr0/mYU3Ougrw7OI6P4w7u
vDMLWDnWBAKB8Tf/VZLYrJB59oQT/kdMoco+nyenbjlpkiz256nBqffmk+x4
3WC2kXnIyNWC0xVWylnuOPjUevqZGe48eORANWWKawE3llpt2mTspG2Z2CJX
qxLdwfejN6wDiV5gWWblN9cYX3BYw3T2B4o/uP/WI6ntNTJ4JPf87UZ2AFju
ds5PzQjCvtzezSwIBme1+6QF8kLA9aUCGj+dAma4ZFZ9LzoCjqP1uScIjoK7
I4e3mW6GgxdXHAd1LBqY7JJDr4+PAHvLd0/VnY4Ev15YU+exj4H3NIeo+Bfo
4LcaB5GwOArsIXPl8i5F4359SW1lZQxYv+ysE1fEglfYdIP86nGwxn8gVFdz
Any454badD0O/9HbwKTeiQf/2J/4vq6BAXanBmf3SRPAVgMFB/2eJoL7JYW7
wpKZ4E79FSN3EH1L6GfwSUsCt4wvlQ8Poduq+L5eGSww0cmSwRlFSyLGrEjp
J8GGJl5n0QRaueq0o+dsMt5XxhHKptFLT8xUc34K2LazTZHyE71ks8+TKkrF
+QApmbSIVthxG6svpoHnnceCy4xosU0hmy9ig+nWv5rqL6NXCXlmbTGas8l5
GFyGDlpjzpqr0J/nAiokd9GeIwZVazta91WwPt2BrvkyE+/RhTYMTSyUa9Aa
7WBo7Ed0bm+zdmQU7fGOTCKOo7Wax0XUSTTlzYO9Sj3aoUOSlT+H7mp3bJMb
0KJXtdt1i+jR1opnISa05OWGhbeGjmopYUl/o9dfLCs/mdHPm4UmiwX9B0zK
IxE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"\[Psi]\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100}, {-1., 1.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Psi](t)\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6256842612436047`*^9, 3.6256843546740375`*^9, 
  3.6256844425637636`*^9, 3.625684541578928*^9, 3.62568476655726*^9, 
  3.6256848393619084`*^9, 3.6256849874648714`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1: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
Ns2u8f6qKvI/Zx35Ww==
        "]]}, {
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJxF0GtIEwAQAOD5wNKclOUjI9Fp6I9BaiYj002bj9LpXD5mZS1fm23mbJaG
YmLig6iNoCCWW7bZyqgZpiSa5so0MiZDKkV8EFMr0/mYU3Ougrw7OI6P4w7u
vDMLWDnWBAKB8Tf/VZLYrJB59oQT/kdMoco+nyenbjlpkiz256nBqffmk+x4
3WC2kXnIyNWC0xVWylnuOPjUevqZGe48eORANWWKawE3llpt2mTspG2Z2CJX
qxLdwfejN6wDiV5gWWblN9cYX3BYw3T2B4o/uP/WI6ntNTJ4JPf87UZ2AFju
ds5PzQjCvtzezSwIBme1+6QF8kLA9aUCGj+dAma4ZFZ9LzoCjqP1uScIjoK7
I4e3mW6GgxdXHAd1LBqY7JJDr4+PAHvLd0/VnY4Ev15YU+exj4H3NIeo+Bfo
4LcaB5GwOArsIXPl8i5F4359SW1lZQxYv+ysE1fEglfYdIP86nGwxn8gVFdz
Any454badD0O/9HbwKTeiQf/2J/4vq6BAXanBmf3SRPAVgMFB/2eJoL7JYW7
wpKZ4E79FSN3EH1L6GfwSUsCt4wvlQ8Poduq+L5eGSww0cmSwRlFSyLGrEjp
J8GGJl5n0QRaueq0o+dsMt5XxhHKptFLT8xUc34K2LazTZHyE71ks8+TKkrF
+QApmbSIVthxG6svpoHnnceCy4xosU0hmy9ig+nWv5rqL6NXCXlmbTGas8l5
GFyGDlpjzpqr0J/nAiokd9GeIwZVazta91WwPt2BrvkyE+/RhTYMTSyUa9Aa
7WBo7Ed0bm+zdmQU7fGOTCKOo7Wax0XUSTTlzYO9Sj3aoUOSlT+H7mp3bJMb
0KJXtdt1i+jR1opnISa05OWGhbeGjmopYUl/o9dfLCs/mdHPm4UmiwX9B0zK
IxE=
        "]]}}, 
     PointBox[{79.18037281656132, 3911.113648538354}], {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1:eJx12Hk01fn/B3CkSIsSSRhLlLIkKkbhlSVrXNeStAxSqEilRKWbpEL2LKNs
SSSRfc2HFm1ESVFkshWmMIlo+fqd0+v9Pmfm/P7qPM77ds917/vzWp4yzvvZ
u3i4uLjaubm4/u9fR7NEvrH5SqCaudAKxi4x3d73QwczVhLvK+HimjaiSs/b
do/Pv7uWuGMzb37SOw3itubUvYrcvxM/s9KVL5XSIlaTCA4a5V1HvPvUSo0Y
H+rY3uY+tX7q+2Z+8U3b1hPv+PFkSDqWOmznwdRqfm3i2w9E2TuOUdsd23M9
p5BaNtq5INFRh7jcsGjWQAJ1/3WHyvOzdYkDtucItxpSmx6+Klk3TK3tId+n
pgbES3xTB5afo+Y7Izkk3UGdrOFl7CW6gfi0/qC5qwe15Bedq8UZ1Nw8FVk5
36gTCufwfF+jR/xQrCA/MZNa5NCbHfr3qI1enRJ8p6FP/Da42XXVAeo7sax9
CnXUW02u3PXhMiDeYCv10NOOWt4psX7XDeqqBR/li3qobe+DP6+UIfG6Z5UB
k97UZxV7Va5EUkt1aJ4deURdEhHydgPvRmJL/Q6NSG3qvlHViM4j1OqWDuvP
RVPXc+fEvHxCvavw5+DSGUbEt+YsT2iQpTZhjg1LbqP+62CDicdFauUnY6PC
+dQLXh2amMVvTJwdfJ+9dQO1vrZY9nU/6mUmF3NTG6mrJ/v4hmeaEG+5qeUI
+tTa5cUuGgnUL/bNrAp6Rl129EzNCQVTYivFV2L1TtQaGja/3S2hfvoh48iC
YeqCUdljAkZmxHHcySe5L1OvKhx+yWqhFmE83hgpmRN/ffyhUyeAuv3lrp41
r6gFtWfFNptuIv7H+Oyfj1OoX9pMS679Ql3lePJKmbkFceq+yWt5adRnjvrc
uDZO7R74T16ShSW9HxH7iy6mU/fp1c7paafevUxq5kcxFnE+x7jo4loWdLoq
FZ+ZeYlJDwrSiHSijg29WxYaSv2u5+9dq7NYELFMT/yxeCKjoisq9OYetbSh
bczLoan379vMmafyJyNsFr3wubgVsWN6Za2fJvWN7z2esrZW0Jnh0WMLCUzS
NLlhSQ61QZ5m3YEwK+DsPm2ayI5nImY6HxLLnvr/SxNyO13imDfOIVI1ddQK
lYWP3bqpvUU6fOZxs6Gz56bwUp9YhvHkkyuVpHaQcTjOt5kNqrvaOvISY5gM
v9MKuYeoR57faLaLYAOne3rWOiaK0VFu4fy4MXWeLj731LNIJjjop1LGQ2rZ
39lnRnmsgcsoLE/0YzjzoGf3VpP51sC6X+aXJhTGlA+ktxust4YUwx4DZY1Q
ZoZhw/lB+6nX35snWLo1mGEnja2JOTz1eoP1rXqcc8y46ezZ709bw5BetIf9
w0AmaUz63boo6kGWaVjXTWuA2tsaXX8HMFHfd7hoVE29/4Z+bk+hU0zgtMu9
au+tgcMJUOIr8WNW5N2qDPpiDcwJVVs1k0NM47b7UW28NsS1zrwiLSttAL5U
TpYXuzJugmIDy3VsgPPPHrleY0dmbqVyzQlzG+Dq9txW93wp4yCy2UPefcps
pSAnHmPI8OSI1Z+Z8uKV8/TeuMBIXdY977Sp95c41bfQdB901/cZedVPnUcK
mXVGHQa1ZfM/i/ZPnUe7yBZxnQB/jlZK9Qxb4DyaUfd0Kwcete40d11iC52P
c9XKhQJhofqF8blgC1Bvn5T+8CxUvk1tcLaYOt+k3Cx29Tzc7HnL2uE7dW7Z
osu77QLx0NPrh301wsEm6vPS/LP/NSuz2tbnfASkDEg+35JuC+MKMSGDLlGw
MV4tKyd/6tzdf+k1djQMGhid5K6xhcwstxoniCFmrdAeaxGPhajhrba2T//r
zD3LoiJnxhFzZc9XNh+LA80kL8WsdluwH5ism9ETDx2mZ7i/D0yd72v8foz5
EwLHEl6yJqbOb5THr72ZSJw3mK4+nHgJVqTfzEnntwN+5fCG7POXifNydvLK
7Eom5h3LeOqxPAUaWXdOjy+0A1VRCUmzFGp7jcg9CqKpxIGbZ5ROD6N+EzfE
Zo6lEfOX7kq5PEK9bdxynX3nFeJzi+6dW7M5nbhQU6tFqIGa31fuQH3FVfL5
HMvmzj6XlUFc+HU8Qy/uGvl7O8U8P0vNzSTWdLAPb5ukdvGrf1NyMIt8n6F/
6q24+CGLfN/dbUr3LF9eJ543mSqkbJFNfj+XdaE5fetukN8/Yiv35N38GzCh
M/P79Nip11c6dm0TvUnuy/o3L1S1wm6S++X2zdRfdHouOIcWpxdvswVm/Rqx
ZyO55H56q9gWvFydR+5visUjrqLsPPAKOipbscoWijsCry3pyyP3/YmnrkWU
7C2QU7Y8skCE+tVz+Ud7x23gS1hh4v4E6tlS+/U6mm9BqN83ybuvbWCtbnd4
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
5/8BlTgXUw==
       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1: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
5/8AQH3exQ==
       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGBwBmIQ3XDDle2eyw17hp/n3238tPqAw6Tz4q5lr+wjflVE
zVm5Hs7P0c1RlGrfAOfP8H2Y9/0vgn8kN2zPlZKNcP6NvwLJzhsQfAO733//
zt0E57uc27ok5yaCHxFX4H1bZDOcX/BO65NnwOYDCz4JCUpc+ADnO8jYTeNN
/QLnH3DNlGb+9R0hnz9lwY++3wj5GftV3yn/h/MVEkuvFsYwOsDsg/Fh7oHx
JdY5hPcnbTrw4CvXjDdqzA4fek9zbnq9Ec6H+W9D14Ko9I8sGPw1d2eLplki
+LDwgvFb9qqd6DiE4MPCD5d5MPthfJj7YHxY+ML4MP/B+DD/w+2vezpjR/fm
AwXyZrKPdrPB+QZbTt+PaeOA8z94JC66HsAF52+4+y0lSJoHob+oR/3sU164
+TA+zH4YHxa+MD48PbArvXLfwO/AIte2QUF90wGGc9FhiXsF4P6F8WHhAePD
wgvGh4U3jA8L74QZy7bPWyQID28YH5aeYfyIuRurVnsj+A683y/bCCDJQ/MD
jG9wi5l3vxGCz7Crb//D3evg/BszJYtYXBH8FZVLVNTPrYXzGyL1r3uGI/gR
lrs6cx6sgfM1JF1t+jMRfFj+hPEv3IhaeKUawV+x42nwdxYEv2FGAZtU3yo4
P6Di9w4bcQRfI6ItO37BSjj/h7mgXJPmygMHkj5K3GkXcrggPufCkk0rMPgA
oyUsKw==
       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAGIw3TCphWW6lMMF8TkXlmxacQDGb5hRwCbVtwrOv3Aj
auGV6tVwvoakq01/5ho4/8ZMySIW13VwPsOuvv0PdyP4BreYefcbrT8wwevu
U8caaYeIXxVRc1Yi+A683y/bCGyA83N0cxSl2hH8lr1qJzoOIfgzfB/mff+L
4K+5O1s0zXIjnH8kN2zPlRIE/8ZfgWTnDQj+h97TnJteI/gscm0bFNQ3wfkS
6xzC+5MQfAO733//zkXwXc5tXZJzE8GPiCvwvi2yGc4veKf1yTNgM055dP0w
8z+IaLjXJ8rA7YfxYe6D8WHuh/Fh/gu4X7Rij5ss3P8bVu7l/KUtB+dLlHBk
mwvKw8Orwi74TMk3BD+H5bzYzVwFOH9OZsnx8gcI/plzkhViwYpw82B8mP0w
Psx9MD7M/X+M92tsPYrJh/k/4R9n16dVShh8WHjB+PDwTF5vNVFWGYMPC/8D
J0Je60/AzQcA+J14xg==
       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGCwA2IQPWcbq2uNu5bDDN+Hed//bjjA0S5qvOC9Bpx/Q7Gg
ibEWwV+x59TFJC5M/pq7s0XTLDfC+Udyw/ZcKUHwb/wVSHbegOB/6D3Nuek1
gs8i17ZBQX0T3D4YH+YeiXUO4f1Jmw7kBCZMuXtFE86Hud/A7vffv3M3HTgj
vfqr1C4tuDyMD7MPxoe5B8aHuRfGh/nnT0PAsp062nC+zrOvYRHzteH6YXyY
+Qnes9m/C+rA+RM2OOyY2qID988B0WcZJt8R/A9V3ZKXM3Xh7lV4YHCq8A6C
H+B6rUrAXw/Ob1lVrb3+oB7cfhgf5n4YH+beLfyKd3xN9OHxBeO37FU70XEI
wY+Yu7FqtTeC78D7/bKNAIJvcIuZd7/RejifYVff/oe718H5N2ZKFrG4IvgR
lrs6cx6sQaj/ef7dxk+r4fwLN6IWXqlG8BtmFLBJ9a2C8wMqfu+wEUfwNSLa
suMXrITzf5gLyjVpIvgXxOdcWLJpBZy/4rta83HrFTjVo5uP7r6GSP3rnuFr
cfoPPTxg4fWk5FjPm2WI8IXxYeEP48PiB8aHxSeMD0s/MD4s/mF8WHqH8V3O
bV2ScxOTDwCW1uoJ
       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[{{14.035087812144127`, -3636.7797566979607`}, {
       14.93055564734101, -3636.7797566979607`}, {
       15.15442260614023, -3636.7797566979607`}, {
       15.378289564939458`, -3696.2119882769584`}, {
       15.602156523738678`, -3696.2119882769584`}, {
       15.826023482537899`, -3755.6442198559525`}, {
       16.04989044133712, -3755.6442198559525`}, {
       16.27375740013634, -3755.6442198559525`}, {
       16.49762435893556, -3755.6442198559525`}, {
       16.721491317734788`, -3755.6442198559525`}, {
       16.94535827653401, -3755.6442198559525`}, {
       17.16922523533323, -3755.6442198559525`}, {
       17.39309219413245, -3755.6442198559525`}, {
       17.39309219413245, -3755.6442198559525`}}]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1:eJx1011IU2EcBvDjB4GSMsEvSkRRmnqjCG4JZgcMP7BoCrYpOGmiNy4dlGIF
ErGkD51X4sCUCRoep+ucqaBTcamgIqjgwI9IMsobY8puVOxABT3vHzx0cTj8
eOE97/95zptsaiqvC+Y4rvjP8/e9rw9193/T8juyqrZAlLyx/FVB1JDbOqd1
D2UN8/e9+rOoJfLdtGjHwlvyRPOnosdlGn7p0YNZ3xOlExYbj1PiyVZVQo9v
P4f5Z/Vq/qshcrmz5TDHrDS+B590roW5j8ihie1iktrNHO/i9V0mclb+hSz3
ke+sTw6ad8kGo6X0c/Q4s8WfESjRka1tP+xT78jvIx231cvj7PyXLfZXHXYH
T7B5YeQBIy8Y+cLoA/vDOA+M86LPy8Z8MOaHkY8rYAziLEojTxj5w+gHRn+w
/d5B46kseguHpMr7gpa3zt1Yeb1A5iNOt/JUZM5jmz+YcTEPPx1MVa+PMRty
PW/MX0eZN3eqBnzPncwv7JYr12wjzLrWi6m8OHKaob2hxiEwn2mjEl+mC17c
D7glXB/uv35TYewH43swd77hlwJOWq/M3C7Rj9H6v/ngrL2QiPnsj8zIAzb0
Sc+cpWTkByNfePRLb0x9rsSMPmD0BaNPGPcJRv+Rc4LpVoXS+F8+NP3ydNj+
798Gqisu
       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBmIQbSTT1faVxdrBgff7ZRuBDQeyWCbVskdawflW89+c
yXhmicGPmLuxarU3gt+yV+1ExyEEf4bvw7zvfzccWPRmZonkWkuHNXdni6ZZ
boTzj+SG7blSguDf+CuQ7LwBwf/Qe5pz02sEn0WubYOC+iY4X2KdQ3h/0ia4
fTD+pUB71R3yVg4Gdr///p27Ce4fGJ9p+5OrYZOsHFzObV2Sc3PTgVmZ5nrL
TiP4sPCA8U+du3PPxQ7BT2vUN59SjsmHmQ/jw9zzz7ip//EGa7j7YXyY/2B8
mP9hfFj4wPiw8IPxYeEL48PCH8bP0c1RlGpH8GHxBfMPLD7R4x8WHhG/KqLm
rFyPwQcALAYkeg==
       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1:eJx10l1IU3EYx/G1EolaDGpYwkqT3hAhRiFJzZPLiFKrxVSMJNY7belFkXYT
2JslUeFFDScWaGRlzpMTScVcb1IQmEEpJAVB4LpQkCzzQAV9/09w6GKMDwfO
eZ7f70n1l3kPWC0Wi+/378+/93vi/qxBt3a2Z3l/dSzyWI95n53szFbeeqLJ
+WJcPD5/OqvGoSlvCC774nKJa54X1A4XiN8tqciuOmp2ICOQmnxBXFzfdure
NrFmmxxcb//n+VRFSbi5Vb1/9fBMW6+rVX0fMx9mfsx+ONluCa48La7a07Jg
KFc8erek++JcMXnhR7nROfGQW82HmV89/7vf0lr/w7q9kje+kf/p2KQhvv+h
znFwXZvy02Bh99vj4veGfZ8nIh67/Gq2HhfPWnw+krJCV174QCu64tfVPFjt
4/5pGPW62nfT62hjYEhXeWDywuSJyRvTB6YvTJ+YvnFa5a34qmpx2ZuX1wca
zWb+rvQJT2Wf2eybeM45ljJiNnntGtkc7p/SVJ6YvDH9NGSWbylP2qj6w/SL
uff41dBE0hqzuY/M0djN3h1mc09nPF/zDgXFA2HHj3mXxM5v7qaO2+LonWtG
wkfxDGtXc8u02Xwvf/dnn29RjsnMi9kv1G6zGmtz1P6YfDD3i8kTkzemD0xf
mH6Zh3tgH8z++Mj2wztLn4jJC5MnJm9MH//zLyZFo8k=
       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[{{40.675255909251526`, -3874.5086830139444`}, {
       40.899122868050746`, -4290.534304066914}, {
       40.899122868050746`, -4409.398767224902}, {
       40.899122868050746`, -4587.695461961892}, {
       41.12298982684997, -4825.424388277872}, {
       41.12298982684997, -4884.856619856866}, {
       41.34685678564919, -4884.856619856866}, {
       41.34685678564919, -4944.288851435864}, {
       41.57072374444841, -4944.288851435864}, {
       41.79459070324763, -4944.288851435864}, {
       41.79459070324763, -4944.288851435864}}]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[{{42.690058538444525`, -3339.618598802983}, {
       43.137792456042966`, -3874.5086830139444`}, {
       43.36165941484219, -3993.3731461719362`}, {
       43.36165941484219, -4112.237609329924}, {
       43.58552637364141, -4409.398767224902}, {
       43.58552637364141, -4528.263230382894}, {
       43.58552637364141, -4587.695461961892}, {
       43.58552637364141, -4647.127693540886}, {
       43.80939333244063, -4706.55992511988}, {
       44.03326029123985, -4765.992156698878}, {
       44.03326029123985, -4825.424388277872}, {
       44.25712725003907, -4884.856619856866}, {
       44.48099420883829, -4884.856619856866}, {
       44.70486116763751, -4884.856619856866}, {
       44.70486116763751, -4884.856619856866}}]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[{{42.913925497243746`, -4052.8053777509303`}, {
       44.25712725003907, -3993.3731461719362`}, {
       44.70486116763751, -3993.3731461719362`}, {
       44.70486116763751, -3993.3731461719362`}}]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGBwAWIQvbrrWFC0o4fDisolKurn1h6A8R14v1+2EdgA50fM
3Vi12hvBn+H7MO/7X9z8I7lhe66UbITzb/wVSHbegOCzyLVtUFDfhFN+zd3Z
ommWG3HaH/GrImrOyvVwvsEtZt79Rgj+jZmSRSyu6w58f/z+H1Och0NDpP51
z/C1cH6E5a7OnAdrDjjbSq5eVeXhoCHpatOfueZA/zSn8KDpHg4XbkQtvFK9
Gs5fseNp8HeW1Qduv89m/rUZaN6MAjapvlUH1D2nrl94AcEvXrQv2vMtgs8b
KrhlhponnB+5zirBwdkTbt5S9hSeF/GecPs+JvTu6K/B5MPcB+PD3G+7a1uK
+UxPuP9gfFh8wviw8IDxYeEF48PCE86HhjeMn6OboyjVjuC37FU70XEIwYfF
Py55WHrC5T6Y/2B8hp/n3238tBrOh4VHp/ADgftbEeEH48PCF8YPqPi9w0Z8
1YGrOZx72y4h+IrHjDL13iP4ufIxote4veD8nRWtB2s1MPkw81kvrctVdfWC
2x+ofUPybKIX3H0wPsw/MD4svmB8WHzB+LDwgPFh8QXjM+zq2/9wN4IPi7/5
LYzHSuq84OEL48PiD8aHxR+MD4sfGB8WfzA+LP+9vqtVJDMbNx8A2g8Sog==

       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQnT7n57kkLW+Hhkj9657haw88jTqhvXKnt8OKyiUq
6ufWHjDc8vF6wDVMPkw9jB9huasz58EaOJ/h5/l3Gz+thvMv3IhaeKUawV+x
42nwdxYEv2FGAZtU3yq4/TD+dMb59YxzEXzvFaWXIxsw+QEVv3fYiK868N/P
R31TMoK/+atSNZc7gg/zL4wv7XxBaTcvwjwYH+Y+GB/mfhhfQ9LVpj9zDZwP
8z/cPGj4wM2Dhh+Mf2OmZBGL6zo4n2FX3/6HuxF8g1vMvPuN1sPdG/GrImrO
SgTfgff7ZRuBDXD/wfgw/+fo5ihKtW+Ahw+MDwtPGB8W3jA+LD5g/Fpe6ZYf
nzD5LXvVTnQc2nDgZJqLwQJ+Hzhf9EDuHXcdTP4M34d53/9i8gH88DRw
       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1:eJxl0l1IU2EcBvCDG5TEKBldKEWI9oVa2gcx2OggbFSe7YW0XIaQgcRsNKgL
LaK6mE3LNC8SKzMzYYtNPV4IOhk7LYIoKPyAmTRoxAqJFmh0yhFUcJ7/C9vF
OPx4z3nf5//sLT7rOd6cJwgC+/f7/zw8LNsuReyi0xTudH8MKRstG/oWjnG/
+JRcLt/D3XprytJewL27qqc38UMiJ+LNqYOLknjj1N740fpRpfea2dQ9I4mB
yyOlO9+OKtbtxjufByVx8X7hRb11jCyEu6PJGe7KJZ0hum+cvneutTUMPBun
/bMtGtR58yaZrz+auBKskXm+LLsr3MVFPpnm6bcnL6h/ZJoXRh/w6b4D1VfP
cfu/N6ZLvLn2Rna86ojJyuoR34M3Q3Y6D0ZeGPPA6ANGXzD6xf+HdRj93c68
Xyla4vuTtT7idbrHsZ88H4z8JWPlNS1GR44xr2fdSbWgkjty5vrTaYk7Pxxg
TS7uE8a5zPqbucb5MPKRtfww5oPRF4w+YNy/by9L65xRB/UH4/7Cuwqt5h5X
SHnizvjl4VzjfRj7w8gDIy99r80D4z7QujY/5dPehzGfaZtDED7wPLDw+116
YiVIDkylalV9UGlvaw35f3HPzg452WZG3lr2Wq9Wcbu8q/Kgg3sysaXRdp5R
HzDOh9GH7pAtP+1jlJfd9UzeG2HUD4x+YMwLo5+Hy/1NlueM+vlSHTOkEozu
z/6Br9Nda4zua7b/AootiEA=
       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAGIQ/eH++scWdQEOK3Y8Df7OsvoAjP/DXFCuSXMlnH9B
fM6FJZtWwPkrvqs1H7dG8CuubzR9dWQ5Qn9ZkG9QwjKE/rC7/0teLj0wrefI
zp4eBN/G8mb/g1kBDgvMMjZNL1p64NHTt6kmK4HmiX1O2fV7yQE9e3GhO0cD
HAK+1YrfbVlyQME1dMr1Dwj+sY+ZWdr/AxwUrnGc+s+75EDevDqHet5AOF/E
e7LYZWkEf9f35W/UtBD8hCV7DlVZIPhsgRdnnHND8INW/XIpS8bkw+z/EcYv
faoQkw9z/zxmlY+yDYFw/8L4GtOPz9K/vuyAywaL44V9gfDwg/Fh4Q3jw+ID
xteIaMuOX4DgB1T83mEjvgrOb5hRwCbVh+DD4hdu/o2ohVeqEXyGn+ffbfyE
4GtIutr0Z66Bu7chUv+6Z/hauP9WVC5RUT+3Fh4eN2ZKFrG4rjuw5u/TPKXQ
QAeDW8y8+43Ww8MTxoeFN4wPiw90fsSviqg5K9fD4w/Gh8WvA+/3yzYCG+Dx
n6OboyjVvgGePlr2qp3oOITgz/B9mPf9L4J/JDdsz5WSjXD+jb8Cyc4bEPwP
vac5N71G8Fnk2jYoqG+C8yXWOYT3JyH4Bna///6di+C7nNu6JOcmgh8RV+B9
W2QzBh8AEUDKJA==
       "]]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[{{66.86769008876047, -5300.882240909836}, {
       67.53929096515813, -5360.314472488833}, {
       67.76315792395735, -5360.314472488833}, {
       67.76315792395735, -5360.314472488833}}]}, {
      AbsoluteThickness[1.6], 
      StrokeForm[{
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[1.]}], 
      EdgeForm[
       GrayLevel[0]], 
      EdgeForm[None], 
      LineBox[{{39.55592111525541, -3339.618598802983}, {
       40.227521991653084`, -3280.186367223989}, {
       40.451388950452305`, -3280.186367223989}, {
       40.451388950452305`, -3339.618598802983}, {
       40.451388950452305`, -3339.618598802983}}]}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction -> 
    Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
       FormBox["\"x,y\"", TraditionalForm], None}, {
       FormBox["\"t\"", TraditionalForm], None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], 
    ImagePadding -> {{47.333333, 2.462585}, {31.333333, 0.5}}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
    PlotRange -> {{-2.0833333333333335`, 
     102.08333333333333`}, {-7697.4869310405265`, 9393.73701699681}}, 
    PlotRangeClipping -> True, PlotRangePadding -> Automatic, 
    Ticks -> {Automatic, Automatic}],FormBox[
    FormBox[
     TemplateBox[{"\"x(t)\"", "\"y(t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.6256846244463005`*^9, 3.6256846390020466`*^9}, {
  3.625684682370006*^9, 3.625684723492484*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVjn8403kcwG1cXS5SJHWlTKW6PU/y65TyfSeNC2E1+yodTbPFZNps8yN9
H7lQYd2Vkh/z85SuyK/ak/IxpJ7c2emHLA/6IdIPCxti7dwfr+f11+t5Xjas
GDqbbGBg4DfH/6Zk60oLrZvd64rHP+j1EvCKrVgQzZVhTH8GmTMjgcBX1OwN
3CpsarbB6h+tBIJyRwPncZuwbXjC7vxPEsA1AY4aTifWakqSub6UQHApqewj
px/rTjSlxzZI4MDX4JBhziimYWy885onAdW6067vOHpsu3FoaluPGMoTSd8M
D5nBS5VDxOMrIjCplVVV+FuB3pJVNMGPg3zaLHmLyRrYzKWd0vgKoZCV8sbS
ay2IbP6ocjETwI7ioSOPXDeAJ83NKW84Fh5m/ZlndJIKm574kOEqH1QRh38v
x+3BcYQyJnl5DGTLQu2q/Bxg9Xds6R0pD1SyBct0PCdwU4ubJRaREC63ZW7h
ukB4zc7SkwoOFCTyICrYFUoL4547J7HBbykr9b1wGyw+mJDPMwoHH2i32svb
Dumfnc1HGsKgyaNn/mSmOxwoS92qjAmBMe1CZRcd4FlT7OimDCZQl7I9C3x3
AiejY575JB1sZObvMg56QOW782lThr5w78t01VF8F9y1jGgdVHiARbVLRVSk
JxgvmrlcKd4CLQpjAV+8G5QT60L62kloRaElh3ucBu+f+FXyLjkh6qAkPSXF
C4YdveM/gicanFjSlU14Q41Nlmp+ph/S4p5qWfwvcK526YwDYx9SbOhw60rb
A2/rPd4M0HDk3Hy2avKUD9gakyNJb0NQeFtxAHbRF0j92WyzsTA0ssr/QUax
H7zIqmvlR4QjK8zpSHveXijjUARnqtmI1BGz2e66P3jwm7JsqVz0UBq7eMf+
AFAWl0/HnYhEjYMiDUcZAD7XbMyXt/BQFt9ObcsMhPyBjly3bTGotn88uedp
IBwrGrh9toWPGlKj1q45RAcJ93iwnHwcmZjqD4X10kHXerWkhSpA0p19JErw
PhAt3LRLGyBE6kpuo3BgHzz74HFlODMOlU2Z/tD86364FWqQe7tehJyTwviF
Q/shOoqxl6YVo/FrOkwXzQBbluaAzj4eGTU2lDI+MID5aeui80EJaNzwR2tM
EATxZpYJby8kImf7PCplLAhMH+acs7ifhErnccpPH2NCTiRLy3t1Ao0u6XNK
0jBhQXmb5W+rTqJsw1g8SoDDrDxidDuFQJ7kT5UFcTiM3CsRdq4l0JTBUV2n
GIfnzX3Th+0IFPYtrMQpCYfqR0FGaVQCOUwHfNSl4sDtoS3/14VAzz/bE9Ic
HJ5Ord/F9iGQtUpdUS/H4ebPQzmZQgJ1veB9HbqLQ76b7co1YgKldQ/7rriP
wxkstLgmnkDqpwNfkhU4HPHqvt6dTCBFp9LN+zEOK5ntyCaDQBFt1Z2qXhzS
RRUj9QUEWtFKpZj04yBKeBPjXUSgTsVVIfZqrk9erVGVEMgVFS0vG8TB/fQl
vb6CQMZ3peHRn3HQXkyz2FNDoPvyhQ0yNQ6vc1tye+sIJLiT/n3XGA7KAr11
zG0C9dYTN1wmcfirXLzxQiOBpHWzeu40Dpev1d5c30Sg3bUSet7M3M+NUUd5
M4G+3poo+1s393PrJ7lPK4FuVvMn9XocWPUc974HBPoPvZ5hsg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF0GtIEwAQAOD5wNKclOUjI9Fp6I9BaiYj002bj9LpXD5mZS1fm23mbJaG
YmLig6iNoCCWW7bZyqgZpiSa5so0MiZDKkV8EFMr0/mYU3Ougrw7OI6P4w7u
vDMLWDnWBAKB8Tf/VZLYrJB59oQT/kdMoco+nyenbjlpkiz256nBqffmk+x4
3WC2kXnIyNWC0xVWylnuOPjUevqZGe48eORANWWKawE3llpt2mTspG2Z2CJX
qxLdwfejN6wDiV5gWWblN9cYX3BYw3T2B4o/uP/WI6ntNTJ4JPf87UZ2AFju
ds5PzQjCvtzezSwIBme1+6QF8kLA9aUCGj+dAma4ZFZ9LzoCjqP1uScIjoK7
I4e3mW6GgxdXHAd1LBqY7JJDr4+PAHvLd0/VnY4Ev15YU+exj4H3NIeo+Bfo
4LcaB5GwOArsIXPl8i5F4359SW1lZQxYv+ysE1fEglfYdIP86nGwxn8gVFdz
Any454badD0O/9HbwKTeiQf/2J/4vq6BAXanBmf3SRPAVgMFB/2eJoL7JYW7
wpKZ4E79FSN3EH1L6GfwSUsCt4wvlQ8Poduq+L5eGSww0cmSwRlFSyLGrEjp
J8GGJl5n0QRaueq0o+dsMt5XxhHKptFLT8xUc34K2LazTZHyE71ks8+TKkrF
+QApmbSIVthxG6svpoHnnceCy4xosU0hmy9ig+nWv5rqL6NXCXlmbTGas8l5
GFyGDlpjzpqr0J/nAiokd9GeIwZVazta91WwPt2BrvkyE+/RhTYMTSyUa9Aa
7WBo7Ed0bm+zdmQU7fGOTCKOo7Wax0XUSTTlzYO9Sj3aoUOSlT+H7mp3bJMb
0KJXtdt1i+jR1opnISa05OWGhbeGjmopYUl/o9dfLCs/mdHPm4UmiwX9B0zK
IxE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"x,y\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100}, {-536.858517465804, 399.999980880438}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"x(t)\"", "\"y(t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6256842612436047`*^9, 3.6256843546740375`*^9, 
  3.6256844425637636`*^9, 3.625684541824092*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF03tMk1cYBnDKbcyJc4KFgENoUUxlA1yLOC7fW8alUC69UyhILcVyKQID
xUW3MUQdAYU4iWxgG8KgKgYIZjIGZlaj4GSIxCyjMYpxCNscdFxkGCrb4unb
P5rml+877+l5+hw/VbEo197Ozi7nv8//34x6S5vOxxiVB01hfYOM6xkv0zNn
NHNUe/Rrm7adCHumWaOqua+9xYlZZwl1AT55v/0I7ZVD1kZIJk4/N/aLVOYO
cmLXK/puQ6onqIkZviMmR84WsO7XErdqH+LqC3uJz0uoBSaLASpinarqKT3e
H3KJZ2kcfzO1HTKJI1un1XfCdoCQ2N4z3m5awYIE4uHTHc2OnwdCCnFUF3sy
oOl9yCA27d93pl0eDAriCGoykyUOgTRivUd2QHfyLhAQDyrYW2VZH+A8k/5N
D4uWjfvrLtN3nyvgQCpxTj8zLSQvFGKJK72G+aPK3RBjPe8RLRSmhwGP+CBP
o2Jp9uC85M2q6t/LP8TfN3Lp7GhzSTjmyYchzxRtBOQTH+cKGhifRmK+P0ZP
vLF8KgqyiEVNK+LRryk8//yL9WPjIsDnbzvvWff9PZsDN+fGnE/iYt7bMyIa
3R5wIZ3YT+/2rEYRjXkVDzvfXZmIBhnxtb9XuvPlH4GEeEbQ1FnwxGb3nlBD
YUEMrtf2+7rOmmOwTzdvrCsrqYiFROIDPRuLni/GYv+8dHRN3sdxmHebcaji
4Ms4nBc4dfjLqqp47JfLX7Hv1dB42K+pxU3j9ZU8yLH2q2PnEw8LD/YRv5DH
mPWfJOC8h+BC77dLxD7e2DESPn4yEfNfXexc+s2JD/uJOcba7uVjfNw/6Sa9
snl9Ekit/bjVKqAak/A8HaWHa9XeydiPP95NvV3TavMXXdzGCz4pkETsSbHV
Q80pmGed03hCBTMV59FGioMCOlMxP/XAWcmMuwD7O9xQ+k6kRIDro8PLj4nO
CLBvg1OHljRjAsxj285787fchHi+0yUBZmaaEPPwvXCq71WjELKJrzxe+Gzi
gRD7xu7tvr/qKQIl8dXqQn/fLJtVCRzu9RYR9s91w1qW8qEI+zZqmA0yeokx
vwbuIxojXYz3Ew4xs++2iLE/5kt5g+WTYjzvT/cHnn6zVQJi4m//2fCWca8E
/Kz9+6HvWlCbBJ5T5P87qizRTUtgjtjdLejXn1lSoJP3Fy5aKEuRFPdf3WUq
vXhZCieJHQevtkn/lEKP9fnjGWVikAwGrOsdvH2oMhl8Zb0PXor2nl4Z3h9O
cHMgY95mrTctXxKchn1sc9a0nzhg8506RhGt1+a5TY/YR5dspmoNt8vYcnS9
Q6m8sEyO831MZsN3/TZ39ZQsr63Z/C+VTMuh
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF0GtIEwAQAOD5wNKclOUjI9Fp6I9BaiYj002bj9LpXD5mZS1fm23mbJaG
YmLig6iNoCCWW7bZyqgZpiSa5so0MiZDKkV8EFMr0/mYU3Ougrw7OI6P4w7u
vDMLWDnWBAKB8Tf/VZLYrJB59oQT/kdMoco+nyenbjlpkiz256nBqffmk+x4
3WC2kXnIyNWC0xVWylnuOPjUevqZGe48eORANWWKawE3llpt2mTspG2Z2CJX
qxLdwfejN6wDiV5gWWblN9cYX3BYw3T2B4o/uP/WI6ntNTJ4JPf87UZ2AFju
ds5PzQjCvtzezSwIBme1+6QF8kLA9aUCGj+dAma4ZFZ9LzoCjqP1uScIjoK7
I4e3mW6GgxdXHAd1LBqY7JJDr4+PAHvLd0/VnY4Ev15YU+exj4H3NIeo+Bfo
4LcaB5GwOArsIXPl8i5F4359SW1lZQxYv+ysE1fEglfYdIP86nGwxn8gVFdz
Any454badD0O/9HbwKTeiQf/2J/4vq6BAXanBmf3SRPAVgMFB/2eJoL7JYW7
wpKZ4E79FSN3EH1L6GfwSUsCt4wvlQ8Poduq+L5eGSww0cmSwRlFSyLGrEjp
J8GGJl5n0QRaueq0o+dsMt5XxhHKptFLT8xUc34K2LazTZHyE71ks8+TKkrF
+QApmbSIVthxG6svpoHnnceCy4xosU0hmy9ig+nWv5rqL6NXCXlmbTGas8l5
GFyGDlpjzpqr0J/nAiokd9GeIwZVazta91WwPt2BrvkyE+/RhTYMTSyUa9Aa
7WBo7Ed0bm+zdmQU7fGOTCKOo7Wax0XUSTTlzYO9Sj3aoUOSlT+H7mp3bJMb
0KJXtdt1i+jR1opnISa05OWGhbeGjmopYUl/o9dfLCs/mdHPm4UmiwX9B0zK
IxE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"x,y\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100}, {-9.368585365854708, 0.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"x(t)\"", "\"y(t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.6256842612436047`*^9, 3.6256843546740375`*^9, 3.6256844425637636`*^9, {
   3.62568454189614*^9, 3.6256845527403874`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF0GtIEwAQAOD5wNKclOUjI9Fp6I9BaiYj002bj9LpXD5mZS1fm23mbJaG
YmLig6iNoCCWW7bZyqgZpiSa5so0MiZDKkV8EFMr0/mYU3Ougrw7OI6P4w7u
vDMLWDnWBAKB8Tf/VZLYrJB59oQT/kdMoco+nyenbjlpkiz256nBqffmk+x4
3WC2kXnIyNWC0xVWylnuOPjUevqZGe48eORANWWKawE3llpt2mTspG2Z2CJX
qxLdwfejN6wDiV5gWWblN9cYX3BYw3T2B4o/uP/WI6ntNTJ4JPf87UZ2AFju
ds5PzQjCvtzezSwIBme1+6QF8kLA9aUCGj+dAma4ZFZ9LzoCjqP1uScIjoK7
I4e3mW6GgxdXHAd1LBqY7JJDr4+PAHvLd0/VnY4Ev15YU+exj4H3NIeo+Bfo
4LcaB5GwOArsIXPl8i5F4359SW1lZQxYv+ysE1fEglfYdIP86nGwxn8gVFdz
Any454badD0O/9HbwKTeiQf/2J/4vq6BAXanBmf3SRPAVgMFB/2eJoL7JYW7
wpKZ4E79FSN3EH1L6GfwSUsCt4wvlQ8Poduq+L5eGSww0cmSwRlFSyLGrEjp
J8GGJl5n0QRaueq0o+dsMt5XxhHKptFLT8xUc34K2LazTZHyE71ks8+TKkrF
+QApmbSIVthxG6svpoHnnceCy4xosU0hmy9ig+nWv5rqL6NXCXlmbTGas8l5
GFyGDlpjzpqr0J/nAiokd9GeIwZVazta91WwPt2BrvkyE+/RhTYMTSyUa9Aa
7WBo7Ed0bm+zdmQU7fGOTCKOo7Wax0XUSTTlzYO9Sj3aoUOSlT+H7mp3bJMb
0KJXtdt1i+jR1opnISa05OWGhbeGjmopYUl/o9dfLCs/mdHPm4UmiwX9B0zK
IxE=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"\[Psi]\"", TraditionalForm], None}, {
        FormBox["\"t\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100}, {-1., 1.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Psi](t)\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6256842612436047`*^9, 3.6256843546740375`*^9, 
  3.6256844425637636`*^9, 3.6256845419691887`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eq1", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"m", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], " ", "\[Equal]", " ", 
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"y", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}], 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["F", "x"], "[", "1", "]"}], " ", "+", 
     RowBox[{
      SubscriptBox["F", "x"], "[", "2", "]"}], " ", "+", 
     RowBox[{
      SubscriptBox["F", "x"], "[", "3", "]"}], " ", "+", 
     RowBox[{
      SubscriptBox["F", "x"], "[", "4", "]"}]}]}], "/.", "rules"}]}]], "Input",
 CellChangeTimes->{{3.6257296040205927`*^9, 3.6257296047216325`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2050.`", " ", 
   RowBox[{
    SuperscriptBox["x", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
  RowBox[{"9602.8`", "\[VeryThinSpace]", "+", 
   RowBox[{"2050.`", " ", 
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Psi]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}]}]], "Output",
 CellChangeTimes->{3.625729617934388*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eq2", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"m", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"y", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], " ", "\[Equal]", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "m"}], " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}], " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "1"}], "}"}]}], "]"}]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["F", "y"], "[", "1", "]"}], "+", " ", 
     RowBox[{
      SubscriptBox["F", "y"], "[", "2", "]"}], "+", " ", 
     RowBox[{
      SubscriptBox["F", "y"], "[", "3", "]"}], "+", " ", 
     RowBox[{
      SubscriptBox["F", "y"], "[", "4", "]"}]}]}], "/.", "rules"}]}]], "Input",
 CellChangeTimes->{{3.6257296040205927`*^9, 3.625729611129999*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"2050.`", " ", 
   RowBox[{
    SuperscriptBox["y", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
  RowBox[{"0.`", "\[VeryThinSpace]", "-", 
   RowBox[{"2050.`", " ", 
    RowBox[{
     SuperscriptBox["x", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Psi]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}]}]], "Output",
 CellChangeTimes->{3.6257296239257307`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eq3", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["J", "z"], 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"\[Psi]", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}], " ", "\[Equal]", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["l", "f"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["F", "y"], "[", "1", "]"}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["F", "y"], "[", "2", "]"}]}], ")"}]}], " ", "-", " ", 
     RowBox[{
      SubscriptBox["l", "r"], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["F", "y"], "[", "3", "]"}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["F", "y"], "[", "4", "]"}]}], ")"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Omega]", "t"], "/", "2"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SubscriptBox["F", "x"], "[", "1", "]"}]}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["F", "x"], "[", "2", "]"}], " ", "-", " ", 
        RowBox[{
         SubscriptBox["F", "x"], "[", "3", "]"}], " ", "+", " ", 
        RowBox[{
         SubscriptBox["F", "x"], "[", "4", "]"}]}], ")"}]}]}]}], "/.", 
   "rules"}]}]], "Input",
 CellChangeTimes->{{3.6257296040205927`*^9, 3.6257296142301764`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"3344.`", " ", 
   RowBox[{
    SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
  "0.`"}]], "Output",
 CellChangeTimes->{3.6257296270519094`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Eq1", ",", "Eq2", ",", "Eq3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "\[Psi]"}], "}"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.62572968160003*^9, 3.625729716504026*^9}}],

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"2050.`", " ", 
       RowBox[{
        SuperscriptBox["x", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
      RowBox[{"9602.8`", "\[VeryThinSpace]", "+", 
       RowBox[{"2050.`", " ", 
        RowBox[{
         SuperscriptBox["y", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"2050.`", " ", 
       RowBox[{
        SuperscriptBox["y", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"2050.`", " ", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Psi]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"3344.`", " ", 
       RowBox[{
        SuperscriptBox["\[Psi]", "\[Prime]\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0.`"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "\[Psi]"}], "}"}], ",", "t"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.6257297179401083`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"breake", "[", 
   RowBox[{"t_", ",", "\[Tau]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Tanh", "[", 
       RowBox[{"20", "t"}], "]"}]}], ")"}], "/", "2"}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Tanh", "[", 
       RowBox[{"20", 
        RowBox[{"(", 
         RowBox[{"t", "-", "\[Tau]"}], ")"}]}], "]"}]}], ")"}], "/", 
    "2"}]}]}]], "Input",
 CellChangeTimes->{{3.6257303782788773`*^9, 3.625730416833082*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"breake", "[", 
      RowBox[{"t", ",", "1"}], "]"}], ",", 
     RowBox[{"breake", "[", 
      RowBox[{
       RowBox[{"t", "-", "6"}], ",", "5"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "5"}], ",", "12"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.625730098193857*^9, 3.625730132774835*^9}, {
   3.625730200314698*^9, 3.6257303154102817`*^9}, 3.6257303579497147`*^9, {
   3.6257304292067904`*^9, 3.6257304885461845`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJxF1nk8FV8UAHClpES28p7KlkGKFMnyZu4llEKSPRURkhaS/JCQLSlEWUqI
REkUEi2yZU9E2YpkyfaU7Ntv5i34g8/XOffcOzN3zlzRk+cNTi1nYWHZi/8i
/oomvepbWOArZGH8THekiaRNL7le6L6pwdiS/WK9y5P7l9wTrp2q3bjkJ96t
dhFPlqxwfKFHwmjJWuR93bpPeBdtqhK55vsenkWHe2/gGStYt2iVlvzR9+s5
F/32eovkOsU1i15Yrsd5OXDVojfWUzSs41csxYc7rTpLli1a42mO1Yji/Hum
MfEHDyWcJhedIyerdYtzdNFuWUbn5IMHFk01pdw9ytexaM+4cs7Ya6WLFq56
goy1lwOmPxmd84iJ6Vx0+2exPoM9g4tWm3EJvNI+uugN03JKIujUohV1xzXz
1y0s2sZXcm+09XLI9Hl+lhcqXCsXHa9/7JPp31WL5im2VT3+aM2iC3pfF34+
wLlozdb97h383IuuaQ8uqDrDs2j73eu+uPzgXbSwrdKUoQ4/wwkUPWuH/SmH
l+xleT9qwnjJbeYsirFWTKdS1pru8h+wZTqTompk84XiyHQ2xcHg7pZbTkzn
UWIPlTv/cGW6kFKpM/1BzpPpEsqU9nYeXx+myylS+45bNgQwXUsx1Qh7Lh7C
dD0lUK1o/lI4002UXOyf7se7TLdRelQl4kj3me6krFc2HTydyHQ3RUMxWLUg
hel+iov8m+C16Qx7UylJcsPNx7KYHqXUy4hsfZ7LzJ+kLN9m4Mbyhhmfo+yU
8vt4+APDcDlqieRuSCpj2JINDRPrO/WviuEEDrRQWDBH8zOzHg9K3aSzIqqJ
4Q5+VEjQ60hfK8OFZFRPIPOhcifDmcLoFf6ff4J7mPNvQdN5+NXaBpj1pNA2
Lq0wmT8MB8mgHGvdfniNM7x9F6qy+ols3QzDFoqoA1vbFdFl6xn5qmgMK1eN
MxvDfyFazgI3lXAw3KKBTs45nVnPw3C6Nio5k5Rvu4Hh6EOo8WTj6ryNDDsf
QQPGVpmtFmWYaoLm/lVONZdg+NIxtJt6ZuLpNoZFT6L8Q3Fac3J0e+vbohr9
n+7oKTJ8+Qx6sXdZd7wqw70X0Ie/5BX+QIZrXdD6zlPX1LXohvf/Q5f9iKqP
OMioH3AVlWurEO3WZ+TbXkMtm2cuKBrTLdIZiIY2yRQGHqXb0uYm+q7hxLpm
S7oLN9xGh+vCj0vb0t2x9y66ubb4mccZuuvs7qE6VWOz1RcY+e0JqGe5pI6Q
K93RRcloeqnZvfMedIfdTENbi270F3rTXX7xObqm8K0ybwDdpkdfoipvqUHW
N+i2aHiFns4X/ZYdRrffkbdo9Ksjkmx3GetdW4SWZ/u7mtyjm3dPGTqR9ao0
NYFudtMq1D1Pa+3ZFLp1RD6j8+8aDXam0z1/sRH1LbWJGcuiO+RHC8pWPfrj
9Su6m750oMH1vhJeb+m+vL4b5WzmOateTPeW0/1o2I+El2wVdKcHj6D8PTum
K2tphmF5/9DowXcw9AvNhcX/ptBNo7qBR1roLldjwRKm2moEOujj9x5bgW1h
ceRv66aPP+W7GkthmzFPGKDn6/5bh0lzBifa/KHnB7HyYxl85D6pCZrD5nnI
2C7BVNmhWZpFfOyEsVyRPZeylm8grG/6dAumLFlWcImdZqnAJCnsjYzRchUu
mvtE2mUxqPBr/zwfzZRnhvJYicrF0CIyzZ7jikrYfrXlTQHCNDuKGWFY9b7w
TQcRmtd4L6hjh/RErNdto1lWo3ofVm/4PK1BjmYJj0+6mPFRbCRKkWbxyqcG
WItVjaIFhebl9tYm2HF7iysi6jSXiugcw36eGyj+tY+w9wZ/s5PYqUvua9J0
aW4zm7XF+jxWHz57hF5/dZUj5ugbHbXTjHCh3xN2Z2wkSPL72HFavIwnyhVz
Cc0Vz7chDA9K63hik3c0z3g50OIyCq99MI/7X7LUL9DcGygfgM0/tJ5kcyUs
Yun+6Qbmm/YXq/IgzN298Uw4xpbp4x/qQzjhWvbnO1hwLnf1kUDCYZlUw3sY
19t4XtJN2nruHBVKxMKLZc3abhPOGwt1eoTxV76NT4gmLBXv3fYEi67T6bF5
QJhffqg+E9v0tXX71mTafAm8fDlYQrvDxaE0Wv3bW2zzMfFfU6+znhO++6wy
qBB73B/E4ppDuO6rQm4JJv1HYJ9KAeHgz7V/KrCMiZSb84WEDzQNgTps1/zu
L0VlhAPzhs2/YLkrSgUDqwnrYm5XmzEVDkOrg/WERw4njPzA3vJ0PV73jbae
uj3LfmGQ5Dzc0I7bu6ief91vrERo2e7oLtr1VnyxpmL7kTAPi9+4C2M82dJG
septwkUiVCLf52FUwiSmvyuDvfsfbrjthl3zPNaghB5Km8adYJStZ8AKjEH1
nbMsAnj+6AhVnh20aB5t28mGu/DuSrXDXOC4Tr/YOAfuuuonC7O84KfBf6fz
eXCPzF5dWSEA6rMeeW0SIPLdHjeYbQZF3PUR+D8gy+TuZfMbxcCL8/OpHaK4
TT/vLjCVAEm10u/UJXEHSU4rR2wDkTImDcnbcet/7LFj3Qn8Qq71se3CrbSR
02ReAbgMPJ+z34M7mepxq1cZ2Bxo462i4O7rK88fB8AwjV1KRh23ecUK9by9
QIN9Nxq6D7e0Y2a54X6gYGdl8EcH9zQfVWilHhAvu2l3xAB39uX4Cj8DwI/k
e+aY4L7GZp35zRis8OsJFziG2/KTPdcOC/DvJ+/j/07itu7dO21lBbrVwJtW
O9ylImyPLpwCTQlnPqNnBaA3f5zh+AUHULYQ1RPvjNv1mNQJ3Qsg93jJzDI3
AVjoYnQRJbuAlLcj3DZX8PFvf3twlbmBu5s2S5T54vH8gJ7tgV4gwENbVSpI
AMLlQfKPa3yBa8sl/eCbeP71qlkHyUBgq/zw1OBtvH4917a9V0OAcXStu160
AAy7Ip7yKCAcaE1Mh2bG4S6KuhMUfAcoGks+4k3C68kaz7+6GAskc47ku6QK
wG8sEZiQcgIg8Xt/anomAJU+SDbq/0gC7BfTfym9FICpvSaJZrqpYPLzt6nY
PAFoujt6bCT1GeiTW7lu7q0AzIt7930v1wvwLXSn+Ili3LcF7h8dyAHlw8eU
P5QLwI73RT7X/PJBnm6w3pZafLy0+q++v+9BanqutX+DABxJVs/QlCwG0Rxd
br3fBKDhI0uLVU1lIMhh3S3t7wIw0vXrORbOKuBWoZr0tEsAiigFLHTWfgKn
pezzOH8LQOk7FebCIfXAPDCy5vywAOQ1dJpBzjeCAz2FPz+PCsAVNR9aRQK/
AelkMufdeQHYdUivt2nzDyDIqiU2yUqCbKpDWB+lE6w56bzHfDUJeupd2zDT
9RP0C1dZCfGToB+XaqvbTDdo8Zpw9SaT4HlFdsmU472gsn1LyE8hPP7MYkok
sQ/kU/QTNcRJUNQm2Ujow2/w9J5nbspWEnQXjjYJetcP7k+nVrHvIMHKnSd3
J8UOgBCzxg4HBRK8fLZ0KNVkEHjmLRuvVibBFRuEfjpMDgJHAVmOHYAEj8NG
l+XeQ8DC1VwkXIMEMSxtf+SfIaDTGLB7VJsEL+VoNyH6w4Ci8PKA0SESHFcV
bfR9MAy2R/w48cqQBHtOo7w7fgyDTX85LpHNSfCacpquFT8VrD2sFOxxggSL
7vRtXQGpYPa5TXy7DQk+e8r7Ld+aCoa4wrOBAwmejF5X0etNBerLRh4FnCfB
J689WvdFU8HdUb2oGhcSdIh81mn7lAoGup8F8buToGr6PZlVBVQAv611P3qV
BKvyrr6s+EgFkZVnzjz0I0HvqCgD+Xoq+P2m0uL3dRLUA17ns1qoAHu+VU8u
FI+r5vfGdVLB7cQgcDmSBAtbvB3Ve6mgJ6JX7l0MCXLL+Ri1DlCBaoCW2Mp4
fH0OknMxVCoIc3vEp5NMgpFcgq9S/lLBL4cVKyPS8PxVBhfExqhA+Zj1eHMG
Cd4SvMomNUEFtw4V9Ypkk2BIeerJmkkq+Kkm2mz3mgTjvh+wEp+mgj0K3pUZ
70hQvi8+THWGCkIkfhSMFeP7hdOhWmiWCjpI2DNKBe5e47dfce/miHtwrZYE
D9zmVTs3RwXBczOhlQ0kWLcBe9+H+zvV3IenmQQNWwrP6cxTgfzP186m30mQ
9/ShW3G4g76QbOK7SJAkcfX2D9xtZZeNevpIsGC/wcH1C1Qg97pJS2aYBFlN
a5er4fZ/ulvJZRTfT2Pdd2xwt8RFbi2YJEFqWFGQD27ZsFHB5fMk+FRVWyAG
9zVfg7XarGToePWmejruby5Zc6HsZLiRtaS1APd2O25qEycZjnZsu1mO28fs
fMdmPjI8GnCosx5308HazzYkMrzNOri/Fbc0JlP8dDMZOnC+F/6J+6pcSPZf
MTJMXnEhsxf3F7GBR8pSuOPe7RnELbX+QJS3DBkWfSX3UnFfWZUW9HEXGVp6
F/T8xV0/tcqdS4kM9dATJmO4JQZtzxihZLij4fGRCdzu30st7quTYWSn2p9J
3J/qxPW69pFhsVud2jRu8eJrQFoXr//g2ZEZ3G45P+WcDMgweDJg1yzumsdq
Ynkm+PVqtvcSFotN4FuwIMMXZEePOdyuIQsrtE6SoctBr1HCVV7Hx0PsyLA2
fpfRPG4Rp7e9DY5keDzrZTJhF+tNzYLOZOh35lQ34Qojj0qry2S4gnON4AJu
of0tBameZFim2aFB2FlF+RnVhwxd8wrsCH/cHv1AMZAMvQdIfoQ3CU+EXgkh
Q9I1mXuEL/AY+5SEk+HVS2PPCJew5jhzRJFhWAX6ljB5nM/G4D4ZThs+qyB8
rs/ZKCaRDH2bqxoIF7V81upIIUOuT6vaCAvUyClJppNhKLngJ2HH96Fbz2WR
odF32T7ChVnDgjm5eP2HDwYJr0/WXTtbQIbcjSojhN/Frx7L+UCGFxesRwnb
3ittP/+RDLNm+scIr4vyKdtaQ4YqB0cmCOfdRp931ePPf+DmFOE1wTneJt/J
sI2/c4awhY+MQdVvMvSIODZHmOXC5rEXLIJwk9ngPOHk45zRsQKC8INR6ALh
AdWh9tOagrBaZojmXeSaLcoXBaFg6yzNhQ0hz7/WCsLg3ws0H7qlo+oqvRFa
LtA9y31Z4mzjRtp5Hj9jgScRiTw23psW3QnP9r1W3rxo0rDS+3WjS35sLcG/
Q1d40VvN2vLV9UUWzf5U66sOu+ii3dZYfOTOXrJTJG+S/DmxRU8Gb1z5V3zL
orlDP6k4fFqypYR7VeM2cbjAWH/WW3ELtSBxmD9F97tqm5hTL8Whizbdla3J
Tde/i0M/tQGa9bs0xjb+E4d7N4fR3NT/iy9jNQJ/BSbT7nfeYMg93nUIlDa1
nyUcM6yw5TI/AsW9AqYJu4+0PWklI5BdJpX2PC3++u2Cwgj026xNe/66o6au
f0URGN6jS9sf2L/t+cniCP59iKftH9kxlnljSQSqJPDT9pfw+Be11dIIzKt2
o+0/7olU/4LtCGTRCWmlPf9Jz4qzOxC4czsLbf/+mdTnFNmFwKBJ53LCP6fE
D9crIFDxpGMBYX8NXtbLexDY4JL1lLBU6EL2RhUEzjaYRxOuah60LaQgMORB
pDft/RBvIZ0CCPQxM7cmzHP+Y+VqdQSuqTwDCGe/zvbM0MDXowb4CJuseCh7
ZB8Cgz+MtBHv97ReaMeENgLtD8jEEo6L8bx9XweBPcfJ+wnDX6c11A4h8Ere
zi6if3TJmox3H0agVKW4HeGA/zRSgw0RWHY+qZboP1tLdprvMEGgQrEEH+Fq
LuG1X8wQ+CkmdTvRv86brX3nZoHADfcO8hD9jTd56vzmEwjUl6FmE/0vZ7hH
tMgKgZbRT9iJ/miq/KXB1gaBJ59vnf6He+baB38OOwSKrvjlTPTXB7UZezJP
I5CXU8KE6L9q5Pu/DR0RmJrR6TeA+5f19XtT5xA4sF25vgd3YIar7gMnBM6F
ZXN0Ev1+ynpB3QWBGj2cf5uJfrr3cFavKwKR3Z57PhP96hZmHfIfAo3un/As
w83XvG39Tk8EHhaTPvgad+4W8sdGLwQm+5nypeE2O8f2n7sPvh+5NbbcId7P
vFFpYT8E2qwMTvDEHc/a2VYcgN+/0Byv47jV9Wpv2V9H4L2IsovKuLujCyBn
CAJvaZH6OXAHdaX+zbqFQBmEi9qAfz+3yd5NNg7H7y9StTkUd63bNeOZCATa
mq71V8HtVHyBPeEuAl/AtYH1+PeZn+t4vkYMAq9F8b8wwP3K9KDj73sITBzb
EJaDf9/Nk5SEbj1A4JGPWmf+4eeBuSGkblciAutY0JWrcCco8fl+TUJgsVEy
2jVFBXuvsSh4piBQkO9jsid+vuipGeoWSUOgWHj4WPE4FVwntUaVPkUga12m
U8o//PtrXa7tkIHAitITZE78/PLpWc4MVxYCTavlX7UO49+PyYfPXr7Er1e7
PJfaj/fnvWEnTHMRyEm+VSDUg7/PN6/wzOUhcN9drQGFDio4+s2hOLEAf956
/e1/v1HBvJjpJa13CPz3iXsLRx0VJJ7VlBwoxONvUg4Kl1KBRt6u5tBi/H6d
3W/75hUV9C4XuaFQhsCOrPh248f4eUaXE20uR+Am/YynmhFUIBM9PXylCoGx
6W5tb9ypoO5nb4JYLQKnhUXtP1pQwUWZRoOPdQjMl1l5DSpRwQa3ohWODQgU
qnd4VM1BBa+LnudyNyEwSYitsL5xGFhwxtnnfMPnW3A/6ho5DOZNggXNWxGY
LXGoKEJzGCQ+vFw9345Ap0Ln2vc9Q2DYiW+6rQPfv7arPV85DAGK2nPJgi4E
fm2wUl7fOAiucx80iulBYAL/fzfWiA2Cph89vpd/I/DlucNyfboDYMtz30yj
QQQ69l31czPqBxe8hL7LU/Hr71Phd1H8Dd7q5nPw/kWgWhgfK/tIL1iz2Vh5
5B8CL7Y4aFpc6wEmg39saycQeLs0gn1+9BdILrgZmT6NQOPDt9w593cBYF5K
tWeRgPnHeiS/ev4AIVutNu9jlYDGm85x1wy2gpbJ2QMImwR8uHPZ9CHXb0Cy
PNqNdbUE3NX1dF5JphG4RCmkdHJIwGpl3os6ovXgg21dw3suCZiqXqifnF8L
uBQdlz3gkYB+A/ZzAzUV4OhK9h2e/BIQLsj7xXiVgtQvSRbmAhJwv+JYjdfH
D2AsCQQrCUrAjmH/n06Ut0D9YuurDZslIAuy/s+l/lcgTP1y9z9hCTiSFQjY
PV6Cdh4+vgYxCZgQ7bL+cfxzIN2ZAbMQCcgd13O3LSoNuGUeOBcqJQH1K6b8
q9OSQenVnntnt+H5Hgs2/ikJgPeQb8VBWbz+lKlWbGUsOCEkNLF1pwQsHH9j
1xhwB6QPvRZnV5CA3pf44w32hYOpN0YGPYq4s6IFf+feAFohf66WKONew2eq
qBgAIo7efPaQgtfTT0x6X+kDOqS3tnoDPG6/1S7ziieQmS5hP6GOx9+5Pa+q
cQXuFZaKqCbuNzce7AbO4GP0rPXG/bjt1Cj1O88Cfvvo8KkDuL++1O82swMn
9yi8/6qL+8D9gZfpJ8FztrrBHH3cRUbpT9qPgdnGM4KRR3CL7JLc3WkCDjxa
td/ZGPdaI+sQgSMgyiXpkr4ZMZ8HUhWgB37tBUmyFrilIjUP2+0HO/la69ae
wK3BuY3Ldy/w+uk632+Fe2TnKhk5AKqyeLdX2OAOmlIVH1YCJJ8Ms8d2uMME
Ey8NyYNT+gcC/R0Ifx+2b90BXgj3ZFufxQ0r7XNdt4KFYZ+fahdwF4qonDMX
BzrvNnOLXCRsOJGhIQJibr5G5y8R+ckuMcsEQY+F0Zk2NyLO42tSwQ8Utv+J
zvfAbanLrhnHDXxmQsqivXB7e3GIhq4BtZVS/1x9cLPsvXBaZSXYFFsiauRH
ONbx/gQLOH3a8pB8IJF/Nd5beAbLVZr15Akm4gJOH5+NYazs0U+oIYTv1NUc
+YPpf5X/VhNKuG+65cUAFpfyaWX6bcJa5sFberD+S2fkg+8QzpEcyOrEzv0x
2r8nmnC6c2xuG/bHER77FUuYIt148Cvm0iftHB5HuOhJZk89Nmm9PhBLICzi
9PBpLebxY+HewEPC3pVGP8uxefP+zOhHhJVyr8qVYL5NX0o1UwkHzdhaFWIr
Dd63/H1COMzremQ+FlSTRo1/RnhSrTwsB1urHblCN5NwHVXpahYWWuJFnn5B
mOWEoU06xgtPyz7OIZwwwbv6MXa34MhewzzaemL8Mx9i5D2Y6bIC2npkCo48
wO6/kDqb8ZZwBwfrvWhMRJbP92gh4UKOxPEILDlt7i57Mc3NzrvCMEmk72lO
Kc2I6f5g7ElCfeHJclo9l3EDf0x209vGdVU0x3Hr+mBZUY/739TQ1ndshNcT
U+C7vXC6juac1R9dsbxbnvwCDbT8iD/uzpjqGrutJY20uGHl7Fnsnf9hzOkb
zaT/DO0x9WWUI0KtNLedemuNlXpK2Fe10/yGdYUltn+S+4pbB83iC7NmWPXF
mXCki2bvL+uNsEPU7pT6bpplL288jNU71BVc7aPHXYoOYsY9+XXbB2iefOOv
hbVYPepuHqI5eVxTHTvWHjodMEIzd30KinWYuq9TGKV5JI9LCbP5YiPeOUbz
hVo/eaz30CHlW5M0i8in78AcqpT1VGdo7rjyYis2rCVu3TdHc4JVszjmVMTl
dodFknDdmX4R7B86FaLOSjP84bwRc3vdlUhdSbPlNs0N2IxCbe59dpq9I3h4
Ma/MvCptDppZ6g5zYsu3J3WMc9LjhRWrMP/HN8eSuOn1mnVYMfYtbmsO89Hz
bQ8voCEPTgrPr6e73n4K5RbUVXhKovt+3D804s4ebdONdA+9HkE38IgdXylE
t6z4ABobsvbiCxG6j6zsQYXYJwJPbKG7rL0TTbzWeX+tBN1Fc22o+EJV1msp
um/5f0VT3XPLbLfR7be+Ad0+ntDKJ0t3wkQt+tzpxkihHN2TwhXorqFLK8/J
0+19sgTNtbcU3KjIiF8vRJV/HdhRrkS3ZVM++ubEbo1LqnTLleWgsFXYTAyj
O+xJFlpsvObcJ8iY70k6mnF/i1z1XrpFXqagsT8pf8u1GPNNJaL+UsbZpdqM
+pfvoxfOnXct0mHEg++iR7ODlN4fYsSbw1Gt6cTpAgNGXCME3QkL3uQZ0Q1P
BqCbAr545Zgy4q990FXVQ/DFUbpZeD3RvzyrWJ8fZ1jFFf1uIlL61IrhWCe0
Ik45MNWG4Y4zaHaXgfYjO+Z4WzRhqyPHQweG3a3QG+f9ax6cZTjjKOqa8yD0
3gWGB41Qq5lXh6MvMmxxGNVR+8x3x5Vhz4OoUmB/Y/h/DJdooltqWKNveTJM
UUO5+Dab37jKsL4qOm2quCnIl+GE3Wj3g0Pf/fwZFtmJ1v2yT/AJYnobWiDt
e9LrBsPeCJpy4Z64xy2GWUTR27nZPZfDmd6IXpmtSXWJZBiuR+3Vex2copj3
gxs1DGKRORfLcOEaFNSSqQ5xzPErUWl++Sy7BGacBV1vrnPRJok5/zSFJeHU
bqsUZv4YZbDba+JYGtN/KF+3Rb82T2e6n1LklOVh8pzpbkrGq0rU8AXTHZSY
ua4F/RymWyh+e+c+6OYx/YVy/voGvwMFTNdRzD/t0Nr3julyiuZ6bXaND0yX
UOSOnqyEJUwXUjYmeoSgH5nOo7D1RuqpVDKdSWl3/lgvX7fk8ryOSLmGJWfP
TxnLNDGdQAkO3t4q0cY0C4viw/Auct+SRfuePNowsOS1siV2fMNL7no9PrD2
35JrF9ZlrJ5Ycr7m1gts00t+dEN9F+vcksM+H/23sLDk/wFcw1Oa
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6257301171959443`*^9, 3.6257301337378902`*^9}, {
   3.625730204976965*^9, 3.6257302458733044`*^9}, {3.6257302917359276`*^9, 
   3.6257303164723425`*^9}, 3.625730358710758*^9, {3.625730462656704*^9, 
   3.625730489893261*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]r", "[", 
   RowBox[{"t_", ",", "\[Tau]_", ",", "\[Beta]_"}], "]"}], ":=", 
  RowBox[{"\[Beta]", " ", 
   RowBox[{"breake", "[", 
    RowBox[{"t", ",", "\[Tau]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6257315338549724`*^9, 3.6257315356000724`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Br", "[", 
   RowBox[{"t_", ",", "\[Tau]_", ",", "\[Beta]_", ",", "\[Tau]0_"}], "]"}], ":=", 
  RowBox[{"Fold", "[", 
   RowBox[{"Plus", ",", "0", ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"\[Beta]r", "[", 
       RowBox[{
        RowBox[{"t", "-", 
         RowBox[{
         "\[Tau]0", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
        ",", 
        RowBox[{
        "\[Tau]", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], ",", 
        RowBox[{
        "\[Beta]", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Tau]", "]"}]}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6257312193239822`*^9, 3.6257312461465163`*^9}, {
  3.625731300649634*^9, 3.6257314226656127`*^9}, {3.6257315402193365`*^9, 
  3.6257315427994843`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Beta]", "r"], "[", 
      RowBox[{"t", ",", "2", ",", "1"}], "]"}], "+", 
     RowBox[{
      SubscriptBox["\[Beta]", "r"], "[", 
      RowBox[{
       RowBox[{"t", "-", "4"}], ",", "2", ",", 
       RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "5"}], ",", "12"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.625731159173542*^9, 3.625731200775922*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
/jrpVrVW+Mt6hmeukraUszw+2cxwtgnpW0n+rY0UhufOkSwKXPThXoZN9Elc
ZCXVh8NrPk3KypkSO/yXYcfjpMuZqZyjMwyXqpPY0yynE5YYxhBJacmS7Vc2
bGNYiWSc2FMizM6w7GESc1z0l3ouhlNlSMlRJuH+vAy7S5IM3wg+1hJiOFqM
tBJaf2vDLoav7CIlvArUzxNfqy9EOuN/StVeas18JIuu+InKgwxDWJKTwmrS
niNr9TeRAnyMrrqqrHkjKa49TfA3WDMTKVduc4205lq9pbxqL4tnnifWPJvX
00witp5Zy5/IW5ARmDlsuBYfy8M+sfn8wnjNA3l7Gsssui+vuSdPZb/YdtVr
a6bk6T5y+fXq9pqb867/+u0zZL3m+jznvQfV1e3WXJMX6Ow9/9ppzRV5CdWd
qX8frbk0L09M9ab20zXn59U6BO9677PuvvLRhrmANWfnLe067q8bsubUPJxt
tGZixLolSueXVqPWrWeTfOfLxzVH510v2ijGlrpuF8HLzaaZa8ZgEvJx2tz5
617COkjc/b3uLddq2oqa1703Z1/Idsq69a+2MlcMrTsxTa1TCrP9n8/qc74d
kFr3x6D3OAv3dfP9PZ8v47VuNx1u6/kX69bjcK7wD1v3nJvBs5yUdR+7zbbM
3bbuTujuQI7yjn8WHFOCeSbX/cFcgu/g6V3/vO9Ca666rsg/s3861niKffc/
O24y+YHNWPe94C2xh61E1/vjs23jhLjYP2MDqlVuV687jSRuouYt/s9d8+J6
dfJ7/vl9jEPFStu6h+zuHPYJkfjnwnObrKqhvf+c8lZMtuLouiO68BOlx9Zt
Y2VtX3Bq3du96t0yjdZtn/ku4I3NuqX4DqfdiF73VuNTDyxi142JvnbkasK6
G/eH5xgnr9vz6PL309nrbrv/o+5wzbpLsynBsr/WnbEyf+5Aw7p9fKRbJFrX
rRDzsltoYN27Bz7G8w+vm1Om6Abv2Lq7c2aGOafWXbXKk8Ixu+5czX02rAvr
jn+hLse8vO7A2otTq6vr/h/6R8Za
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6257311718422666`*^9, 3.6257312021750016`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fxb", "=", 
  RowBox[{"Br", "[", 
   RowBox[{"t", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "3", ",", "5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6257317044177284`*^9, 3.6257317081189404`*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     RowBox[{"Tanh", "[", 
      RowBox[{"20", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "8"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}], "+", 
  RowBox[{"Tanh", "[", 
   RowBox[{"20", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "5"}], "+", "t"}], ")"}]}], "]"}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     RowBox[{"Tanh", "[", 
      RowBox[{"20", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     RowBox[{"Tanh", "[", 
      RowBox[{"20", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "t"}], ")"}]}], "]"}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"Tanh", "[", 
      RowBox[{"20", " ", "t"}], "]"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.625731502675189*^9, 3.625731548440807*^9, 
  3.62573170881698*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Br", "[", 
     RowBox[{"t", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", 
        RowBox[{"-", "2"}], ",", "1", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "3", ",", "5", ",", "9"}], "}"}]}], "]"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "5"}], ",", "20"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6257314540464077`*^9, 3.6257314835710964`*^9}, {
  3.6257315638736897`*^9, 3.6257316068621483`*^9}, {3.6257316547728887`*^9, 
  3.6257316570630198`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJxF2Hk4VF0YAPCxZE92spuhqIgWUWbOUZRKURFRQmgvIXs1oqgU2aJUiLJV
qFDMXFsSsu9kz77v+3z3Dj7+6fk977nnvvfc97zNuTKWN09aM+JwuKfMOBz2
b3pOzl8ajT8Lt/InG0LplJtZs9/l9P6jI2u24fk0+6J1zYJmYYLK2Wu2m715
zPz+mhWVJShZzGuOeu0U7sHO97+37afh7pZv+N/Om5Tlt9Vx/m/L70yLJWOs
/9v89R3x3nSm/32foqx6/RkNWfW19pSCKYbp/73p98S1yr2DK07S4OY33Ltj
YWDF6RqTZ7+xPqesOk+j6b1g9fDdVRdo5I3cjjoOV12mkbi35uZHhlXXaAR6
qRK5cvtX3KzhWhLCcdVr1f80LEWma39rr3pA44ilUYw866rHNVQS0+y8C/pW
PKchMiUMux6tOIuBiIPO67WPrsbZiN2P6hreca0Y8hBLKtViGUt6ly0tREyV
CLtt4bdinCTx9cXZ/Vn6KzaXJXoln+GR4ltxxFbitfnvf+9U9qzcbwfxlLZo
QlPQip3ViXv9XJ33nV6xjiYRX9+g/VJ4NX6IyE7Yxz9b173sVj3iyLVXrUYv
VxxlSKxLnf+Yarpi83PELNxZN0GJFY9eIH44kqnj0Ny1bP6rxGdB4kKVb1ds
YUd0bHbvULFYNnnCmWgm/zfJH7/srBEyUduOeHe449/K83oTt2W+Pno8Ztnk
vX5EAZYlkY82y5beGUxc0DPr4pRfiReEEzvCqF+u9HbSrfz4HbGwQ9Ljd/yy
/b3jiSmK947LX1u2D2MK8aVTi5i34rLr7NOJHtmg999Qx/L4sCziJc6IVK2k
Zac/yifqG+K83t1adlJYCVHtrfkJxp3LXvhZRZTqzZK0mGin22RXE5Flp8wA
8m3Zb+Q6iEPuHt8lnZbNQeslVue3PbyjRje5PmaUmMmz36Bpto0eX5ycJkab
RMnsy6A7S1oLR3oSzTgc5k43OUOQhWQ3ZJk5Q1z2zoX1JBO13EdGtFbMrfym
AiTN+wSj1Cy6cTvfiZHkiz1lBe/TTRbIxZN4hDpH7Q8sG7ookKbPayEVzHTX
sRxVIVFOHd54wbcF80yi6x6Sbzf7V+kNdLNVtwKSqVvh8ebnzZh5+KO1SVs2
POl9JUB3XbvFMdJs1FGvMy/+Yn52YuwUqUCVS0pYlG7StIAp6UVh8feq8CbM
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
+aHERHx82c4nsolBcwLRAXxzdJu7fCdqHTMdZNuxbJiZQpx4G6l678SycX4J
xOix7nuTtsvO0oomGmgr/b7qvzK+7DWROdSBr/3zssmDwcQvfT9MjUtXLO1P
tCQyxJQMrcz33ZvI539oSIt7ftl2HsSc9qd7MhRXHO9CtNtdRVY5tuJWOyLe
R7Tww7UV510lVjSY80v6rviaFfG+4oezQQkrZjMj7iAPxnAUrVjkNLG9Yucw
uW/FUJ8YIOeqNs2+sDL/IeJ+5yyP6wor9tckjhWyFHXorMbViVESxwRMLq0Y
t5N40jbwXJn3qrcRGXPr3x/8sGKyLDFFUHokM3/FUJJoeclGfWfXqoWIfBmJ
9+PWLa6M5yHmrB8vkpJbMY6NaGeuLhiitWpGIv7LPTMuq1XPaVSsy/9w33PV
4xr3jblGZ6JWPaChknBy782cVXdqtC6Gev5rW3Wrhr9+S7Epw9KK6zTgOzmh
CulVl2mMTF49rwNXXaARoZMSSz2/6iwN/Vczo7vurTkJPvCSoa46ScM8sOjP
i7+rRmuwi1eYe3HNtk/exM3to/1v5Zq0ksrva26VXxI+Ur9mfzcti6yZNTv7
97jUiOHgqut23+bKNVmz8nkRlbtXVh2R6eOTYajuuma1Roa3n8NWnZTpzxyT
eyVuzT2KOj1y31edngmN+rnaCladlfmC/EwlvG7VeZnxPKwucb2rLs6kRtzL
Sp1bdVVmhfIMax4nw4qbMruybPXKxVfdmTmn3xvSrLjqgcz1bRbN/aQVk8cz
pW81yM3qrcbnM3cxnLrOYrFqJorO86Kv/HYrhhyUszJaC9KeKzbno9gmZx5Q
ClpxxEaKp+buJ/tiVtwqQwkp/1ihk7riEXlKvMUm0dO/VnxJhUIdfWNxoW7F
+mqUCg/hONveFU9AShev/8iduRXHHqLMRrKpPeFkXMlfn8K1w+NeqPiKWYwo
0jmz+TGKK95gTtl10o77C2nFl2woOu19hll6Kz5wk3LW7sLrP+YrLr1NucnY
1Nlwa9nk63cp9wMMtvXcX4nvfUAJwf+xnwxcib9+SolP0c5gjFl2a2wQhbqf
ysiTumzpynBKRYXqEYlfy84Si6b8s/z8fEvdspW5EykzY5vr9/QuWz/gC4XL
M0Jae27ZtsczKNL8Gy+d5GSi258rl7Lz3fPP58WXXRVYSDm4k2P6muKyzR9X
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
tuCJZ9MEWD5lPZEp/A+pvr2+32kezcfr/eWAP+2ICceDNnMaAYYL3Oa6caEV
aXmzUHuYSRYy4liZ7HobEaudDiU7WGWhz3BwvNG+WqTnV3+eGKcs7LS8Mvtr
oAK5fvZCBvMGWRjR6Gr8lliCjI00JA/yyUKc6twJwZxfiOODk7E1QrKwLqJD
5+TFHGR+Y+EbRFQW9mj5vnPcnomQP2kGx0rKQmXWiPQGy2/IugPfnzzHy0L/
e9NXboknIY9rle+7bpKF5llqkdOEWIT7WqzzhS2yUP9kY7orYxQSiJO+qask
C1tt3X/o/H6JiAS/sN69A7Wp//CJlkAkXGHDWUlVNB+ZnduHbzxFZKgPT7Lu
lYVZCvuM3+c9QN6fXNIZIaJxUSnNk4JkZGv3bVCvibqIST8ecUKS3AZ352ij
FtT5uevhLWQXj/W2hMOoizc6SDVcRr5HN+GDjqHutBvH81xASOoGG++cQO0q
KP1M7CyS86dog40h6h2n0/vSDJBDlgdY9M6gNr+aoPr4OFI89WNhzznUOIJM
isdB5MSTHePSFqiVFdIagiFSIxXfy26NumDrnMEtNcTkq0zr2CXUPazuqYw7
kBadsJrGa6hHwkcjHm9BrP7y/MmzRS39j2D9jID03PLJ/eiAOkLknnu5OHKd
BfcjxBk1/PYrfZ8gMvbSKemeO3b/1nHckQ2I4/bh95fImMfuf1rPiszn2rw+
4YX5wIODCziEbNwcuNcHs+RfF9ZZKvOg4WOCL2aViF7bMeojjz9kLn/MtszP
tvVTuYW0nSYDMbsv2K3rpAbEZ15vfoG5ZzyG/JcqDHZZ/XpFH38iMrOaekTR
ooM5AnNowrRqKfWu2DPL/dH08YcjLudTU9gz2u7FYk7MTRbOonZNd5tTEjGT
9y2JpVFFuwRa55IwQ+3cF0nUY1Wa59W+YTb/0lX5gUrOudF8+zvdzqVikdSv
Sa/OfaHQrfbweSi1501B00g25iw49e45VfzppKlSPmb0xG/4iKrvhm+8Wki3
tbHyfarnZT2TuBK6/aMkXampRu71XRV0Rwln21H7tOOMZWvprr47dIUquaum
1qKR7ozTpy9QT+KZjN620K1WnmdKfcijXNPUQbeX+sgp6vels4aiPXTL/4nU
pQ4MPKoyGqC7p/OZFlW6MfVU8AjdSR8eEKkGvzsqKiboxt3bsZvqk8ZzkmeW
btsXtkrUzBhi+bHF5fj2RjnqcOAV/ScMcpizqiylqPj7L0oL1tFNlngkRD1t
m3echYNu3DElHupjs9E/B7iX7aDBSqXqSh7z4Fsez/sZRx3be7SYKrQcN5uc
psgpOB9dEF2O1+wcpRgLxxSqSy3HWb/2UHzXVRx2Iiw7M7ONkjW+VPB187Lf
ONdTxtu26oxtXXbn4QrKpjLjX9uVl61/oJBiQn1w8PquZds25lCeJab8jFdb
iQtkUHJetmj1aCybfOsLZcqHK09Oc9ll/QkUBSf1Axe0lw25oilnrW1yIg4v
G1cYTvE/FajZfGzZWQlBlDzNrCyxkyvxz08pM9sHwZnTK9frP6BskxRFQkxW
4q/uUs5zHSJVma147jYlYM6ewnthxX43Kfk9ERp6F1ccZ0OZq/mT4Xt1xdrm
FMWfc3sLb674rBHF/MvmH6wOK87XpwRFGqhrO69YRIdS4OeRft99xbqalIU7
n/ZkkVdcp0ZRvtaYuui14jIVygUTNtV9j1YcoUAJ0dn9zfnpis3xlEJVy12p
z1dMFqUsyfp9GQ9eMY6fsoM/c4fKyxVDTooNQ2/yjTer45koYcOCKolRq+MX
Mov/7k/qfb/qiUxc8c3tmxNWPZh5OozoJv551f8yE204f/F+WXVrJuOuej7W
tFXXZZ5h+GC28GPVZZlJJQ7xo9RVF2SyhO+f6spZdVbm2cs8+5vy15yi2vy0
vHDVSZlszIn1+SVrNit3kcusWDPnNUHK+4ZV43BWkboDbn1r/nFDVO3W0Jp5
NHo8bcbWTKnxFDsxt2Yhrowjmzg2/e8CR4W4MoU1S2pNT/xUXLMD70+YobJm
mUTzuhj1Nbu2vWB1O7zmbbosNnKX1+wv04F3jV2zmi6Tq2nimlscCeUaSWtW
Kr5wj5a25j+OnY1ev9bMUfwvyK9rzV6OPSwxspv/t0vRYF9pxJol2o63Hvok
/78vId2LKXEK//sGe60O/LHlf4uJL2VkpW/939KemUxaKdv+d5thuXNvluL/
PjwqIXSfovS/r81ktWqUbv/fE3GLYPG68v9el5n6zrB/zRNMYpLAXuV/qyq/
2oYfW3M0y8WYhzd2/O8RvuZd7pNr9me6ZXzVfuf/1mIcjH99e82zuMuLpU5r
tlwyj9rlvuZds/oDi15rrhtSJvuHrFmqYeTDt+9rrqq7NtedsWaf2h5dUeqa
R6paR+/mrDmntGyfTtGabX4mlTY0rVk0bxt+fcuaS3NiHUDbmtWyIjZG/1sz
R4b/hetDa6Z+50p9O7Jm+3QftoqxNTd9I39UnV6z/9cF2qXZNWt/cT75an7N
c8kT0X8W1/wpyXaaRlvzfxAtzDY=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6257314854042015`*^9, {3.625731553474095*^9, 3.6257316078782063`*^9}, 
   3.6257316624423275`*^9}]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.0 for Microsoft Windows (32-bit) (July 1, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4296, 59, 45, "Input"],
Cell[4857, 81, 106, 1, 45, "Text"],
Cell[4966, 84, 4397, 62, 45, "Input"],
Cell[9366, 148, 98, 1, 45, "Text"],
Cell[CellGroupData[{
Cell[9489, 153, 37047, 1034, 2627, "Input"],
Cell[46539, 1189, 1761, 46, 73, "Output"],
Cell[48303, 1237, 31492, 611, 315, "Output"],
Cell[79798, 1850, 17171, 334, 359, "Output"],
Cell[96972, 2186, 13565, 274, 371, "Output"],
Cell[110540, 2462, 13257, 269, 374, "Output"],
Cell[123800, 2733, 8160, 168, 400, "Output"],
Cell[131963, 2903, 13187, 270, 381, "Output"],
Cell[145153, 3175, 7979, 165, 367, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153169, 3345, 38591, 784, 359, "Input"],
Cell[191763, 4131, 13318, 270, 364, "Output"],
Cell[205084, 4403, 13063, 268, 374, "Output"],
Cell[218150, 4673, 7909, 164, 367, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226096, 4842, 1023, 30, 45, "Input"],
Cell[227122, 4874, 510, 14, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227669, 4893, 1048, 31, 75, "Input"],
Cell[228720, 4926, 508, 14, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229265, 4945, 1427, 44, 104, "Input"],
Cell[230695, 4991, 239, 7, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230971, 5003, 286, 7, 45, "Input"],
Cell[231260, 5012, 1432, 40, 73, "Output"]
}, Open  ]],
Cell[232707, 5055, 542, 18, 45, "Input"],
Cell[CellGroupData[{
Cell[233274, 5077, 610, 16, 45, "Input"],
Cell[233887, 5095, 21070, 357, 361, "Output"]
}, Open  ]],
Cell[254972, 5455, 296, 7, 45, "Input"],
Cell[255271, 5464, 947, 25, 45, "Input"],
Cell[CellGroupData[{
Cell[256243, 5493, 577, 17, 45, "Input"],
Cell[256823, 5512, 20271, 343, 357, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277131, 5860, 399, 11, 45, "Input"],
Cell[277533, 5873, 1240, 44, 148, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278810, 5922, 765, 21, 45, "Input"],
Cell[279578, 5945, 21849, 370, 357, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
